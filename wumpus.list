                      (        amode.asm):00001         ;cocowumpus
                      (        amode.asm):00002         
                      (        amode.asm):00003         ;ROM ROUTINES
     A1CB             (        amode.asm):00004         KBSCAN  EQU $A1CB
                      (        amode.asm):00005         
                      (        amode.asm):00006         ;SAM VIDEO PAGE PAGE
     FFC0             (        amode.asm):00007         SAM_V0_CLR EQU $FFC0
     FFC1             (        amode.asm):00008         SAM_V0_SET EQU $FFC1
     FFC2             (        amode.asm):00009         SAM_V1_CLR EQU $FFC2
     FFC3             (        amode.asm):00010         SAM_V1_SET EQU $FFC3
     FFC4             (        amode.asm):00011         SAM_V2_CLR EQU $FFC4
     FFC5             (        amode.asm):00012         SAM_V2_SET EQU $FFC5
                      (        amode.asm):00013         
                      (        amode.asm):00014         ;SAM PAGE SELECT
                      (        amode.asm):00015         ;ffc6/ffc7   SAM Display Offset bit F0 
                      (        amode.asm):00016         ;ffc8/ffc9   SAM Display Offset bit F1 
                      (        amode.asm):00017         ;ffca/ffcb   SAM Display Offset bit F2 
                      (        amode.asm):00018         ;ffcc/ffcd   SAM Display Offset bit F3 
                      (        amode.asm):00019         ;ffce/ffcf   SAM Display Offset bit F4 
                      (        amode.asm):00020         ;ffd0/ffc1   SAM Display Offset bit F5 
                      (        amode.asm):00021         ;ffd2/ffc3   SAM Display Offset bit F6 
     FFC6             (        amode.asm):00022         SAM_PG_F0_CLR EQU $FFC6
     FFC7             (        amode.asm):00023         SAM_PG_F0_SET EQU $FFC7
     FFC8             (        amode.asm):00024         SAM_PG_F1_CLR EQU $FFC8
     FFC9             (        amode.asm):00025         SAM_PG_F1_SET EQU $FFC9
     FFCA             (        amode.asm):00026         SAM_PG_F2_CLR EQU $FFCA
     FFCB             (        amode.asm):00027         SAM_PG_F2_SET EQU $FFCB
     FFCC             (        amode.asm):00028         SAM_PG_F3_CLR EQU $FFCC
     FFCD             (        amode.asm):00029         SAM_PG_F3_SET EQU $FFCD
     FFCE             (        amode.asm):00030         SAM_PG_F4_CLR EQU $FFCE
     FFCF             (        amode.asm):00031         SAM_PG_F4_SET EQU $FFCF
     FFD0             (        amode.asm):00032         SAM_PG_F5_CLR EQU $FFD0
     FFD1             (        amode.asm):00033         SAM_PG_F5_SET EQU $FFD1
     FFD2             (        amode.asm):00034         SAM_PG_F6_CLR EQU $FFD2
     FFD3             (        amode.asm):00035         SAM_PG_F6_SET EQU $FFD3
                      (        amode.asm):00036         
     FF22             (        amode.asm):00037         VDG_CONTROL EQU $FF22
                      (        amode.asm):00038         
                      (        amode.asm):00039         
                      (        amode.asm):00040                 include snddefs.asm
                      (      snddefs.asm):00001         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (      snddefs.asm):00002         ; DEFINITIONS FOR WORKING WITH SOUND
                      (      snddefs.asm):00003         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (      snddefs.asm):00004         
     A951             (      snddefs.asm):00005         BEEP_SUB        EQU $A951               ; Produces Beep of length B, pitch in $008c
     008C             (      snddefs.asm):00006         BEEP_FREQ       EQU $008C
     A976             (      snddefs.asm):00007         ENABLE_SOUND    EQU     $A976
     A974             (      snddefs.asm):00008         DISABLE_SOUND EQU $A974
     FF01             (      snddefs.asm):00009         PIA_CTRL1               EQU $FF01               ; BIT 
     FF03             (      snddefs.asm):00010         PIA_CTRL2               EQU $FF03               ; BIT 
     FF20             (      snddefs.asm):00011         PIA_DATA                EQU $FF20               ;  PIA DATA BYTE
     FF23             (      snddefs.asm):00012         PIA_SND_ENABLE  EQU $FF23       
                      (      snddefs.asm):00013         
                      (      snddefs.asm):00014         ;A_6; 60 = A#
                      (      snddefs.asm):00015         ; 64 = A (880 HZ)
                      (      snddefs.asm):00016         ; 69 = G# (830 HZ)
                      (      snddefs.asm):00017         ; 73 = G (783 HZ)
                      (      snddefs.asm):00018         ; 78 = F# (749 HZ)
                      (      snddefs.asm):00019         ; 83 = F (698 HZ)
                      (      snddefs.asm):00020         ; 88 = E (659 HZ)
                      (      snddefs.asm):00021         ; 94 = D# (622 HZ)
                      (      snddefs.asm):00022         ; 100 = D (587 HZ)
                      (      snddefs.asm):00023         ; 106 = C# (55 4HZ)
                      (      snddefs.asm):00024         ; 110 = Middle C (523 HZ)
                      (      snddefs.asm):00025         ; 120 = B
                      (      snddefs.asm):00026         ;AS_4 EQU 127; = A#
                      (      snddefs.asm):00027         ;A_4 EQU #135; A (440HZ)
                      (        amode.asm):00041                 
     0010             (        amode.asm):00042         GM_0 EQU  16
     0020             (        amode.asm):00043         GM_1 EQU  32
     0040             (        amode.asm):00044         GM_2 EQU  64
     0008             (        amode.asm):00045         COLOR_BIT EQU 8
     0010             (        amode.asm):00046         WIDTH EQU 16
     0004             (        amode.asm):00047         TILE_BYTE_WIDTH EQU 4
     0018             (        amode.asm):00048         TILE_HEIGHT EQU 24
     02E0             (        amode.asm):00049         ROW_SKIP EQU ((TILE_HEIGHT*32)-32) ; 480
     0040             (        amode.asm):00050         NUM_TILES EQU 64 ; 12 x 8 = 
     0050             (        amode.asm):00051         MAX_ROOMS EQU 80
     0001             (        amode.asm):00052         VISITED EQU 1
     0002             (        amode.asm):00053         WUMPUS EQU 2
     0004             (        amode.asm):00054         PIT EQU 4
     0008             (        amode.asm):00055         DRAFT EQU 8
     0010             (        amode.asm):00056         SLIME EQU 16
     0020             (        amode.asm):00057         BAT EQU 32
     0040             (        amode.asm):00058         MARKED EQU 64 ; used for marking draft/slime
     0080             (        amode.asm):00059         BAT_SEEN EQU 128
                      (        amode.asm):00060         
     00BF             (        amode.asm):00061         CLR_MARK EQU $BF ; 1011 1111
     00EF             (        amode.asm):00062         CLR_SLIME EQU $EF
     00DF             (        amode.asm):00063         CLR_BAT EQU $DF
     007F             (        amode.asm):00064         CLR_BAT_SEEN EQU $7F
     0000             (        amode.asm):00065         DRAW_X EQU 0
     0001             (        amode.asm):00066         DRAW_Y EQU 1
     0002             (        amode.asm):00067         UP EQU 2
     0003             (        amode.asm):00068         DOWN EQU 3
     0004             (        amode.asm):00069         LEFT EQU 4
     0005             (        amode.asm):00070         RIGHT EQU 5
                      (        amode.asm):00071         
     0000             (        amode.asm):00072         EASY EQU 0
     0001             (        amode.asm):00073         MEDIUM EQU 1
     0002             (        amode.asm):00074         HARD EQU 2
                      (        amode.asm):00075         
     0000             (        amode.asm):00076         BLACK EQU 0
     0001             (        amode.asm):00077         BLUE EQU 1
     0002             (        amode.asm):00078         ORANGE EQU 2
     00AA             (        amode.asm):00079         ORANGE_FILL EQU $AA
     0000             (        amode.asm):00080         BLACK_FILL EQU $00
     0055             (        amode.asm):00081         BLUE_FILL EQU $55
     00FF             (        amode.asm):00082         WHITE_FILL EQU $FF
     0003             (        amode.asm):00083         WHITE EQU 3
                      (        amode.asm):00084         
     0000             (        amode.asm):00085         ROOM EQU 0
     0001             (        amode.asm):00086         TUNNEL_1 EQU 1
     0002             (        amode.asm):00087         TUNNEL_2 EQU 2
     0003             (        amode.asm):00088         TUNNEL_3 EQU 3
     0004             (        amode.asm):00089         TUNNEL_4 EQU 4 ; right side of /
                      (        amode.asm):00090         
     0008             (        amode.asm):00091         ROOM_SIZE EQU 8 ; table entry size
                      (        amode.asm):00092         
     0006             (        amode.asm):00093         ROOM_TYPE_OFFSET EQU 6 
     0007             (        amode.asm):00094         ROOM_FLAGS_OFFSET EQU 7
                      (        amode.asm):00095          
     000E             (        amode.asm):00096         DIGIT_HEIGHT EQU 14
     0002             (        amode.asm):00097         DIGIT_WIDTH EQU 2 
     001C             (        amode.asm):00098         DIGIT_SIZE EQU 28
     0008             (        amode.asm):00099         PLAYER_SCORE_X EQU 8 
     0010             (        amode.asm):00100         PIT_SCORE_X EQU 16
     001A             (        amode.asm):00101         WUMPUS_SCORE_X EQU 26
     0050             (        amode.asm):00102         SCORE_Y EQU 80
                      (        amode.asm):00103          
     0E00             (        amode.asm):00104         VRAM EQU $E00
                      (        amode.asm):00105                 ;ORG 0xE00 ; START CODE HERE  (WHEN IT'S A BIN DISK FILE )
                      (        amode.asm):00106                 ;ORG 0x1A00 ; START CODE HERE  (WHEN IT'S A BIN DISK FILE )
                      (        amode.asm):00107                 ORG 0x2600
2600                  (        amode.asm):00108         START
                      (        amode.asm):00109         
2600                  (        amode.asm):00110         main
2600 8600             (        amode.asm):00111                 lda #BLACK_FILL
2602 BD26AB           (        amode.asm):00112                 jsr cls
                      (        amode.asm):00113                 
                      (        amode.asm):00114                 ;save stacks
2605 10FF52BF         (        amode.asm):00115                 sts sstack_save
2609 FF52C1           (        amode.asm):00116                 stu ustack_save
                      (        amode.asm):00117         
260C                  (        amode.asm):00118         reset   
260C 12               (        amode.asm):00119                 nop ; BASIC LOOKS FOR THIS
                      (        amode.asm):00120                 ;restore stacks
260D 10FE52BF         (        amode.asm):00121                 lds sstack_save
2611 FE52C1           (        amode.asm):00122                 ldu ustack_save
                      (        amode.asm):00123                 
2614 BD26BC           (        amode.asm):00124                 jsr setup_sam
                      (        amode.asm):00125                 include calibration.asm
                      (  calibration.asm):00001         ;calibration
                      (  calibration.asm):00002         ;include this file directly (inline)
                      (  calibration.asm):00003         ;it is not a subroutine
                      (  calibration.asm):00004                 
2617 9E72             (  calibration.asm):00005                 ldx $72
2619 BF52C3           (  calibration.asm):00006                 stx rv_save
                      (  calibration.asm):00007                 
261C 8E260C           (  calibration.asm):00008                 ldx #reset ; overwrite warm reset vector
261F 9F72             (  calibration.asm):00009                 stx $72
                      (  calibration.asm):00010                 
2621 86FF             (  calibration.asm):00011                 lda #WHITE_FILL
2623 BD26AB           (  calibration.asm):00012                 jsr cls
2626 8604             (  calibration.asm):00013                 lda #4
2628 C604             (  calibration.asm):00014                 ldb #4
262A BD3295           (  calibration.asm):00015                 jsr set_draw_offset
262D 8E4E04           (  calibration.asm):00016                 ldx #color_calibration
2630 BD3203           (  calibration.asm):00017                 jsr draw_tile
                      (  calibration.asm):00018                 
2633                  (  calibration.asm):00019         @lp2
2633 BDA1CB           (  calibration.asm):00020                 jsr KBSCAN
2636 8100             (  calibration.asm):00021                 cmpa #0
2638 27F9             (  calibration.asm):00022                 beq @lp2
                      (  calibration.asm):00023         
                      (  calibration.asm):00024                 ;replace original warm start vector
263A BE52C3           (  calibration.asm):00025                 ldx rv_save
263D 9F72             (  calibration.asm):00026                 stx $72
                      (  calibration.asm):00027                 
                      (        amode.asm):00126                 
263F BD26E2           (        amode.asm):00127                 jsr draw_title
2642 BD2E58           (        amode.asm):00128                 jsr animate_bat
2645 BD2D40           (        amode.asm):00129                 jsr animate_fall
2648 BD2EBF           (        amode.asm):00130                 jsr get_skill_level
264B BD2FEB           (        amode.asm):00131                 jsr reset_game
264E 8600             (        amode.asm):00132                 lda #BLACK_FILL
2650 BD26AB           (        amode.asm):00133                 jsr cls
2653                  (        amode.asm):00134         @lp
2653 BD27D7           (        amode.asm):00135                 jsr draw_board
2656 BD27F9           (        amode.asm):00136                 jsr draw_player
2659 BDA1CB           (        amode.asm):00137         @k      jsr KBSCAN
265C 8100             (        amode.asm):00138                 cmpa #0
265E 27F9             (        amode.asm):00139                 beq @k
2660 8141             (        amode.asm):00140                 cmpa #'A'
2662 2719             (        amode.asm):00141                 beq @m
2664 8153             (        amode.asm):00142                 cmpa #'S'
2666 2715             (        amode.asm):00143                 beq @m
2668 8157             (        amode.asm):00144                 cmpa #'W'
266A 2711             (        amode.asm):00145                 beq @m
266C 8144             (        amode.asm):00146                 cmpa #'D'
266E 270D             (        amode.asm):00147                 beq @m
2670 8151             (        amode.asm):00148                 cmpa #'Q'
2672 2702             (        amode.asm):00149                 beq @s
2674 20E3             (        amode.asm):00150                 bra @k
2676                  (        amode.asm):00151         @s ;put player in 'shooting state'
2676 8601             (        amode.asm):00152            lda #1
2678 B75296           (        amode.asm):00153            sta shooting
267B 202B             (        amode.asm):00154            bra @x
267D                  (        amode.asm):00155         @m      
267D BD28B3           (        amode.asm):00156                 jsr key_to_offset
2680 3402             (        amode.asm):00157                 pshs a ; save offset
2682 B75295           (        amode.asm):00158                 sta move_dir
2685 B65294           (        amode.asm):00159                 lda player_room
2688 BD2B50           (        amode.asm):00160                 jsr set_room_ptr
268B 3504             (        amode.asm):00161                 puls b ; restore dir offset
268D 3A               (        amode.asm):00162                 abx
268E A684             (        amode.asm):00163                 lda ,x ; load direction
2690 81FF             (        amode.asm):00164                 cmpa #$FF ; invalid dir
2692 2711             (        amode.asm):00165                 beq @er
2694 F65296           (        amode.asm):00166                 ldb shooting
2697 C100             (        amode.asm):00167                 cmpb #0
2699 2705             (        amode.asm):00168                 beq @mv 
269B BD2CB6           (        amode.asm):00169                 jsr shoot_arrow
269E 2008             (        amode.asm):00170                 bra @x
26A0 BD2816           (        amode.asm):00171         @mv     jsr move_player
26A3 2003             (        amode.asm):00172                 bra @x
26A5 BD50DE           (        amode.asm):00173         @er     jsr error_beep
26A8 20A9             (        amode.asm):00174         @x      bra @lp
26AA 39               (        amode.asm):00175                 rts
                      (        amode.asm):00176                 
                      (        amode.asm):00177         ;clears screen with color in A  
26AB                  (        amode.asm):00178         cls
26AB 108E0000         (        amode.asm):00179                 ldy #0
26AF A7A90E00         (        amode.asm):00180         @lp     sta VRAM,y
26B3 3121             (        amode.asm):00181                 leay 1,y
26B5 108C1800         (        amode.asm):00182                 cmpy #6144 ; end of VRAM
26B9 26F4             (        amode.asm):00183                 bne @lp 
26BB 39               (        amode.asm):00184                 rts
                      (        amode.asm):00185                 
                      (        amode.asm):00186         ;pmode 1
26BC                  (        amode.asm):00187         setup_sam
                      (        amode.asm):00188                 ; Full graphic 3-C  11001100 128x96x4   $C00(3072       
26BC 8601             (        amode.asm):00189                 lda #1 
                      (        amode.asm):00190                 ;set SAM mode
26BE B7FFC0           (        amode.asm):00191                 sta SAM_V0_CLR
26C1 B7FFC3           (        amode.asm):00192                 sta SAM_V1_SET
26C4 B7FFC5           (        amode.asm):00193                 sta SAM_V2_SET 
                      (        amode.asm):00194                 ;set page page (7)
26C7 B7FFC7           (        amode.asm):00195                 sta SAM_PG_F0_SET
26CA B7FFC9           (        amode.asm):00196                 sta SAM_PG_F1_SET
26CD B7FFCB           (        amode.asm):00197                 sta SAM_PG_F2_SET
26D0 B7FFCC           (        amode.asm):00198                 sta SAM_PG_F3_CLR
26D3 B7FFCE           (        amode.asm):00199                 sta SAM_PG_F4_CLR
26D6 B7FFD0           (        amode.asm):00200                 sta SAM_PG_F5_CLR
26D9 B7FFD2           (        amode.asm):00201                 sta SAM_PG_F6_CLR
26DC 86FC             (        amode.asm):00202                 lda #$FC
26DE B7FF22           (        amode.asm):00203                 sta VDG_CONTROL 
26E1 39               (        amode.asm):00204                 rts
                      (        amode.asm):00205         
26E2                  (        amode.asm):00206         draw_title
26E2 8655             (        amode.asm):00207                 lda #BLUE_FILL
26E4 BD26AB           (        amode.asm):00208                 jsr cls
26E7 86FF             (        amode.asm):00209                 lda #WHITE_FILL
26E9 3602             (        amode.asm):00210                 pshu a
26EB 86AC             (        amode.asm):00211                 lda #172 ; height
26ED 3602             (        amode.asm):00212                 pshu a
26EF 861C             (        amode.asm):00213                 lda #28 ; width
26F1 3602             (        amode.asm):00214                 pshu a
26F3 8608             (        amode.asm):00215                 lda #8 ;y 
26F5 3602             (        amode.asm):00216                 pshu a
26F7 8602             (        amode.asm):00217                 lda #2  ; x
26F9 3602             (        amode.asm):00218                 pshu a
26FB BD31CA           (        amode.asm):00219                 jsr fill_rect
                      (        amode.asm):00220                 ;
26FE 108E1704         (        amode.asm):00221                 ldy #(VRAM+(768*3)+4)
2702 8E4210           (        amode.asm):00222                 ldx #sprite_wumpus_left 
2705 BD3203           (        amode.asm):00223                 jsr draw_tile
                      (        amode.asm):00224                 ;
2708 3124             (        amode.asm):00225                 leay 4,y
270A 8E4270           (        amode.asm):00226                 ldx #sprite_wumpus_right        
270D BD3203           (        amode.asm):00227                 jsr draw_tile
                      (        amode.asm):00228                 ;
2710 108E1A04         (        amode.asm):00229                 ldy #(VRAM+(768*4)+4)
2714 8E4810           (        amode.asm):00230                 ldx #title_w
2717 BD3203           (        amode.asm):00231                 jsr draw_tile   
271A 3124             (        amode.asm):00232                 leay 4,y
271C 8E4870           (        amode.asm):00233                 ldx #title_u    
271F BD3203           (        amode.asm):00234                 jsr draw_tile
2722 3124             (        amode.asm):00235                 leay 4,y
2724 8E48D0           (        amode.asm):00236                 ldx #title_m    
2727 BD3203           (        amode.asm):00237                 jsr draw_tile
272A 3124             (        amode.asm):00238                 leay 4,y
272C 8E4930           (        amode.asm):00239                 ldx #title_p    
272F BD3203           (        amode.asm):00240                 jsr draw_tile
2732 3124             (        amode.asm):00241                 leay 4,y
2734 8E4990           (        amode.asm):00242                 ldx #title_u2   
2737 BD3203           (        amode.asm):00243                 jsr draw_tile
273A 3124             (        amode.asm):00244                 leay 4,y
273C 8E49F0           (        amode.asm):00245                 ldx #title_s    
273F BD3203           (        amode.asm):00246                 jsr draw_tile   
2742 8E5244           (        amode.asm):00247                 ldx #intro_music
2745 BD508C           (        amode.asm):00248                 jsr play_song
                      (        amode.asm):00249                 ; draw press any key
2748 108E1D0E         (        amode.asm):00250                 ldy #(VRAM+(768*5)+14)
274C 8E4AB0           (        amode.asm):00251                 ldx #press_a_key
274F BD3203           (        amode.asm):00252                 jsr draw_tile
2752 BD307D           (        amode.asm):00253                 jsr any_key
2755 39               (        amode.asm):00254                 rts
                      (        amode.asm):00255         
                      (        amode.asm):00256         ;draws the tallies
2756                  (        amode.asm):00257         draw_score_screen
2756 8655             (        amode.asm):00258                 lda #BLUE_FILL
2758 BD26AB           (        amode.asm):00259                 jsr cls
275B 86FF             (        amode.asm):00260                 lda #WHITE_FILL
                      (        amode.asm):00261                 ;white rect
275D 3602             (        amode.asm):00262                 pshu a
275F 86AC             (        amode.asm):00263                 lda #172 ; height
2761 3602             (        amode.asm):00264                 pshu a
2763 861C             (        amode.asm):00265                 lda #28 ; width
2765 3602             (        amode.asm):00266                 pshu a
2767 8608             (        amode.asm):00267                 lda #8 ;y 
2769 3602             (        amode.asm):00268                 pshu a
276B 8602             (        amode.asm):00269                 lda #2  ; x
276D 3602             (        amode.asm):00270                 pshu a
276F BD31CA           (        amode.asm):00271                 jsr fill_rect
                      (        amode.asm):00272                 ;draw pit
2772 8604             (        amode.asm):00273                 lda #4 ; width
2774 3602             (        amode.asm):00274                 pshu a
2776 8618             (        amode.asm):00275                 lda #24 ; height
2778 3602             (        amode.asm):00276                 pshu a
277A 860D             (        amode.asm):00277                 lda #PIT_SCORE_X-3  ; x,y
277C C632             (        amode.asm):00278                 ldb #50 ; 
277E 108E3A30         (        amode.asm):00279                 ldy #sprite_pit
2782 BD32B8           (        amode.asm):00280                 jsr draw_sprite 
                      (        amode.asm):00281                 ;draw wumpus
2785 8604             (        amode.asm):00282                 lda #4 ; width
2787 3602             (        amode.asm):00283                 pshu a
2789 8618             (        amode.asm):00284                 lda #24 ; height
278B 3602             (        amode.asm):00285                 pshu a
278D 8617             (        amode.asm):00286                 lda #WUMPUS_SCORE_X-3  ; x,y
278F C632             (        amode.asm):00287                 ldb #50 ; 
2791 108E4A50         (        amode.asm):00288                 ldy #tile_wumpus
2795 BD32B8           (        amode.asm):00289                 jsr draw_sprite
                      (        amode.asm):00290                 ;draw player
2798 8604             (        amode.asm):00291                 lda #4 ; width
279A 3602             (        amode.asm):00292                 pshu a
279C 8618             (        amode.asm):00293                 lda #24 ; height
279E 3602             (        amode.asm):00294                 pshu a
27A0 8605             (        amode.asm):00295                 lda #PLAYER_SCORE_X-3  ; x,y
27A2 C632             (        amode.asm):00296                 ldb #50 ; 
27A4 108E4C8C         (        amode.asm):00297                 ldy #player_icon
27A8 BD32B8           (        amode.asm):00298                 jsr draw_sprite
                      (        amode.asm):00299                 ;draw scores
27AB 8608             (        amode.asm):00300                 lda #PLAYER_SCORE_X
27AD C650             (        amode.asm):00301                 ldb #SCORE_Y
27AF 8E52BB           (        amode.asm):00302                 ldx #player_score
27B2 BD309D           (        amode.asm):00303                 jsr draw_score
                      (        amode.asm):00304                 ;
27B5 8610             (        amode.asm):00305                 lda #PIT_SCORE_X
27B7 C650             (        amode.asm):00306                 ldb #SCORE_Y
27B9 8E52B3           (        amode.asm):00307                 ldx #pit_score
27BC BD309D           (        amode.asm):00308                 jsr draw_score
                      (        amode.asm):00309                 ;
27BF 861A             (        amode.asm):00310                 lda #WUMPUS_SCORE_X
27C1 C650             (        amode.asm):00311                 ldb #SCORE_Y
27C3 8E52B7           (        amode.asm):00312                 ldx #wump_score
27C6 BD309D           (        amode.asm):00313                 jsr draw_score
                      (        amode.asm):00314                 ; draw press any key
27C9 108E1D0D         (        amode.asm):00315                 ldy #(VRAM+(768*5)+13)
27CD 8E4AB0           (        amode.asm):00316                 ldx #press_a_key
27D0 BD3203           (        amode.asm):00317                 jsr draw_tile
27D3 BD307D           (        amode.asm):00318                 jsr any_key
27D6 39               (        amode.asm):00319                 rts
                      (        amode.asm):00320                 
27D7                  (        amode.asm):00321         draw_board
27D7 8600             (        amode.asm):00322                 lda #0
                      (        amode.asm):00323         ;       ldx #sprite_data
27D9 8E32F0           (        amode.asm):00324                 ldx #rooms
27DC 108E0E00         (        amode.asm):00325                 ldy #VRAM
27E0                  (        amode.asm):00326         @lp
27E0 3402             (        amode.asm):00327                 pshs a
27E2 EC84             (        amode.asm):00328                 ldd ,x ; get room x,y
27E4 BD3295           (        amode.asm):00329                 jsr set_draw_offset  ; set y based on A
27E7 3502             (        amode.asm):00330                 puls a ; restore room #
27E9 BD28CE           (        amode.asm):00331                 jsr draw_room
27EC 4C               (        amode.asm):00332                 inca 
27ED B15297           (        amode.asm):00333                 cmpa last_room 
27F0 2206             (        amode.asm):00334             bhi @x
27F2 3008             (        amode.asm):00335                 leax ROOM_SIZE,x
27F4 C600             (        amode.asm):00336                 ldb #0
27F6 20E8             (        amode.asm):00337                 bra @lp
27F8 39               (        amode.asm):00338         @x      rts
                      (        amode.asm):00339         
27F9                  (        amode.asm):00340         draw_player
27F9 B65294           (        amode.asm):00341                 lda player_room
27FC C608             (        amode.asm):00342                 ldb #ROOM_SIZE
27FE 3D               (        amode.asm):00343                 mul
27FF 1F01             (        amode.asm):00344                 tfr d,x
2801 308932F0         (        amode.asm):00345                 leax rooms,x
2805 A684             (        amode.asm):00346                 lda ,x  ; x coord of room
2807 E601             (        amode.asm):00347                 ldb 1,x ; y coord of room
2809 BD3295           (        amode.asm):00348                 jsr set_draw_offset
                      (        amode.asm):00349                 ;set transparency to white
280C BD2AFA           (        amode.asm):00350                 jsr mask_white
                      (        amode.asm):00351                 ;ldx #sprite_player
280F BD293B           (        amode.asm):00352                 jsr set_player_sprite
2812 BD3223           (        amode.asm):00353                 jsr mask_tile
2815 39               (        amode.asm):00354                 rts
                      (        amode.asm):00355                 
                      (        amode.asm):00356                 
                      (        amode.asm):00357                 
                      (        amode.asm):00358                 
                      (        amode.asm):00359         ;a contains new room
2816                  (        amode.asm):00360         move_player
2816 B75294           (        amode.asm):00361                 sta player_room 
2819 BD2B50           (        amode.asm):00362                 jsr set_room_ptr
                      (        amode.asm):00363                 ;visit it
281C A607             (        amode.asm):00364                 lda ROOM_FLAGS_OFFSET,x
281E 8A01             (        amode.asm):00365                 ora #VISITED
2820 A707             (        amode.asm):00366                 sta ROOM_FLAGS_OFFSET,x
                      (        amode.asm):00367                 ;is there a wumpus?
2822 A607             (        amode.asm):00368                 lda ROOM_FLAGS_OFFSET,x
2824 8402             (        amode.asm):00369                 anda #WUMPUS
2826 8102             (        amode.asm):00370                 cmpa #WUMPUS
2828 262C             (        amode.asm):00371                 bne @a
282A BD2DBA           (        amode.asm):00372                 jsr animate_wumpus
282D BD2F8A           (        amode.asm):00373                 jsr waste_time
2830 BD2F8A           (        amode.asm):00374                 jsr waste_time
2833 BD2F8A           (        amode.asm):00375                 jsr waste_time
2836 BD2F8A           (        amode.asm):00376                 jsr waste_time
2839 BD2F8A           (        amode.asm):00377                 jsr waste_time
283C BD2F8A           (        amode.asm):00378                 jsr waste_time
283F BD2F8A           (        amode.asm):00379                 jsr waste_time
2842 BD2F8A           (        amode.asm):00380                 jsr waste_time
2845 BD2FC9           (        amode.asm):00381                 jsr reveal_board
2848 8E52B7           (        amode.asm):00382                 ldx #wump_score
284B BD3062           (        amode.asm):00383                 jsr increment_score
284E BD2756           (        amode.asm):00384                 jsr draw_score_screen
2851 BD2FEB           (        amode.asm):00385                 jsr reset_game
2854 205C             (        amode.asm):00386                 bra @x
                      (        amode.asm):00387                 ;is there a pit?
2856 A607             (        amode.asm):00388         @a      lda ROOM_FLAGS_OFFSET,x
2858 8404             (        amode.asm):00389                 anda #PIT
285A 8104             (        amode.asm):00390                 cmpa #PIT
285C 2614             (        amode.asm):00391                 bne @b
285E BD2D40           (        amode.asm):00392                 jsr animate_fall
2861 BD2FC9           (        amode.asm):00393                 jsr reveal_board
2864 8E52B3           (        amode.asm):00394                 ldx #pit_score
2867 BD3062           (        amode.asm):00395                 jsr increment_score
286A BD2756           (        amode.asm):00396                 jsr draw_score_screen
286D BD2FEB           (        amode.asm):00397                 jsr reset_game
2870 2040             (        amode.asm):00398                 bra @x
2872                  (        amode.asm):00399         @b      ;is there a bat?
2872 A607             (        amode.asm):00400                 lda ROOM_FLAGS_OFFSET,x
2874 8420             (        amode.asm):00401                 anda #BAT
2876 8120             (        amode.asm):00402                 cmpa #BAT
2878 2635             (        amode.asm):00403                 bne @m
                      (        amode.asm):00404                 ; has the bat been seen before
287A A607             (        amode.asm):00405                 lda ROOM_FLAGS_OFFSET,x
287C 8480             (        amode.asm):00406                 anda #BAT_SEEN
287E 8180             (        amode.asm):00407                 cmpa #BAT_SEEN
2880 2708             (        amode.asm):00408                 beq @bs
                      (        amode.asm):00409                 ;now the bat has been seen
2882 A607             (        amode.asm):00410                 lda ROOM_FLAGS_OFFSET,x
2884 8A80             (        amode.asm):00411                 ora #BAT_SEEN
2886 A707             (        amode.asm):00412                 sta ROOM_FLAGS_OFFSET,x
2888 2025             (        amode.asm):00413                 bra @m
288A A607             (        amode.asm):00414         @bs     lda ROOM_FLAGS_OFFSET,x ; remove bat
288C 84DF             (        amode.asm):00415                 anda #CLR_BAT
288E 847F             (        amode.asm):00416                 anda #CLR_BAT_SEEN
2890 A707             (        amode.asm):00417                 sta ROOM_FLAGS_OFFSET,x
2892 BD2E58           (        amode.asm):00418                 jsr animate_bat
                      (        amode.asm):00419                 ;move bat
2895 BD29B8           (        amode.asm):00420                 jsr find_non_tunnel
2898 A607             (        amode.asm):00421                 lda ROOM_FLAGS_OFFSET,x
289A 8A20             (        amode.asm):00422                 ora #BAT
289C A707             (        amode.asm):00423                 sta ROOM_FLAGS_OFFSET,x
                      (        amode.asm):00424                 ;move player
289E CC0040           (        amode.asm):00425                 ldd #64
28A1 3606             (        amode.asm):00426                 pshu d
28A3 BD314A           (        amode.asm):00427                 jsr randmod
28A6 3706             (        amode.asm):00428                 pulu d
28A8 1F98             (        amode.asm):00429                 tfr b,a
                      (        amode.asm):00430         ;       stb player_room
                      (        amode.asm):00431         ;       tfr b,a
                      (        amode.asm):00432         ;       jsr set_room_ptr
                      (        amode.asm):00433         ;       lda ROOM_FLAGS_OFFSET,x
                      (        amode.asm):00434         ;       ora #VISITED
                      (        amode.asm):00435         ;       sta ROOM_FLAGS_OFFSET,x 
28AA BD2816           (        amode.asm):00436                 jsr move_player
28AD 2003             (        amode.asm):00437                 bra @x
28AF BD50EF           (        amode.asm):00438         @m      jsr play_footstep
28B2 39               (        amode.asm):00439         @x      rts     
                      (        amode.asm):00440                 
28B3                  (        amode.asm):00441         key_to_offset
28B3 8157             (        amode.asm):00442                 cmpa #'W'
28B5 2604             (        amode.asm):00443                 bne @a
28B7 8602             (        amode.asm):00444                 lda #2
28B9 2012             (        amode.asm):00445                 bra @x
28BB 8153             (        amode.asm):00446         @a  cmpa #'S'
28BD 2604             (        amode.asm):00447                 bne @b
28BF 8603             (        amode.asm):00448                 lda #3
28C1 200A             (        amode.asm):00449                 bra @x
28C3 8141             (        amode.asm):00450         @b      cmpa #'A'
28C5 2604             (        amode.asm):00451                 bne @c
28C7 8604             (        amode.asm):00452                 lda #4
28C9 2002             (        amode.asm):00453                 bra @x
28CB 8605             (        amode.asm):00454         @c      lda #5  ; must be 'D'
28CD 39               (        amode.asm):00455         @x      rts
                      (        amode.asm):00456         
                      (        amode.asm):00457         ;x points to the room entry in the table
                      (        amode.asm):00458         ;if its a room, draw the sprite
                      (        amode.asm):00459         ;if its a tunnel, mask the sprite
28CE                  (        amode.asm):00460         draw_room
28CE 3436             (        amode.asm):00461                 pshs d,x,y
28D0 A607             (        amode.asm):00462                 lda ROOM_FLAGS_OFFSET,x
28D2 8401             (        amode.asm):00463                 anda #VISITED   
28D4 8101             (        amode.asm):00464                 cmpa #VISITED
28D6 2641             (        amode.asm):00465                 bne @x  
28D8 A606             (        amode.asm):00466                 lda ROOM_TYPE_OFFSET,x  
28DA 8100             (        amode.asm):00467                 cmpa #ROOM
28DC 2632             (        amode.asm):00468                 bne @t
28DE 3410             (        amode.asm):00469                 pshs x
28E0 BD297C           (        amode.asm):00470                 jsr set_room_sprite
28E3 BD3203           (        amode.asm):00471                 jsr draw_tile
28E6 3510             (        amode.asm):00472                 puls x
                      (        amode.asm):00473                 ;does is have a  ?
28E8 A607             (        amode.asm):00474                 lda ROOM_FLAGS_OFFSET,x
28EA 8402             (        amode.asm):00475                 anda #WUMPUS
28EC 8102             (        amode.asm):00476                 cmpa #WUMPUS 
28EE 260D             (        amode.asm):00477                 bne @b
28F0 BD2AFA           (        amode.asm):00478                 jsr mask_white
28F3 3410             (        amode.asm):00479                 pshs x
28F5 8E3D30           (        amode.asm):00480                 ldx #sprite_wumpus
28F8 BD3223           (        amode.asm):00481                 jsr mask_tile
28FB 3510             (        amode.asm):00482                 puls x
28FD                  (        amode.asm):00483         @b      ;does is have a bat?
28FD A607             (        amode.asm):00484                 lda ROOM_FLAGS_OFFSET,x
28FF 8420             (        amode.asm):00485                 anda #BAT
2901 8120             (        amode.asm):00486                 cmpa #BAT
2903 2614             (        amode.asm):00487                 bne @x 
2905 BD2AFA           (        amode.asm):00488                 jsr mask_white
2908 8E3D90           (        amode.asm):00489                 ldx #sprite_bat
290B BD3223           (        amode.asm):00490                 jsr mask_tile
290E 2009             (        amode.asm):00491                 bra @x
2910                  (        amode.asm):00492         @t  
2910 BD291C           (        amode.asm):00493                 jsr set_tunnel_sprite
                      (        amode.asm):00494                 ;set transparency to orange
2913 BD2B0B           (        amode.asm):00495                 jsr mask_orange
2916 BD3223           (        amode.asm):00496                 jsr mask_tile
2919 3536             (        amode.asm):00497         @x      puls d,x,y
291B 39               (        amode.asm):00498                 rts
                      (        amode.asm):00499         
                      (        amode.asm):00500         ;a contains room type
                      (        amode.asm):00501         ;post: x points to room
291C                  (        amode.asm):00502         set_tunnel_sprite
291C 8101             (        amode.asm):00503                 cmpa #TUNNEL_1
291E 2605             (        amode.asm):00504                 bne @a
2920 8E3850           (        amode.asm):00505                 ldx #sprite_tunnel_1
2923 2015             (        amode.asm):00506                 bra @x
2925 8102             (        amode.asm):00507         @a  cmpa #TUNNEL_2
2927 2605             (        amode.asm):00508                 bne @b
2929 8E38B0           (        amode.asm):00509                 ldx #sprite_tunnel_2
292C 200C             (        amode.asm):00510                 bra @x
292E 8103             (        amode.asm):00511         @b  cmpa #TUNNEL_3
2930 2605             (        amode.asm):00512                 bne @c
2932 8E3910           (        amode.asm):00513                 ldx #sprite_tunnel_3
2935 2003             (        amode.asm):00514                 bra @x
2937 8E3970           (        amode.asm):00515         @c  ldx #sprite_tunnel_4
293A 39               (        amode.asm):00516         @x      rts
                      (        amode.asm):00517         
                      (        amode.asm):00518         ;sets the x to the player sprite 
                      (        amode.asm):00519         ;based on the type of room the player is in 
                      (        amode.asm):00520         ;if the player is in the wumpus room
                      (        amode.asm):00521         ;the sprite is set to all white (to hide it)
293B                  (        amode.asm):00522         set_player_sprite
293B 3406             (        amode.asm):00523                 pshs d
293D B65294           (        amode.asm):00524                 lda player_room
2940 BD2B50           (        amode.asm):00525                 jsr set_room_ptr
2943 A606             (        amode.asm):00526                 lda ROOM_TYPE_OFFSET,x
2945 E607             (        amode.asm):00527                 ldb ROOM_FLAGS_OFFSET,x
2947 C402             (        amode.asm):00528                 andb #WUMPUS
2949 8100             (        amode.asm):00529                 cmpa #ROOM
294B 260E             (        amode.asm):00530                 bne @a
                      (        amode.asm):00531                 ;its a room
294D C102             (        amode.asm):00532                 cmpb #WUMPUS
294F 2605             (        amode.asm):00533                 bne @r
2951 8E4450           (        amode.asm):00534                 ldx #sprite_white
2954 2023             (        amode.asm):00535                 bra @x
2956 8E3B50           (        amode.asm):00536         @r      ldx #sprite_player
2959 201E             (        amode.asm):00537                 bra @x  
295B 8101             (        amode.asm):00538         @a      cmpa #TUNNEL_1
295D 2605             (        amode.asm):00539                 bne @b
295F 8E3BB0           (        amode.asm):00540                 ldx #sprite_player_up_left
2962 2015             (        amode.asm):00541                 bra @x  
2964 8102             (        amode.asm):00542         @b      cmpa #TUNNEL_2
2966 2605             (        amode.asm):00543                 bne @c
2968 8E3CD0           (        amode.asm):00544                 ldx #sprite_player_down_right ; works-move sprite up
296B 200C             (        amode.asm):00545                 bra @x  
296D 8103             (        amode.asm):00546         @c      cmpa #TUNNEL_3
296F 2605             (        amode.asm):00547                 bne @d
2971 8E3C10           (        amode.asm):00548                 ldx #sprite_player_down_left
2974 2003             (        amode.asm):00549                 bra @x  
2976 8E3C70           (        amode.asm):00550         @d      ldx #sprite_player_up_right  ; type 4
2979 3506             (        amode.asm):00551         @x  puls d
297B 39               (        amode.asm):00552                 rts
                      (        amode.asm):00553                 
                      (        amode.asm):00554         ;sets x to the sprite required
                      (        amode.asm):00555         ;by the room# in a
                      (        amode.asm):00556         ;assume its a room and not a tunnel
297C                  (        amode.asm):00557         set_room_sprite
297C 3426             (        amode.asm):00558                 pshs d,y
297E A607             (        amode.asm):00559                 lda ROOM_FLAGS_OFFSET,x
2980 8404             (        amode.asm):00560                 anda #PIT
2982 8104             (        amode.asm):00561                 cmpa #PIT
2984 2605             (        amode.asm):00562                 bne @a
2986 8E3A30           (        amode.asm):00563                 ldx #sprite_pit
2989 202A             (        amode.asm):00564                 bra @x
298B A607             (        amode.asm):00565         @a  lda ROOM_FLAGS_OFFSET,x
298D 8418             (        amode.asm):00566                 anda #(DRAFT|SLIME)
298F 8118             (        amode.asm):00567                 cmpa #(DRAFT|SLIME)
2991 2605             (        amode.asm):00568                 bne @b
2993 8E3A90           (        amode.asm):00569                 ldx #sprite_draft_slime
2996 201D             (        amode.asm):00570                 bra @x
2998 A607             (        amode.asm):00571         @b      lda ROOM_FLAGS_OFFSET,x
299A 8410             (        amode.asm):00572                 anda #SLIME
299C 8110             (        amode.asm):00573                 cmpa #SLIME
299E 2605             (        amode.asm):00574                 bne @c
29A0 8E39D0           (        amode.asm):00575                 ldx #sprite_room_slime
29A3 2010             (        amode.asm):00576                 bra @x
29A5 A607             (        amode.asm):00577         @c      lda ROOM_FLAGS_OFFSET,x
29A7 8408             (        amode.asm):00578                 anda #DRAFT
29A9 8108             (        amode.asm):00579                 cmpa #DRAFT
29AB 2605             (        amode.asm):00580                 bne @d
29AD 8E3AF0           (        amode.asm):00581                 ldx #sprite_room_draft
29B0 2003             (        amode.asm):00582                 bra @x
29B2 8E37F0           (        amode.asm):00583         @d      ldx #sprite_room
29B5 3526             (        amode.asm):00584         @x      puls d,y
29B7 39               (        amode.asm):00585                 rts
                      (        amode.asm):00586         
                      (        amode.asm):00587          
                      (        amode.asm):00588         
                      (        amode.asm):00589         ;after: x points to room to modify      
29B8                  (        amode.asm):00590         find_non_tunnel
29B8 3404             (        amode.asm):00591                 pshs b ;save b
29BA 3402             (        amode.asm):00592                 pshs a ; create a local var
29BC                  (        amode.asm):00593         @lp
29BC CC0040           (        amode.asm):00594                 ldd #64  
29BF 3606             (        amode.asm):00595                 pshu d
29C1 BD314A           (        amode.asm):00596                 jsr randmod
29C4 3710             (        amode.asm):00597                 pulu x ; pull result
29C6 1F10             (        amode.asm):00598                 tfr x,d ; 16 bit # to d
29C8 1F98             (        amode.asm):00599                 tfr b,a ; lower half to a
29CA A761             (        amode.asm):00600                 sta 1,s  ; save room# in local var
29CC C608             (        amode.asm):00601                 ldb #ROOM_SIZE
29CE 3D               (        amode.asm):00602                 mul
29CF 1F01             (        amode.asm):00603                 tfr d,x
29D1 308932F0         (        amode.asm):00604                 leax rooms,x    
29D5 E606             (        amode.asm):00605                 ldb ROOM_TYPE_OFFSET,x
29D7 C100             (        amode.asm):00606                 cmpb #ROOM
29D9 2702             (        amode.asm):00607                 beq @x
29DB 20DF             (        amode.asm):00608                 bra @lp
29DD                  (        amode.asm):00609         @x      
29DD A661             (        amode.asm):00610                 lda 1,s ; reload room#
29DF 3261             (        amode.asm):00611                 leas 1,s ; pop local var
29E1 3504             (        amode.asm):00612                 puls b ; restore b
29E3 39               (        amode.asm):00613                 rts
                      (        amode.asm):00614                 
                      (        amode.asm):00615         ;makes a / tunnel
                      (        amode.asm):00616         ;the bottom half becomes a new room
                      (        amode.asm):00617         ;at the end of the array        
29E4                  (        amode.asm):00618         make_tunnel_1
29E4 3436             (        amode.asm):00619                 pshs d,x,y
29E6 BD29B8           (        amode.asm):00620                 jsr find_non_tunnel ;sets a,x
29E9 8601             (        amode.asm):00621                 lda #TUNNEL_1
29EB A706             (        amode.asm):00622                 sta ROOM_TYPE_OFFSET,x ; upper /
29ED B65297           (        amode.asm):00623                 lda last_room
29F0 4C               (        amode.asm):00624                 inca
29F1 B75297           (        amode.asm):00625                 sta last_room
                      (        amode.asm):00626                 ;need to set old down's up to new room
29F4 A603             (        amode.asm):00627                 lda DOWN,x
29F6 3602             (        amode.asm):00628                 pshu a ; room to alter
29F8 8602             (        amode.asm):00629                 lda #UP ; direction
29FA 3602             (        amode.asm):00630                 pshu a
29FC B65297           (        amode.asm):00631                 lda last_room ; push current room (dest)
29FF 3602             (        amode.asm):00632                 pshu a
2A01 BD2A9C           (        amode.asm):00633                 jsr set_room_connection
                      (        amode.asm):00634                 ;need to set old right's left to new room
2A04 A605             (        amode.asm):00635                 lda RIGHT,x
2A06 3602             (        amode.asm):00636                 pshu a
2A08 8604             (        amode.asm):00637                 lda #LEFT
2A0A 3602             (        amode.asm):00638                 pshu a
2A0C B65297           (        amode.asm):00639                 lda  last_room ; push current room
2A0F 3602             (        amode.asm):00640                 pshu a
2A11 BD2A9C           (        amode.asm):00641                 jsr set_room_connection
                      (        amode.asm):00642                 ;compute offset of new room
2A14 C608             (        amode.asm):00643                 ldb #ROOM_SIZE
2A16 3D               (        amode.asm):00644                 mul
2A17 1F02             (        amode.asm):00645                 tfr d,y
2A19 31A932F0         (        amode.asm):00646                 leay rooms,y ; y points to new room
2A1D 8602             (        amode.asm):00647                 lda #TUNNEL_2
2A1F A726             (        amode.asm):00648                 sta ROOM_TYPE_OFFSET,y
2A21 A684             (        amode.asm):00649                 lda DRAW_X,x ; copy coorinates
2A23 A7A4             (        amode.asm):00650                 sta DRAW_X,y
2A25 A601             (        amode.asm):00651                 lda DRAW_Y,x
2A27 A721             (        amode.asm):00652                 sta DRAW_Y,y    
2A29 86FF             (        amode.asm):00653                 lda #$FF
2A2B A722             (        amode.asm):00654                 sta UP,y ; can't go left or up in new
2A2D A724             (        amode.asm):00655                 sta LEFT,y
2A2F A605             (        amode.asm):00656                 lda RIGHT,x ; copy right and down rooms
2A31 A725             (        amode.asm):00657                 sta RIGHT,y
2A33 A603             (        amode.asm):00658                 lda DOWN,x
2A35 A723             (        amode.asm):00659                 sta DOWN,y
2A37 86FF             (        amode.asm):00660                 lda #$FF    ; old room can't go right or down now
2A39 A705             (        amode.asm):00661                 sta RIGHT,x
2A3B A703             (        amode.asm):00662                 sta DOWN,x
2A3D 3536             (        amode.asm):00663                 puls d,x,y
2A3F 39               (        amode.asm):00664                 rts
                      (        amode.asm):00665         
                      (        amode.asm):00666         ;makes a \ tunnel
                      (        amode.asm):00667         ;the upper right half becomes a new room
                      (        amode.asm):00668         ;at the end of the array        
2A40                  (        amode.asm):00669         make_tunnel_2
2A40 3436             (        amode.asm):00670                 pshs d,x,y
2A42 BD29B8           (        amode.asm):00671                 jsr find_non_tunnel ;sets a,x
2A45 8603             (        amode.asm):00672                 lda #TUNNEL_3
2A47 A706             (        amode.asm):00673                 sta ROOM_TYPE_OFFSET,x ; upper /
2A49 B65297           (        amode.asm):00674                 lda last_room
2A4C 4C               (        amode.asm):00675                 inca
2A4D B75297           (        amode.asm):00676                 sta last_room
                      (        amode.asm):00677                 ;need to set old up's down to new room
2A50 A602             (        amode.asm):00678                 lda UP,x
2A52 3602             (        amode.asm):00679                 pshu a ; room to alter
2A54 8603             (        amode.asm):00680                 lda #DOWN ; direction
2A56 3602             (        amode.asm):00681                 pshu a
2A58 B65297           (        amode.asm):00682                 lda last_room ; push current room (dest)
2A5B 3602             (        amode.asm):00683                 pshu a
2A5D BD2A9C           (        amode.asm):00684                 jsr set_room_connection
                      (        amode.asm):00685                 ;need to set old right's left to new room
2A60 A605             (        amode.asm):00686                 lda RIGHT,x
2A62 3602             (        amode.asm):00687                 pshu a
2A64 8604             (        amode.asm):00688                 lda #LEFT
2A66 3602             (        amode.asm):00689                 pshu a
2A68 B65297           (        amode.asm):00690                 lda  last_room ; push current room
2A6B 3602             (        amode.asm):00691                 pshu a
2A6D BD2A9C           (        amode.asm):00692                 jsr set_room_connection
                      (        amode.asm):00693                 ;compute offset of new room
2A70 C608             (        amode.asm):00694                 ldb #ROOM_SIZE
2A72 3D               (        amode.asm):00695                 mul
2A73 1F02             (        amode.asm):00696                 tfr d,y
2A75 31A932F0         (        amode.asm):00697                 leay rooms,y ; y points to new room
2A79 8604             (        amode.asm):00698                 lda #TUNNEL_4
2A7B A726             (        amode.asm):00699                 sta ROOM_TYPE_OFFSET,y
2A7D A684             (        amode.asm):00700                 lda DRAW_X,x ; copy coorinates
2A7F A7A4             (        amode.asm):00701                 sta DRAW_X,y
2A81 A601             (        amode.asm):00702                 lda DRAW_Y,x
2A83 A721             (        amode.asm):00703                 sta DRAW_Y,y    
2A85 86FF             (        amode.asm):00704                 lda #$FF
2A87 A723             (        amode.asm):00705                 sta DOWN,y ; can't go left or dwn in new
2A89 A724             (        amode.asm):00706                 sta LEFT,y
2A8B A605             (        amode.asm):00707                 lda RIGHT,x ; copy right and down rooms
2A8D A725             (        amode.asm):00708                 sta RIGHT,y
2A8F A602             (        amode.asm):00709                 lda UP,x
2A91 A722             (        amode.asm):00710                 sta UP,y
2A93 86FF             (        amode.asm):00711                 lda #$FF    ; old room can't go up or right now
2A95 A705             (        amode.asm):00712                 sta RIGHT,x
2A97 A702             (        amode.asm):00713                 sta UP,x
2A99 3536             (        amode.asm):00714                 puls d,x,y
2A9B 39               (        amode.asm):00715                 rts
                      (        amode.asm):00716         
                      (        amode.asm):00717         ;,u = room to alter
                      (        amode.asm):00718         ;1,u = direction
                      (        amode.asm):00719         ;2,u = where it goes
2A9C                  (        amode.asm):00720         set_room_connection
2A9C 3436             (        amode.asm):00721                 pshs d,x,y
2A9E A642             (        amode.asm):00722                 lda 2,u
2AA0 C608             (        amode.asm):00723                 ldb #ROOM_SIZE
2AA2 3D               (        amode.asm):00724                 mul
2AA3 1F01             (        amode.asm):00725                 tfr d,x
2AA5 308932F0         (        amode.asm):00726                 leax rooms,x
2AA9 E641             (        amode.asm):00727                 ldb 1,u
2AAB 3A               (        amode.asm):00728                 abx
2AAC A6C4             (        amode.asm):00729                 lda ,u ; get dest room
2AAE A784             (        amode.asm):00730                 sta ,x
2AB0 3343             (        amode.asm):00731                 leau 3,u  ; clear args
2AB2 3536             (        amode.asm):00732                 puls d,x,y
2AB4 39               (        amode.asm):00733                 rts
                      (        amode.asm):00734         
                      (        amode.asm):00735         ;finds the room that going in the specified
                      (        amode.asm):00736         ;direction from the start room eventually leads
                      (        amode.asm):00737         ;to.
                      (        amode.asm):00738         ;,u = direction
                      (        amode.asm):00739         ;1,u = start room #
                      (        amode.asm):00740         ;result in 'a'
                      (        amode.asm):00741         ;x is modified
2AB5                  (        amode.asm):00742         find_room_end
2AB5 BD2B5E           (        amode.asm):00743                 jsr clear_marks
2AB8 A641             (        amode.asm):00744                 lda 1,u
2ABA BD2B1C           (        amode.asm):00745                 jsr mark_room ; mark start room, sets x
2ABD E6C4             (        amode.asm):00746                 ldb ,u  ; get direction
2ABF 3A               (        amode.asm):00747                 abx
2AC0 A684             (        amode.asm):00748                 lda ,x ; get start room
2AC2 BD2B1C           (        amode.asm):00749         @lp     jsr mark_room  ; mark current room
2AC5 3402             (        amode.asm):00750                 pshs a ; save room
2AC7 C608             (        amode.asm):00751                 ldb #ROOM_SIZE
2AC9 3D               (        amode.asm):00752                 mul
2ACA 1F01             (        amode.asm):00753                 tfr d,x  ; clobbers a
2ACC 308932F0         (        amode.asm):00754                 leax rooms,x
2AD0 3502             (        amode.asm):00755                 puls a  ; restore room
2AD2 E606             (        amode.asm):00756                 ldb ROOM_TYPE_OFFSET,x
2AD4 C100             (        amode.asm):00757                 cmpb #ROOM
2AD6 271F             (        amode.asm):00758                 beq @x
                      (        amode.asm):00759                 ;lda with the non visited direction
2AD8 A602             (        amode.asm):00760                 lda UP,x        
2ADA BD2B30           (        amode.asm):00761                 jsr is_marked
2ADD C100             (        amode.asm):00762                 cmpb #0
2ADF 2714             (        amode.asm):00763                 beq @ct
2AE1 A603             (        amode.asm):00764             lda DOWN,x  
2AE3 BD2B30           (        amode.asm):00765                 jsr is_marked
2AE6 C100             (        amode.asm):00766                 cmpb #0
2AE8 270B             (        amode.asm):00767                 beq @ct
2AEA A604             (        amode.asm):00768             lda LEFT,x  
2AEC BD2B30           (        amode.asm):00769                 jsr is_marked
2AEF C100             (        amode.asm):00770                 cmpb #0
2AF1 2702             (        amode.asm):00771                 beq @ct
2AF3 A605             (        amode.asm):00772                 lda RIGHT,x     ; right is only remaining dir
2AF5 20CB             (        amode.asm):00773         @ct     bra @lp
2AF7 3342             (        amode.asm):00774         @x      leau 2,u ; pop params
2AF9 39               (        amode.asm):00775                 rts
                      (        amode.asm):00776         
                      (        amode.asm):00777                 
                      (        amode.asm):00778         ;sets transparency to white     
2AFA                  (        amode.asm):00779         mask_white
2AFA 3406             (        amode.asm):00780                 pshs d
2AFC FC529C           (        amode.asm):00781                 ldd white_mask
2AFF FD5298           (        amode.asm):00782                 std transparent
2B02 FC529E           (        amode.asm):00783                 ldd white_mask+2
2B05 FD529A           (        amode.asm):00784                 std transparent+2
2B08 3506             (        amode.asm):00785                 puls d
2B0A 39               (        amode.asm):00786                 rts
                      (        amode.asm):00787         
                      (        amode.asm):00788         ;sets transparency to orange
2B0B                  (        amode.asm):00789         mask_orange
2B0B 3406             (        amode.asm):00790                 pshs d
2B0D FC52A0           (        amode.asm):00791                 ldd orange_mask
2B10 FD5298           (        amode.asm):00792                 std transparent
2B13 FC52A2           (        amode.asm):00793                 ldd orange_mask+2
2B16 FD529A           (        amode.asm):00794                 std transparent+2
2B19 3506             (        amode.asm):00795                 puls d
2B1B 39               (        amode.asm):00796                 rts
                      (        amode.asm):00797         
                      (        amode.asm):00798         ;set MARKED flag in room A
                      (        amode.asm):00799         ;x is modified to room entry
2B1C                  (        amode.asm):00800         mark_room
2B1C 3406             (        amode.asm):00801                 pshs d
2B1E C608             (        amode.asm):00802                 ldb #ROOM_SIZE
2B20 3D               (        amode.asm):00803                 mul
2B21 1F01             (        amode.asm):00804                 tfr d,x
2B23 308932F0         (        amode.asm):00805                 leax rooms,x
2B27 A607             (        amode.asm):00806                 lda ROOM_FLAGS_OFFSET,x
2B29 8A40             (        amode.asm):00807                 ora #MARKED
2B2B A707             (        amode.asm):00808                 sta ROOM_FLAGS_OFFSET,x
2B2D 3506             (        amode.asm):00809                 puls d
2B2F 39               (        amode.asm):00810                 rts
                      (        amode.asm):00811                 
                      (        amode.asm):00812         ;sets B to 1 or 0 if room A is marked/not marked
2B30                  (        amode.asm):00813         is_marked
2B30 3412             (        amode.asm):00814                 pshs a,x
2B32 81FF             (        amode.asm):00815                 cmpa #$FF ; invalid room
2B34 2711             (        amode.asm):00816                 beq @y 
2B36 C608             (        amode.asm):00817                 ldb #ROOM_SIZE
2B38 3D               (        amode.asm):00818                 mul
2B39 1F01             (        amode.asm):00819                 tfr d,x
2B3B 308932F0         (        amode.asm):00820                 leax rooms,x
2B3F A607             (        amode.asm):00821                 lda ROOM_FLAGS_OFFSET,x
2B41 8440             (        amode.asm):00822                 anda #MARKED
2B43 8100             (        amode.asm):00823                 cmpa #0
2B45 2704             (        amode.asm):00824                 beq @n
2B47 C601             (        amode.asm):00825         @y      ldb #1
2B49 2002             (        amode.asm):00826                 bra @x
2B4B C600             (        amode.asm):00827         @n  ldb #0
2B4D 3512             (        amode.asm):00828         @x      puls a,x
2B4F 39               (        amode.asm):00829                 rts
                      (        amode.asm):00830         
                      (        amode.asm):00831         ;sets x to point to room in A
2B50                  (        amode.asm):00832         set_room_ptr
2B50 3404             (        amode.asm):00833                 pshs b
2B52 C608             (        amode.asm):00834                 ldb #ROOM_SIZE
2B54 3D               (        amode.asm):00835                 mul
2B55 1F01             (        amode.asm):00836                 tfr d,x
2B57 308932F0         (        amode.asm):00837                 leax rooms,x
2B5B 3504             (        amode.asm):00838                 puls b
2B5D 39               (        amode.asm):00839                 rts
                      (        amode.asm):00840                 
                      (        amode.asm):00841         ;unsets the MARKED bit on all the rooms
                      (        amode.asm):00842         ;no registers affected
2B5E                  (        amode.asm):00843         clear_marks
2B5E 3416             (        amode.asm):00844                 pshs d,x
2B60 8600             (        amode.asm):00845                 lda #0
2B62 C600             (        amode.asm):00846                 ldb #0
2B64 8E32F0           (        amode.asm):00847                 ldx #rooms
2B67                  (        amode.asm):00848         @lp
2B67 A607             (        amode.asm):00849                 lda ROOM_FLAGS_OFFSET,x
2B69 84BF             (        amode.asm):00850                 anda #CLR_MARK
2B6B A707             (        amode.asm):00851                 sta ROOM_FLAGS_OFFSET,x
2B6D 5C               (        amode.asm):00852                 incb 
2B6E F15297           (        amode.asm):00853                 cmpb last_room
2B71 2204             (        amode.asm):00854                 bhi @x
2B73 3008             (        amode.asm):00855                 leax ROOM_SIZE,x
2B75 20F0             (        amode.asm):00856                 bra @lp
2B77 3516             (        amode.asm):00857         @x      puls d,x
2B79 39               (        amode.asm):00858                 rts
                      (        amode.asm):00859         
2B7A                  (        amode.asm):00860         place_player
2B7A 3402             (        amode.asm):00861                 pshs a
2B7C                  (        amode.asm):00862         @lp     
2B7C BD29B8           (        amode.asm):00863                 jsr find_non_tunnel
2B7F A7E4             (        amode.asm):00864                 sta ,s
2B81 A607             (        amode.asm):00865                 lda ROOM_FLAGS_OFFSET,x
2B83 8402             (        amode.asm):00866                 anda #WUMPUS
2B85 8102             (        amode.asm):00867                 cmpa #WUMPUS
2B87 27F3             (        amode.asm):00868                 beq @lp
2B89 A607             (        amode.asm):00869                 lda ROOM_FLAGS_OFFSET,x
2B8B 8404             (        amode.asm):00870                 anda #PIT
2B8D 8104             (        amode.asm):00871                 cmpa #PIT
2B8F 27EB             (        amode.asm):00872                 beq @lp 
2B91 A607             (        amode.asm):00873                 lda ROOM_FLAGS_OFFSET,x
2B93 8420             (        amode.asm):00874                 anda #BAT
2B95 8120             (        amode.asm):00875                 cmpa #BAT
2B97 27E3             (        amode.asm):00876                 beq @lp         
2B99 3502             (        amode.asm):00877                 puls a 
2B9B B75294           (        amode.asm):00878                 sta player_room
                      (        amode.asm):00879                 ;make it visited
2B9E A607             (        amode.asm):00880                 lda ROOM_FLAGS_OFFSET,x
2BA0 8A01             (        amode.asm):00881                 ora #VISITED
2BA2 A707             (        amode.asm):00882                 sta ROOM_FLAGS_OFFSET,x
2BA4 39               (        amode.asm):00883                 rts
                      (        amode.asm):00884         
2BA5                  (        amode.asm):00885         place_bat
2BA5 BD29B8           (        amode.asm):00886                 jsr find_non_tunnel
2BA8 A607             (        amode.asm):00887                 lda ROOM_FLAGS_OFFSET,x
2BAA 8A20             (        amode.asm):00888                 ora #BAT
2BAC A707             (        amode.asm):00889                 sta ROOM_FLAGS_OFFSET,x
2BAE 39               (        amode.asm):00890                 rts
                      (        amode.asm):00891                 
2BAF                  (        amode.asm):00892         place_pit       
2BAF BD29B8           (        amode.asm):00893                 jsr find_non_tunnel
2BB2 1F89             (        amode.asm):00894                 tfr a,b
                      (        amode.asm):00895                 ;make it a pit room
2BB4 A607             (        amode.asm):00896                 lda ROOM_FLAGS_OFFSET,x
2BB6 8A04             (        amode.asm):00897                 ora #PIT
2BB8 A707             (        amode.asm):00898                 sta ROOM_FLAGS_OFFSET,x
2BBA 3404             (        amode.asm):00899                 pshs b ; save start room
2BBC 3604             (        amode.asm):00900             pshu b ; push start room
2BBE 8602             (        amode.asm):00901                 lda #UP
2BC0 3602             (        amode.asm):00902                 pshu a ; push direction
2BC2 BD2AB5           (        amode.asm):00903                 jsr find_room_end
2BC5 A607             (        amode.asm):00904                 lda ROOM_FLAGS_OFFSET,x
2BC7 8A08             (        amode.asm):00905                 ora #DRAFT
2BC9 A707             (        amode.asm):00906                 sta ROOM_FLAGS_OFFSET,x 
                      (        amode.asm):00907                 ;down
2BCB A6E4             (        amode.asm):00908                 lda ,s
2BCD 3602             (        amode.asm):00909                 pshu a
2BCF 8603             (        amode.asm):00910                 lda #DOWN
2BD1 3602             (        amode.asm):00911                 pshu a ; push direction
2BD3 BD2AB5           (        amode.asm):00912                 jsr find_room_end
2BD6 A607             (        amode.asm):00913                 lda ROOM_FLAGS_OFFSET,x
2BD8 8A08             (        amode.asm):00914                 ora #DRAFT
2BDA A707             (        amode.asm):00915                 sta ROOM_FLAGS_OFFSET,x 
                      (        amode.asm):00916                 ;left
2BDC A6E4             (        amode.asm):00917                 lda ,s
2BDE 3602             (        amode.asm):00918                 pshu a
2BE0 8604             (        amode.asm):00919                 lda #LEFT
2BE2 3602             (        amode.asm):00920                 pshu a ; push direction
2BE4 BD2AB5           (        amode.asm):00921                 jsr find_room_end
2BE7 A607             (        amode.asm):00922                 lda ROOM_FLAGS_OFFSET,x
2BE9 8A08             (        amode.asm):00923                 ora #DRAFT
2BEB A707             (        amode.asm):00924                 sta ROOM_FLAGS_OFFSET,x 
                      (        amode.asm):00925                 ;right
2BED A6E4             (        amode.asm):00926                 lda ,s
2BEF 3602             (        amode.asm):00927                 pshu a
2BF1 8605             (        amode.asm):00928                 lda #RIGHT
2BF3 3602             (        amode.asm):00929                 pshu a ; push direction
2BF5 BD2AB5           (        amode.asm):00930                 jsr find_room_end
2BF8 A607             (        amode.asm):00931                 lda ROOM_FLAGS_OFFSET,x
2BFA 8A08             (        amode.asm):00932                 ora #DRAFT
2BFC A707             (        amode.asm):00933                 sta ROOM_FLAGS_OFFSET,x 
2BFE 3502             (        amode.asm):00934                 puls a ; pop local var
2C00 39               (        amode.asm):00935                 rts
                      (        amode.asm):00936                 
2C01                  (        amode.asm):00937         place_wumpus
2C01 BD29B8           (        amode.asm):00938                 jsr find_non_tunnel
2C04 1F89             (        amode.asm):00939                 tfr a,b
2C06 A607             (        amode.asm):00940                 lda ROOM_FLAGS_OFFSET,x
2C08 8A02             (        amode.asm):00941                 ora #WUMPUS
2C0A A707             (        amode.asm):00942                 sta ROOM_FLAGS_OFFSET,x
2C0C 3410             (        amode.asm):00943                 pshs x
                      (        amode.asm):00944                 ;mark up down left,right as having slime
2C0E 3404             (        amode.asm):00945                 pshs b ; save start room
2C10 3604             (        amode.asm):00946             pshu b ; push start room
2C12 8602             (        amode.asm):00947                 lda #UP
2C14 3602             (        amode.asm):00948                 pshu a ; push direction
2C16 BD2AB5           (        amode.asm):00949                 jsr find_room_end
2C19 BD2C69           (        amode.asm):00950                 jsr slime_neighbors
2C1C A607             (        amode.asm):00951                 lda ROOM_FLAGS_OFFSET,x
2C1E 8A10             (        amode.asm):00952                 ora #SLIME
2C20 A707             (        amode.asm):00953                 sta ROOM_FLAGS_OFFSET,x 
                      (        amode.asm):00954                 ;down
2C22 A6E4             (        amode.asm):00955                 lda ,s
2C24 3602             (        amode.asm):00956                 pshu a
2C26 8603             (        amode.asm):00957                 lda #DOWN
2C28 3602             (        amode.asm):00958                 pshu a ; push direction
2C2A BD2AB5           (        amode.asm):00959                 jsr find_room_end
2C2D BD2C69           (        amode.asm):00960                 jsr slime_neighbors
2C30 A607             (        amode.asm):00961                 lda ROOM_FLAGS_OFFSET,x
2C32 8A10             (        amode.asm):00962                 ora #SLIME
2C34 A707             (        amode.asm):00963                 sta ROOM_FLAGS_OFFSET,x 
                      (        amode.asm):00964                 ;left
2C36 A6E4             (        amode.asm):00965                 lda ,s
2C38 3602             (        amode.asm):00966                 pshu a
2C3A 8604             (        amode.asm):00967                 lda #LEFT
2C3C 3602             (        amode.asm):00968                 pshu a ; push direction
2C3E BD2AB5           (        amode.asm):00969                 jsr find_room_end
2C41 BD2C69           (        amode.asm):00970                 jsr slime_neighbors
2C44 A607             (        amode.asm):00971                 lda ROOM_FLAGS_OFFSET,x
2C46 8A10             (        amode.asm):00972                 ora #SLIME
2C48 A707             (        amode.asm):00973                 sta ROOM_FLAGS_OFFSET,x 
                      (        amode.asm):00974                 ;right
2C4A A6E4             (        amode.asm):00975                 lda ,s
2C4C 3602             (        amode.asm):00976                 pshu a
2C4E 8605             (        amode.asm):00977                 lda #RIGHT
2C50 3602             (        amode.asm):00978                 pshu a ; push direction
2C52 BD2AB5           (        amode.asm):00979                 jsr find_room_end
2C55 BD2C69           (        amode.asm):00980                 jsr slime_neighbors
2C58 A607             (        amode.asm):00981                 lda ROOM_FLAGS_OFFSET,x
2C5A 8A10             (        amode.asm):00982                 ora #SLIME
2C5C A707             (        amode.asm):00983                 sta ROOM_FLAGS_OFFSET,x 
2C5E 3502             (        amode.asm):00984                 puls a ; pop local var
2C60 3510             (        amode.asm):00985                 puls x
                      (        amode.asm):00986                 ;clear slime in wumpus room
2C62 A607             (        amode.asm):00987                 lda ROOM_FLAGS_OFFSET,x
2C64 84EF             (        amode.asm):00988                 anda #CLR_SLIME
2C66 A707             (        amode.asm):00989                 sta ROOM_FLAGS_OFFSET,x
2C68 39               (        amode.asm):00990                 rts
                      (        amode.asm):00991         
                      (        amode.asm):00992         ;a contains room to slime
                      (        amode.asm):00993         ;registers preserved
2C69                  (        amode.asm):00994         slime_neighbors
2C69 3436             (        amode.asm):00995                 pshs d,x,y
                      (        amode.asm):00996                 ;mark up down left,right as having slime
2C6B 1F89             (        amode.asm):00997                 tfr a,b
2C6D 3404             (        amode.asm):00998                 pshs b ; save start room
2C6F 3604             (        amode.asm):00999             pshu b ; push start room
2C71 8602             (        amode.asm):01000                 lda #UP
2C73 3602             (        amode.asm):01001                 pshu a ; push direction
2C75 BD2AB5           (        amode.asm):01002                 jsr find_room_end
2C78 A607             (        amode.asm):01003                 lda ROOM_FLAGS_OFFSET,x
2C7A 8A10             (        amode.asm):01004                 ora #SLIME
2C7C A707             (        amode.asm):01005                 sta ROOM_FLAGS_OFFSET,x 
                      (        amode.asm):01006                 ;down
2C7E A6E4             (        amode.asm):01007                 lda ,s
2C80 3602             (        amode.asm):01008                 pshu a
2C82 8603             (        amode.asm):01009                 lda #DOWN
2C84 3602             (        amode.asm):01010                 pshu a ; push direction
2C86 BD2AB5           (        amode.asm):01011                 jsr find_room_end
2C89 A607             (        amode.asm):01012                 lda ROOM_FLAGS_OFFSET,x
2C8B 8A10             (        amode.asm):01013                 ora #SLIME
2C8D A707             (        amode.asm):01014                 sta ROOM_FLAGS_OFFSET,x 
                      (        amode.asm):01015                 ;left
2C8F A6E4             (        amode.asm):01016                 lda ,s
2C91 3602             (        amode.asm):01017                 pshu a
2C93 8604             (        amode.asm):01018                 lda #LEFT
2C95 3602             (        amode.asm):01019                 pshu a ; push direction
2C97 BD2AB5           (        amode.asm):01020                 jsr find_room_end
2C9A A607             (        amode.asm):01021                 lda ROOM_FLAGS_OFFSET,x
2C9C 8A10             (        amode.asm):01022                 ora #SLIME
2C9E A707             (        amode.asm):01023                 sta ROOM_FLAGS_OFFSET,x 
                      (        amode.asm):01024                 ;right
2CA0 A6E4             (        amode.asm):01025                 lda ,s
2CA2 3602             (        amode.asm):01026                 pshu a
2CA4 8605             (        amode.asm):01027                 lda #RIGHT
2CA6 3602             (        amode.asm):01028                 pshu a ; push direction
2CA8 BD2AB5           (        amode.asm):01029                 jsr find_room_end
2CAB A607             (        amode.asm):01030                 lda ROOM_FLAGS_OFFSET,x
2CAD 8A10             (        amode.asm):01031                 ora #SLIME
2CAF A707             (        amode.asm):01032                 sta ROOM_FLAGS_OFFSET,x 
2CB1 3502             (        amode.asm):01033                 puls a ; pop local var
2CB3 3536             (        amode.asm):01034                 puls d,x,y
2CB5 39               (        amode.asm):01035                 rts
                      (        amode.asm):01036         
                      (        amode.asm):01037         ;shoots an arrow into the room in 'a'
2CB6                  (        amode.asm):01038         shoot_arrow
2CB6 BD2CF1           (        amode.asm):01039                 jsr animate_arrow
2CB9 B65294           (        amode.asm):01040                 lda player_room
2CBC 3602             (        amode.asm):01041                 pshu a
2CBE B65295           (        amode.asm):01042                 lda move_dir
2CC1 3602             (        amode.asm):01043                 pshu a  
2CC3 BD2AB5           (        amode.asm):01044                 jsr find_room_end ; set's x
2CC6 A607             (        amode.asm):01045                 lda ROOM_FLAGS_OFFSET,x
2CC8 8402             (        amode.asm):01046                 anda #WUMPUS
2CCA 8102             (        amode.asm):01047                 cmpa #WUMPUS
2CCC 2614             (        amode.asm):01048                 bne @n
                      (        amode.asm):01049                 ;animate win
2CCE BD2EAF           (        amode.asm):01050                 jsr animate_win
2CD1 BD2FC9           (        amode.asm):01051                 jsr reveal_board
2CD4 8E52BB           (        amode.asm):01052                 ldx #player_score
2CD7 BD3062           (        amode.asm):01053                 jsr increment_score
2CDA BD2756           (        amode.asm):01054                 jsr draw_score_screen
2CDD BD2FEB           (        amode.asm):01055                 jsr reset_game
2CE0 2009             (        amode.asm):01056                 bra @x
2CE2 BD2DBA           (        amode.asm):01057         @n  jsr animate_wumpus
2CE5 BD2FC9           (        amode.asm):01058                 jsr reveal_board
2CE8 BD2FEB           (        amode.asm):01059                 jsr reset_game
2CEB 8600             (        amode.asm):01060         @x      lda #0 ; reset shoot flag
2CED B75296           (        amode.asm):01061                 sta shooting
2CF0 39               (        amode.asm):01062                 rts
                      (        amode.asm):01063                 
                      (        amode.asm):01064         ;draws the arrow flying
2CF1                  (        amode.asm):01065         animate_arrow
2CF1 3436             (        amode.asm):01066                 pshs d,x,y
2CF3 8E4EE4           (        amode.asm):01067                 ldx #tunnel_tile_map
2CF6 BD2F9D           (        amode.asm):01068                 jsr draw_tile_map
2CF9 8600             (        amode.asm):01069                 lda #0
2CFB C603             (        amode.asm):01070                 ldb #3
2CFD BD3295           (        amode.asm):01071                 jsr set_draw_offset
2D00 8E3DF0           (        amode.asm):01072                 ldx #sprite_arrow_1
2D03 BD3203           (        amode.asm):01073                 jsr draw_tile
2D06 BD2F8A           (        amode.asm):01074                 jsr waste_time
2D09 BD2F8A           (        amode.asm):01075                 jsr waste_time
2D0C BD2F8A           (        amode.asm):01076                 jsr waste_time
2D0F 8E3E50           (        amode.asm):01077                 ldx #sprite_arrow_2
2D12 BD3203           (        amode.asm):01078                 jsr draw_tile
2D15 BD2F8A           (        amode.asm):01079                 jsr waste_time
2D18                  (        amode.asm):01080         @lp
                      (        amode.asm):01081                 ;overwrite old tile
2D18 8E3FD0           (        amode.asm):01082                 ldx #white_tile
2D1B BD3203           (        amode.asm):01083                 jsr draw_tile
                      (        amode.asm):01084                 ;
2D1E 4C               (        amode.asm):01085                 inca
2D1F 8108             (        amode.asm):01086                 cmpa #8
2D21 271A             (        amode.asm):01087                 beq @d
2D23 BD3295           (        amode.asm):01088                 jsr set_draw_offset
2D26 8E3DF0           (        amode.asm):01089                 ldx #sprite_arrow_1
2D29 BD3203           (        amode.asm):01090                 jsr draw_tile
2D2C BD2F8A           (        amode.asm):01091                 jsr waste_time
2D2F BD2F8A           (        amode.asm):01092                 jsr waste_time
2D32 BD2F8A           (        amode.asm):01093                 jsr waste_time
2D35 8E3E50           (        amode.asm):01094                 ldx #sprite_arrow_2
2D38 BD3203           (        amode.asm):01095                 jsr draw_tile
2D3B 20DB             (        amode.asm):01096                 bra @lp
2D3D                  (        amode.asm):01097         @d
2D3D 3536             (        amode.asm):01098                 puls d,x,y
2D3F 39               (        amode.asm):01099                 rts
                      (        amode.asm):01100         
                      (        amode.asm):01101         ;draws the player falling
2D40                  (        amode.asm):01102         animate_fall
2D40 8E5206           (        amode.asm):01103                 ldx #fall_music
2D43 6F01             (        amode.asm):01104                 clr 1,x ; reset cur sound
2D45 8E4E64           (        amode.asm):01105                 ldx #pit_tile_map
2D48 BD2F9D           (        amode.asm):01106                 jsr draw_tile_map
2D4B 8E4150           (        amode.asm):01107                 ldx #sprite_falling_player_1
2D4E 8603             (        amode.asm):01108                 lda #3
2D50 C600             (        amode.asm):01109                 ldb #0
2D52 BD3295           (        amode.asm):01110                 jsr set_draw_offset
2D55 BD3203           (        amode.asm):01111                 jsr draw_tile
2D58 BD2F8A           (        amode.asm):01112                 jsr waste_time
                      (        amode.asm):01113                 ;music
2D5B 3410             (        amode.asm):01114                 pshs x
2D5D 8E5206           (        amode.asm):01115                 ldx #fall_music
2D60 BD50B3           (        amode.asm):01116                 jsr play_note
2D63 3510             (        amode.asm):01117                 puls x
                      (        amode.asm):01118                 ;end music
2D65 8E41B0           (        amode.asm):01119                 ldx #sprite_falling_player_2
2D68 BD3203           (        amode.asm):01120                 jsr draw_tile
                      (        amode.asm):01121                 ;jsr waste_time
                      (        amode.asm):01122                 ;music
2D6B 3410             (        amode.asm):01123                 pshs x
2D6D 8E5206           (        amode.asm):01124                 ldx #fall_music
2D70 BD50B3           (        amode.asm):01125                 jsr play_note
2D73 3510             (        amode.asm):01126                 puls x
                      (        amode.asm):01127                 ;end music
2D75                  (        amode.asm):01128         @l1 
                      (        amode.asm):01129                 ;erase last tile
2D75 8E4450           (        amode.asm):01130                 ldx #sprite_white
2D78 BD3203           (        amode.asm):01131                 jsr draw_tile
                      (        amode.asm):01132                 ; inc loop counter
2D7B 5C               (        amode.asm):01133                 incb
2D7C C107             (        amode.asm):01134                 cmpb #7
2D7E 272B             (        amode.asm):01135                 beq @d
2D80 3402             (        amode.asm):01136                 pshs a ; save loop counter
2D82 8603             (        amode.asm):01137                 lda #3
2D84 BD3295           (        amode.asm):01138                 jsr set_draw_offset
2D87 3502             (        amode.asm):01139                 puls a ; restore loop counter
2D89 8E4150           (        amode.asm):01140                 ldx #sprite_falling_player_1
2D8C BD3203           (        amode.asm):01141                 jsr draw_tile
                      (        amode.asm):01142                 ;jsr waste_time
                      (        amode.asm):01143                 ;jsr waste_time
                      (        amode.asm):01144                 ;draw 2nd tile
                      (        amode.asm):01145                 ;music
2D8F 3410             (        amode.asm):01146                 pshs x
2D91 8E5206           (        amode.asm):01147                 ldx #fall_music
2D94 BD50B3           (        amode.asm):01148                 jsr play_note
2D97 3510             (        amode.asm):01149                 puls x
                      (        amode.asm):01150                 ;end music
2D99 8E41B0           (        amode.asm):01151                 ldx #sprite_falling_player_2
2D9C BD3203           (        amode.asm):01152                 jsr draw_tile
                      (        amode.asm):01153                 ;jsr waste_time
                      (        amode.asm):01154                 ;music
2D9F 3410             (        amode.asm):01155                 pshs x
2DA1 8E5206           (        amode.asm):01156                 ldx #fall_music
2DA4 BD50B3           (        amode.asm):01157                 jsr play_note
2DA7 3510             (        amode.asm):01158                 puls x
                      (        amode.asm):01159                 ;end music
2DA9 20CA             (        amode.asm):01160                 bra @l1
2DAB                  (        amode.asm):01161         @d      
2DAB 8E4330           (        amode.asm):01162                 ldx #sprite_splat
2DAE BD3203           (        amode.asm):01163                 jsr draw_tile
2DB1 BD307D           (        amode.asm):01164                 jsr any_key
                      (        amode.asm):01165                 ;
2DB4 8600             (        amode.asm):01166                 lda #BLACK_FILL
2DB6 BD26AB           (        amode.asm):01167                 jsr cls
2DB9 39               (        amode.asm):01168                 rts
                      (        amode.asm):01169         
                      (        amode.asm):01170         ;animates the teeth     
2DBA                  (        amode.asm):01171         animate_wumpus
2DBA 86AA             (        amode.asm):01172                 lda #ORANGE_FILL
2DBC BD26AB           (        amode.asm):01173                 jsr cls
2DBF 8E0E00           (        amode.asm):01174                 ldx #VRAM
2DC2 CC0000           (        amode.asm):01175                 ldd #0
2DC5 BD3295           (        amode.asm):01176                 jsr set_draw_offset
2DC8 10BF52A6         (        amode.asm):01177                 sty temp_upper
2DCC 8E4090           (        amode.asm):01178                 ldx #sprite_tooth_upper
2DCF BD2E3F           (        amode.asm):01179                 jsr draw_row
2DD2 8600             (        amode.asm):01180                 lda #0
2DD4 C607             (        amode.asm):01181                 ldb #7
2DD6 BD3295           (        amode.asm):01182                 jsr set_draw_offset
2DD9 10BF52A4         (        amode.asm):01183                 sty temp_lower
2DDD 8E40F0           (        amode.asm):01184                 ldx #sprite_tooth_lower
2DE0 BD2E3F           (        amode.asm):01185                 jsr draw_row
2DE3 8600             (        amode.asm):01186                 lda #0
2DE5                  (        amode.asm):01187         @tl     
                      (        amode.asm):01188                 ;white out old top line
2DE5 10BE52A6         (        amode.asm):01189                 ldy temp_upper
2DE9 8E4450           (        amode.asm):01190                 ldx #sprite_white
2DEC BD2E3F           (        amode.asm):01191                 jsr draw_row
                      (        amode.asm):01192                 ;add 768 to old top
2DEF 31A90300         (        amode.asm):01193                 leay 768,y
2DF3 10BF52A6         (        amode.asm):01194                 sty temp_upper
                      (        amode.asm):01195                 ;draw new line of upper teeth
2DF7 8E4090           (        amode.asm):01196                 ldx #sprite_tooth_upper
2DFA BD2E3F           (        amode.asm):01197                 jsr draw_row
                      (        amode.asm):01198                 ;update loop counter
2DFD BD2F8A           (        amode.asm):01199                 jsr waste_time
2E00 BD2F8A           (        amode.asm):01200                 jsr waste_time
2E03 BD2F8A           (        amode.asm):01201                 jsr waste_time
2E06 4C               (        amode.asm):01202                 inca
2E07 8106             (        amode.asm):01203                 cmpa #6
2E09 2702             (        amode.asm):01204                 beq @d
2E0B 20D8             (        amode.asm):01205                 bra @tl
2E0D                  (        amode.asm):01206         @d      ;draw the eyes
2E0D 8E51D4           (        amode.asm):01207                 ldx #wumpus_music
2E10 6F01             (        amode.asm):01208                 clr 1,x ; reset music
2E12 BD508C           (        amode.asm):01209                 jsr play_song
2E15 BD2F8A           (        amode.asm):01210                 jsr waste_time
2E18 BD2F8A           (        amode.asm):01211                 jsr waste_time
2E1B BD2F8A           (        amode.asm):01212                 jsr waste_time
2E1E BD2F8A           (        amode.asm):01213                 jsr waste_time
2E21 BD2F8A           (        amode.asm):01214                 jsr waste_time
                      (        amode.asm):01215                 ;eyes
2E24 8602             (        amode.asm):01216                 lda #2
2E26 C602             (        amode.asm):01217                 ldb #2
2E28 BD3295           (        amode.asm):01218                 jsr set_draw_offset
2E2B 8E4750           (        amode.asm):01219                 ldx #sprite_left_eye
2E2E BD3203           (        amode.asm):01220                 jsr draw_tile
2E31 8605             (        amode.asm):01221                 lda #5
2E33 C602             (        amode.asm):01222                 ldb #2
2E35 BD3295           (        amode.asm):01223                 jsr set_draw_offset
2E38 8E47B0           (        amode.asm):01224                 ldx #sprite_right_eye
2E3B BD3203           (        amode.asm):01225                 jsr draw_tile
                      (        amode.asm):01226         ;@lp1
                      (        amode.asm):01227         ;       jsr KBSCAN
                      (        amode.asm):01228         ;       cmpa #0
                      (        amode.asm):01229         ;       beq @lp1        
2E3E 39               (        amode.asm):01230                 rts
                      (        amode.asm):01231         
                      (        amode.asm):01232         ;draws the tile in x 8 times
                      (        amode.asm):01233         ;to the address stored in y
2E3F                  (        amode.asm):01234         draw_row
2E3F 3436             (        amode.asm):01235                 pshs d,x,y
2E41 8600             (        amode.asm):01236                 lda #0
2E43                  (        amode.asm):01237         @l2 
2E43 3410             (        amode.asm):01238                 pshs x
2E45 3420             (        amode.asm):01239                 pshs y
2E47 BD3203           (        amode.asm):01240                 jsr draw_tile
2E4A 3520             (        amode.asm):01241                 puls y
2E4C 3124             (        amode.asm):01242                 leay 4,y
2E4E 3510             (        amode.asm):01243                 puls x 
2E50 4C               (        amode.asm):01244                 inca 
2E51 8108             (        amode.asm):01245                 cmpa #8
2E53 25EE             (        amode.asm):01246                 bcs @l2         
2E55 3536             (        amode.asm):01247                 puls d,x,y
2E57 39               (        amode.asm):01248                 rts     
                      (        amode.asm):01249                 
                      (        amode.asm):01250         ;animates the bat flying a player to a new room
2E58                  (        amode.asm):01251         animate_bat
2E58 3436             (        amode.asm):01252                 pshs d,x,y
2E5A 8E4EE4           (        amode.asm):01253                 ldx #tunnel_tile_map
2E5D BD2F9D           (        amode.asm):01254                 jsr draw_tile_map
2E60 8600             (        amode.asm):01255                 lda #0
2E62 C603             (        amode.asm):01256                 ldb #3
2E64 BD3295           (        amode.asm):01257                 jsr set_draw_offset
2E67 8E3EB0           (        amode.asm):01258                 ldx #sprite_player_bat_1
2E6A BD3203           (        amode.asm):01259                 jsr draw_tile
2E6D BD2F8A           (        amode.asm):01260                 jsr waste_time
2E70 BD2F8A           (        amode.asm):01261                 jsr waste_time
2E73 8E3F10           (        amode.asm):01262                 ldx #sprite_player_bat_2
2E76 BD3203           (        amode.asm):01263                 jsr draw_tile
2E79 BD2F8A           (        amode.asm):01264                 jsr waste_time
2E7C BD2F8A           (        amode.asm):01265                 jsr waste_time
2E7F                  (        amode.asm):01266         @lp
                      (        amode.asm):01267                 ;overwrite old tile
2E7F 8E3FD0           (        amode.asm):01268                 ldx #white_tile
2E82 BD3203           (        amode.asm):01269                 jsr draw_tile
                      (        amode.asm):01270                 ;next tile
2E85 4C               (        amode.asm):01271                 inca
2E86 8108             (        amode.asm):01272                 cmpa #8
2E88 271D             (        amode.asm):01273                 beq @d
2E8A BD3295           (        amode.asm):01274                 jsr set_draw_offset
2E8D 8E3EB0           (        amode.asm):01275                 ldx #sprite_player_bat_1
2E90 BD3203           (        amode.asm):01276                 jsr draw_tile
2E93 BD2F8A           (        amode.asm):01277                 jsr waste_time
2E96 BD2F8A           (        amode.asm):01278                 jsr waste_time
2E99 8E3F10           (        amode.asm):01279                 ldx #sprite_player_bat_2
2E9C BD3203           (        amode.asm):01280                 jsr draw_tile
2E9F BD2F8A           (        amode.asm):01281                 jsr waste_time
2EA2 BD2F8A           (        amode.asm):01282                 jsr waste_time
2EA5 20D8             (        amode.asm):01283                 bra @lp
2EA7                  (        amode.asm):01284         @d
2EA7 8600             (        amode.asm):01285                 lda #BLACK_FILL
2EA9 BD26AB           (        amode.asm):01286                 jsr cls
2EAC 3536             (        amode.asm):01287                 puls d,x,y
2EAE 39               (        amode.asm):01288                 rts
                      (        amode.asm):01289                 
                      (        amode.asm):01290         ;animates the victory screen
2EAF                  (        amode.asm):01291         animate_win
2EAF 8E4F64           (        amode.asm):01292                 ldx #win_tile_map
2EB2 BD2F9D           (        amode.asm):01293                 jsr draw_tile_map
2EB5 8E51B7           (        amode.asm):01294                 ldx #win_music
2EB8 BD508C           (        amode.asm):01295                 jsr play_song
2EBB BD307D           (        amode.asm):01296                 jsr any_key
2EBE 39               (        amode.asm):01297                 rts
                      (        amode.asm):01298         
2EBF                  (        amode.asm):01299         get_skill_level
2EBF 8E4FE4           (        amode.asm):01300                 ldx #choose_skill_tile_map
2EC2 BD2F9D           (        amode.asm):01301                 jsr draw_tile_map
2EC5 BD2F01           (        amode.asm):01302                 jsr draw_selected_skill
2EC8                  (        amode.asm):01303         @lp1
2EC8 BDA1CB           (        amode.asm):01304                 jsr KBSCAN
2ECB 8100             (        amode.asm):01305                 cmpa #0
2ECD 27F9             (        amode.asm):01306                 beq @lp1
2ECF 810D             (        amode.asm):01307                 cmpa #$0d  ; cr
2ED1 272D             (        amode.asm):01308                 beq @x
2ED3 8157             (        amode.asm):01309                 cmpa #'W'  ; up?
2ED5 2611             (        amode.asm):01310                 bne @d
2ED7 7A52AB           (        amode.asm):01311                 dec skill_level
2EDA B652AB           (        amode.asm):01312             lda skill_level
2EDD 81FF             (        amode.asm):01313                 cmpa #$ff
2EDF 261A             (        amode.asm):01314                 bne @c
2EE1 8602             (        amode.asm):01315                 lda #2
2EE3 B752AB           (        amode.asm):01316                 sta skill_level
2EE6 2013             (        amode.asm):01317                 bra @c
2EE8 8153             (        amode.asm):01318         @d  cmpa #'S'
2EEA 26DC             (        amode.asm):01319                 bne @lp1
2EEC 7C52AB           (        amode.asm):01320                 inc skill_level
2EEF B652AB           (        amode.asm):01321             lda skill_level
2EF2 8103             (        amode.asm):01322                 cmpa #3
2EF4 2605             (        amode.asm):01323                 bne @c
2EF6 8600             (        amode.asm):01324                 lda #0
2EF8 B752AB           (        amode.asm):01325                 sta skill_level
2EFB BD2F01           (        amode.asm):01326         @c      jsr draw_selected_skill
2EFE 20C8             (        amode.asm):01327                 bra @lp1
2F00 39               (        amode.asm):01328         @x      rts
                      (        amode.asm):01329         
2F01                  (        amode.asm):01330         draw_selected_skill
2F01 3436             (        amode.asm):01331                 pshs d,x,y
2F03 B652AB           (        amode.asm):01332                 lda skill_level
2F06 8100             (        amode.asm):01333                 cmpa #0
2F08 2629             (        amode.asm):01334                 bne @m
2F0A 8602             (        amode.asm):01335                 lda #2
2F0C C603             (        amode.asm):01336                 ldb #3
2F0E BD3295           (        amode.asm):01337                 jsr set_draw_offset
2F11 8E3B50           (        amode.asm):01338                 ldx #sprite_player
2F14 BD3203           (        amode.asm):01339                 jsr draw_tile
2F17 8602             (        amode.asm):01340                 lda #2
2F19 C604             (        amode.asm):01341                 ldb #4
2F1B BD3295           (        amode.asm):01342                 jsr set_draw_offset
2F1E 8E3FD0           (        amode.asm):01343                 ldx #white_tile
2F21 BD3203           (        amode.asm):01344                 jsr draw_tile
2F24 8602             (        amode.asm):01345                 lda #2
2F26 C605             (        amode.asm):01346                 ldb #5
2F28 BD3295           (        amode.asm):01347                 jsr set_draw_offset
2F2B 8E3FD0           (        amode.asm):01348                 ldx #white_tile
2F2E BD3203           (        amode.asm):01349                 jsr draw_tile
2F31 2054             (        amode.asm):01350                 bra @x
2F33 8101             (        amode.asm):01351         @m      cmpa #1
2F35 2629             (        amode.asm):01352                 bne @h
2F37 8602             (        amode.asm):01353                 lda #2
2F39 C603             (        amode.asm):01354                 ldb #3
2F3B BD3295           (        amode.asm):01355                 jsr set_draw_offset
2F3E 8E3FD0           (        amode.asm):01356                 ldx #white_tile
2F41 BD3203           (        amode.asm):01357                 jsr draw_tile
2F44 8602             (        amode.asm):01358                 lda #2
2F46 C604             (        amode.asm):01359                 ldb #4
2F48 BD3295           (        amode.asm):01360                 jsr set_draw_offset
2F4B 8E3B50           (        amode.asm):01361                 ldx #sprite_player
2F4E BD3203           (        amode.asm):01362                 jsr draw_tile
2F51 8602             (        amode.asm):01363                 lda #2
2F53 C605             (        amode.asm):01364                 ldb #5
2F55 BD3295           (        amode.asm):01365                 jsr set_draw_offset
2F58 8E3FD0           (        amode.asm):01366                 ldx #white_tile
2F5B BD3203           (        amode.asm):01367                 jsr draw_tile
2F5E 2027             (        amode.asm):01368                 bra @x
2F60 8602             (        amode.asm):01369         @h      lda #2
2F62 C603             (        amode.asm):01370                 ldb #3
2F64 BD3295           (        amode.asm):01371                 jsr set_draw_offset
2F67 8E3FD0           (        amode.asm):01372                 ldx #white_tile
2F6A BD3203           (        amode.asm):01373                 jsr draw_tile
2F6D 8602             (        amode.asm):01374                 lda #2
2F6F C604             (        amode.asm):01375                 ldb #4
2F71 BD3295           (        amode.asm):01376                 jsr set_draw_offset
2F74 8E3FD0           (        amode.asm):01377                 ldx #white_tile
2F77 BD3203           (        amode.asm):01378                 jsr draw_tile
2F7A 8602             (        amode.asm):01379                 lda #2
2F7C C605             (        amode.asm):01380                 ldb #5
2F7E BD3295           (        amode.asm):01381                 jsr set_draw_offset
2F81 8E3B50           (        amode.asm):01382                 ldx #sprite_player
2F84 BD3203           (        amode.asm):01383                 jsr draw_tile
2F87 3536             (        amode.asm):01384         @x      puls d,x,y
2F89 39               (        amode.asm):01385                 rts
                      (        amode.asm):01386                 
2F8A                  (        amode.asm):01387         waste_time
2F8A 3436             (        amode.asm):01388                 pshs d,x,y
2F8C C60F             (        amode.asm):01389                 ldb #$0F
2F8E                  (        amode.asm):01390         @l1     
2F8E 86FF             (        amode.asm):01391                 lda #$FF
2F90 4A               (        amode.asm):01392         @l2     deca
2F91 8100             (        amode.asm):01393                 cmpa #0
2F93 26FB             (        amode.asm):01394                 bne @l2
2F95 5A               (        amode.asm):01395                 decb
2F96 C100             (        amode.asm):01396                 cmpb #0
2F98 26F4             (        amode.asm):01397                 bne @l1
2F9A 3536             (        amode.asm):01398                 puls d,x,y
2F9C 39               (        amode.asm):01399                 rts
                      (        amode.asm):01400         
                      (        amode.asm):01401         ;x contains addr of tile map
2F9D                  (        amode.asm):01402         draw_tile_map
2F9D 3436             (        amode.asm):01403                 pshs d,x,y
2F9F 8600             (        amode.asm):01404                 lda #0
2FA1 C600             (        amode.asm):01405                 ldb #0
2FA3 108E0E00         (        amode.asm):01406                 ldy #VRAM
2FA7 3410             (        amode.asm):01407         @lp pshs x
2FA9 AE84             (        amode.asm):01408                 ldx ,x
2FAB BD3203           (        amode.asm):01409                 jsr draw_tile
2FAE 3510             (        amode.asm):01410                 puls x
2FB0 3002             (        amode.asm):01411                 leax 2,x ; move to next tile addr
2FB2 3124             (        amode.asm):01412                 leay 4,y ; move 4 bytes over to next tile
2FB4 4C               (        amode.asm):01413                 inca 
2FB5 8140             (        amode.asm):01414                 cmpa #64 ; 64 tiles on screen
2FB7 270D             (        amode.asm):01415             beq @x
2FB9 5C               (        amode.asm):01416                 incb
2FBA C108             (        amode.asm):01417                 cmpb #8
2FBC 26E9             (        amode.asm):01418                 bne @lp
2FBE 31A902E0         (        amode.asm):01419                 leay 768-32,y ; drop down one line of tiles
2FC2 C600             (        amode.asm):01420                 ldb #0
2FC4 20E1             (        amode.asm):01421                 bra @lp
2FC6                  (        amode.asm):01422         @x
2FC6 3536             (        amode.asm):01423                 puls d,x,y
2FC8 39               (        amode.asm):01424                 rts
                      (        amode.asm):01425         
                      (        amode.asm):01426         ;sets the visited bit to true on 
                      (        amode.asm):01427         ;all the rooms
2FC9                  (        amode.asm):01428         reveal_board
2FC9 3436             (        amode.asm):01429                 pshs d,x,y
2FCB 8600             (        amode.asm):01430                 lda #0
2FCD 3402             (        amode.asm):01431         @lp     pshs a
2FCF BD2B50           (        amode.asm):01432                 jsr set_room_ptr
2FD2 A607             (        amode.asm):01433                 lda ROOM_FLAGS_OFFSET,x
2FD4 8A01             (        amode.asm):01434                 ora #VISITED
2FD6 A707             (        amode.asm):01435                 sta ROOM_FLAGS_OFFSET,x
2FD8 3502             (        amode.asm):01436                 puls a
2FDA 4C               (        amode.asm):01437                 inca
2FDB B15297           (        amode.asm):01438                 cmpa last_room
2FDE 25ED             (        amode.asm):01439                 bcs @lp ; <
2FE0 27EB             (        amode.asm):01440                 beq @lp ; = 
2FE2 BD27D7           (        amode.asm):01441                 jsr draw_board
2FE5 BD307D           (        amode.asm):01442                 jsr any_key
2FE8 3536             (        amode.asm):01443                 puls d,x,y
2FEA 39               (        amode.asm):01444                 rts
                      (        amode.asm):01445                 
                      (        amode.asm):01446         ;reinitializes all rooms and places
                      (        amode.asm):01447         ;player and hazards
2FEB                  (        amode.asm):01448         reset_game
2FEB BD304B           (        amode.asm):01449                 jsr reset_rooms
2FEE BD300C           (        amode.asm):01450                 jsr make_tunnels
2FF1 BD2BAF           (        amode.asm):01451                 jsr place_pit
2FF4 BD2BAF           (        amode.asm):01452                 jsr place_pit
2FF7 BD2C01           (        amode.asm):01453                 jsr place_wumpus
2FFA BD2BA5           (        amode.asm):01454                 jsr place_bat
2FFD BD2BA5           (        amode.asm):01455                 jsr place_bat
3000 BD2B7A           (        amode.asm):01456                 jsr place_player        
3003 8600             (        amode.asm):01457                 lda #BLACK_FILL
3005 BD26AB           (        amode.asm):01458                 jsr cls
3008 BD27D7           (        amode.asm):01459                 jsr draw_board
300B 39               (        amode.asm):01460                 rts
                      (        amode.asm):01461         
300C                  (        amode.asm):01462         make_tunnels
300C BD29E4           (        amode.asm):01463                 jsr make_tunnel_1
300F BD29E4           (        amode.asm):01464                 jsr make_tunnel_1
3012 BD2A40           (        amode.asm):01465                 jsr make_tunnel_2
3015 BD2A40           (        amode.asm):01466             jsr make_tunnel_2
3018 B652AB           (        amode.asm):01467                 lda skill_level
301B 8100             (        amode.asm):01468                 cmpa #EASY
301D 272B             (        amode.asm):01469                 beq @x
301F BD29E4           (        amode.asm):01470                 jsr make_tunnel_1
3022 BD29E4           (        amode.asm):01471                 jsr make_tunnel_1
3025 BD2A40           (        amode.asm):01472                 jsr make_tunnel_2
3028 BD2A40           (        amode.asm):01473             jsr make_tunnel_2
302B BD29E4           (        amode.asm):01474                 jsr make_tunnel_1
302E BD2A40           (        amode.asm):01475             jsr make_tunnel_2   
3031 B652AB           (        amode.asm):01476                 lda skill_level
3034 8101             (        amode.asm):01477                 cmpa #MEDIUM
3036 2712             (        amode.asm):01478                 beq @x
3038 BD29E4           (        amode.asm):01479                 jsr make_tunnel_1
303B BD29E4           (        amode.asm):01480                 jsr make_tunnel_1
303E BD2A40           (        amode.asm):01481                 jsr make_tunnel_2
3041 BD2A40           (        amode.asm):01482             jsr make_tunnel_2   
3044 BD2A40           (        amode.asm):01483                 jsr make_tunnel_2
3047 BD2A40           (        amode.asm):01484             jsr make_tunnel_2   
304A 39               (        amode.asm):01485         @x      rts
                      (        amode.asm):01486                 
                      (        amode.asm):01487         ;overwrites the room data with a 'clean' copy
                      (        amode.asm):01488         ;and resets the last room #
304B                  (        amode.asm):01489         reset_rooms
304B 8E32F0           (        amode.asm):01490                 ldx #rooms
304E 108E3570         (        amode.asm):01491                 ldy #initial_room_cfg
3052 A6A0             (        amode.asm):01492         @lp     lda ,y+
3054 A780             (        amode.asm):01493                 sta ,x+
3056 108C37F0         (        amode.asm):01494                 cmpy #end_cfg_data
305A 26F6             (        amode.asm):01495                 bne @lp
305C 863F             (        amode.asm):01496                 lda #63
305E B75297           (        amode.asm):01497                 sta last_room
3061 39               (        amode.asm):01498                 rts
                      (        amode.asm):01499         
                      (        amode.asm):01500         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        amode.asm):01501         ;increments a score up to 999
                      (        amode.asm):01502         ;x points to score data
                      (        amode.asm):01503         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3062                  (        amode.asm):01504         increment_score
3062 6C03             (        amode.asm):01505                 inc 3,x
3064 860A             (        amode.asm):01506                 lda #10
3066 A103             (        amode.asm):01507                 cmpa 3,x
3068 2612             (        amode.asm):01508                 bne @x
                      (        amode.asm):01509                 ;carry into 2nd digit
306A 6F03             (        amode.asm):01510                 clr 3,x
306C 6C02             (        amode.asm):01511                 inc 2,x
306E A102             (        amode.asm):01512                 cmpa 2,x
3070 260A             (        amode.asm):01513                 bne @x
                      (        amode.asm):01514                 ;carry into 3rd digit
3072 6F02             (        amode.asm):01515                 clr 2,x
3074 6C01             (        amode.asm):01516                 inc 1,x
3076 A101             (        amode.asm):01517                 cmpa 1,x
3078 2602             (        amode.asm):01518                 bne @x
                      (        amode.asm):01519                 ;rolled over
307A 6F01             (        amode.asm):01520                 clr 1,x 
307C 39               (        amode.asm):01521         @x      rts
                      (        amode.asm):01522                 
                      (        amode.asm):01523         ;reseeds random seed    
307D                  (        amode.asm):01524         any_key
307D 327F             (        amode.asm):01525                 leas -1,s  ; push local
307F 4F               (        amode.asm):01526                 clra    
3080                  (        amode.asm):01527         @lp
3080 6CE4             (        amode.asm):01528                 inc ,s
3082 BDA1CB           (        amode.asm):01529                 jsr KBSCAN
3085 8100             (        amode.asm):01530                 cmpa #0
3087 27F7             (        amode.asm):01531                 beq @lp
3089 F631BB           (        amode.asm):01532                 ldb CUR_RAND+1 ; left lsb to msb
308C F731BA           (        amode.asm):01533                 stb CUR_RAND
308F A6E4             (        amode.asm):01534                 lda ,s                  ; new lsb 
3091 8100             (        amode.asm):01535                 cmpa #0 
3093 2602             (        amode.asm):01536                 bne @s
3095 8601             (        amode.asm):01537                 lda #1   ; don't let a seed be 0!
3097 B731BB           (        amode.asm):01538         @s      sta CUR_RAND+1
309A 3261             (        amode.asm):01539                 leas 1,s  ; pop local
309C 39               (        amode.asm):01540                 rts
                      (        amode.asm):01541                 
                      (        amode.asm):01542         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        amode.asm):01543         ;draws the score on the screen
                      (        amode.asm):01544         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        amode.asm):01545         ; a = x in 4 pixel units
                      (        amode.asm):01546         ; b = y in pixels`
                      (        amode.asm):01547         ; x contains score data address
309D                  (        amode.asm):01548         draw_score
309D 3436             (        amode.asm):01549                 pshs d,x,y
309F 3402             (        amode.asm):01550                 pshs a ; save x (2,s)
30A1 3404             (        amode.asm):01551                 pshs b ; save y (1,s)
30A3 A684             (        amode.asm):01552                 lda ,x 
30A5 3402             (        amode.asm):01553                 pshs a ; save #digits (,s)
30A7 3003             (        amode.asm):01554                 leax 3,x ; rightmost digit 
30A9 4F               (        amode.asm):01555                 clra ; loop counter
30AA 3402             (        amode.asm):01556         @lp pshs a 
30AC 3410             (        amode.asm):01557                 pshs x  ; data score data addr
30AE A684             (        amode.asm):01558                 lda ,x  ; get digit
30B0 C61C             (        amode.asm):01559                 ldb #DIGIT_SIZE ; in bytes
30B2 3D               (        amode.asm):01560                 mul
30B3 1F02             (        amode.asm):01561                 tfr d,y
30B5 31A94CEC         (        amode.asm):01562                 leay digits,y ; y now has sprite addr
30B9 8602             (        amode.asm):01563                 lda #DIGIT_WIDTH
30BB 3602             (        amode.asm):01564                 pshu a
30BD 860E             (        amode.asm):01565                 lda #DIGIT_HEIGHT
30BF 3602             (        amode.asm):01566                 pshu a  
30C1 A665             (        amode.asm):01567                 lda 5,s ; reload x coord  
30C3 E664             (        amode.asm):01568                 ldb 4,s ; reload y coord  
30C5 BD32B8           (        amode.asm):01569                 jsr draw_sprite ; draw sprite x and addr y
30C8 6A65             (        amode.asm):01570                 dec 5,s ; move left on screen
30CA 6A65             (        amode.asm):01571                 dec 5,s ; move left on screen
30CC 3510             (        amode.asm):01572                 puls x ; restore data addr
30CE 301F             (        amode.asm):01573                 leax -1,x ; move to next digit
30D0 3502             (        amode.asm):01574                 puls a ; reload loop counter
30D2 4C               (        amode.asm):01575                 inca
30D3 A1E4             (        amode.asm):01576             cmpa ,s ; drawn all digits?
30D5 26D3             (        amode.asm):01577                 bne @lp
30D7 3263             (        amode.asm):01578                 leas 3,s   ; pop locals
30D9 3536             (        amode.asm):01579                 puls d,x,y
30DB 39               (        amode.asm):01580                 rts
                      (        amode.asm):01581                 
                      (        amode.asm):01582         
                      (        amode.asm):01583         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        amode.asm):01584         ;PLAYS THE WIN MUSIC 
                      (        amode.asm):01585         ;A IS CLOBBERED
                      (        amode.asm):01586         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
30DC                  (        amode.asm):01587         play_win_music
30DC 8603             (        amode.asm):01588                 lda #3
30DE 3436             (        amode.asm):01589         @lp     pshs d,x,y
30E0 108E0037         (        amode.asm):01590                 ldy     #55             ;length (0.125 x 440hz)
30E4 8687             (        amode.asm):01591                 lda #135                ;a
30E6 B751B2           (        amode.asm):01592                 sta freq
30E9 BD511B           (        amode.asm):01593                 jsr sound_play
30EC 108E0049         (        amode.asm):01594                 ldy     #73             ;length (0.125 x 587)
30F0 8664             (        amode.asm):01595                 lda #100                ;d
30F2 B751B2           (        amode.asm):01596                 sta freq
30F5 BD511B           (        amode.asm):01597                 jsr sound_play
30F8 108E006E         (        amode.asm):01598                 ldy     #110            ;length (0.125 x  749)
30FC 864E             (        amode.asm):01599                 lda #78         ;f#
30FE B751B2           (        amode.asm):01600                 sta freq
3101 BD511B           (        amode.asm):01601                 jsr sound_play  
3104 3536             (        amode.asm):01602                 puls y,x,d
3106 4A               (        amode.asm):01603                 deca
3107 8100             (        amode.asm):01604                 cmpa #0
3109 26D3             (        amode.asm):01605                 bne @lp
310B 39               (        amode.asm):01606                 rts             
                      (        amode.asm):01607                 
                      (        amode.asm):01608                 include math.asm
                      (         math.asm):00001         ;mod10
                      (         math.asm):00002         
                      (         math.asm):00003         ;a contains value
                      (         math.asm):00004         ;b contains mod
310C                  (         math.asm):00005         mod8
310C 3430             (         math.asm):00006                 pshs x,y
310E 3604             (         math.asm):00007                 pshu b
3110 A1C4             (         math.asm):00008         @lp     cmpa ,u
3112 2504             (         math.asm):00009                 bcs @x
3114 A0C4             (         math.asm):00010                 suba ,u ; subtract value
3116 20F8             (         math.asm):00011                 bra @lp
3118 3341             (         math.asm):00012         @x  leau 1,u ; remove val we pushed
311A 3530             (         math.asm):00013                 puls y,x
311C 39               (         math.asm):00014                 rts
                      (         math.asm):00015         
                      (         math.asm):00016         ;16 bit mod
                      (         math.asm):00017         ;top of stack is number
                      (         math.asm):00018         ;under it is divisor
                      (         math.asm):00019         ;the result is returned on the stack
311D                  (         math.asm):00020         mod2b
311D 3436             (         math.asm):00021                 pshs d,x,y
311F 3706             (         math.asm):00022                 pulu d ; get number
3121 10A3C4           (         math.asm):00023         @lp cmpd ,u
3124 2504             (         math.asm):00024                 bcs @x
3126 A3C4             (         math.asm):00025                 subd ,u
3128 20F7             (         math.asm):00026                 bra @lp
312A 3710             (         math.asm):00027         @x      pulu x  ; pop divisor
312C 3606             (         math.asm):00028                 pshu d ; put result on stack
312E 3536             (         math.asm):00029                 puls y,x,d
3130 39               (         math.asm):00030                 rts
                      (         math.asm):00031                         
                      (         math.asm):00032         ;divide a by b
                      (         math.asm):00033         ;result in a
3131                  (         math.asm):00034         div8
3131 3430             (         math.asm):00035                 pshs x,y
3133 3604             (         math.asm):00036                 pshu b  ; push divisor
3135 C600             (         math.asm):00037                 ldb #0  ; pushs result
3137 3604             (         math.asm):00038                 pshu b  ; 
3139 A141             (         math.asm):00039         @lp cmpa 1,u
313B 2506             (         math.asm):00040             bcs @x
313D A041             (         math.asm):00041                 suba 1,u
313F 6CC4             (         math.asm):00042                 inc  ,u ; 
3141 20F6             (         math.asm):00043                 bra @lp
3143 A6C4             (         math.asm):00044         @x  lda ,u  ; put result in reg a
3145 3342             (         math.asm):00045                 leau 2,u ; pop 2 params leaving result on stack
3147 3530             (         math.asm):00046                 puls y,x
3149 39               (         math.asm):00047                 rts
                      (         math.asm):00048         
                      (        amode.asm):01609                 include random.asm
                      (       random.asm):00001         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (       random.asm):00002         ;NEXT_RAND
                      (       random.asm):00003         ;THIS SUBROUTINE USES A LINEAR SHIFT
                      (       random.asm):00004         ;TO IMPLEMENT RANDOM NUMBER GENERATION
                      (       random.asm):00005         ;THE TAPS ARE BITS 0 AND 3
                      (       random.asm):00006         ;
                      (       random.asm):00007         ;THE SEED (CUR_RAND) SHOULD BE LOADED BEFORE 
                      (       random.asm):00008         ;THIS ROUTINE IS CALLED.  JUST DON'T LOAD
                      (       random.asm):00009         ;IT WITH ALL ZEROS TO START 0
                      (       random.asm):00010         ;
                      (       random.asm):00011         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (       random.asm):00012         
                      (       random.asm):00013         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (       random.asm):00014         ;user stack contains divisor (16 bit)
                      (       random.asm):00015         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;       
314A                  (       random.asm):00016         randmod
314A 3436             (       random.asm):00017                 pshs d,x,y
314C BD3155           (       random.asm):00018                 jsr rand        ; puts number on stack  
314F BD311D           (       random.asm):00019                 jsr mod2b   ; leaves number on stack
3152 3536             (       random.asm):00020                 puls y,x,d
3154 39               (       random.asm):00021                 rts
                      (       random.asm):00022         
                      (       random.asm):00023         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (       random.asm):00024         ;LSR RANDOM NUMBER GENERATOR
                      (       random.asm):00025         ;ALL REGISTERS ARE PRESERVED
                      (       random.asm):00026         ;number is returned on the user stack
                      (       random.asm):00027         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3155                  (       random.asm):00028         rand
3155 3416             (       random.asm):00029                 PSHS D,x
3157 F631BB           (       random.asm):00030                 LDB CUR_RAND+1 ; GET RIGHT BYTE
315A F431BF           (       random.asm):00031                 ANDB LEFT_TAP_MASK ; MASK RAND TO GET LEFT TAP  
315D F731C1           (       random.asm):00032                 STB LEFT_TAP                    ;SAVE IT
3160 F631BB           (       random.asm):00033                 LDB CUR_RAND+1          ;RELOAD
3163 F431C0           (       random.asm):00034                 ANDB RIGHT_TAP_MASK     ; MASK RAND TO GET RIGHT TAP
                      (       random.asm):00035                 ;RIGHT TAP IS THE LSB (SO WE DON'T NEED TO SHIFT)
3166 F731C2           (       random.asm):00036                 STB RIGHT_TAP
3169 7831C2           (       random.asm):00037                 LSL RIGHT_TAP   ;LEFT JUSTIFY THE RIGHT TAP 
316C 7831C2           (       random.asm):00038                 LSL RIGHT_TAP   ;SO THE TWO TAPS CAN BE 
316F 7831C2           (       random.asm):00039                 LSL RIGHT_TAP   ;XOR'D AND EASILY
3172 7831C2           (       random.asm):00040                 LSL RIGHT_TAP   ;MASKED BACK ONTO THE LEFT
3175 7831C2           (       random.asm):00041                 LSL RIGHT_TAP   ;BYTE OF THE RANDOM NUMBER
3178 7831C2           (       random.asm):00042                 LSL RIGHT_TAP
317B 7831C2           (       random.asm):00043                 LSL RIGHT_TAP
                      (       random.asm):00044                 ;NOW WE HAVE BOTH TAPS, XOR THEM
317E B631C1           (       random.asm):00045                 LDA LEFT_TAP
3181 B831C2           (       random.asm):00046                 EORA RIGHT_TAP  
3184 B731C3           (       random.asm):00047                 STA XOR_RSLT
                      (       random.asm):00048                 ;NOW SHIFT
3187 FC31BA           (       random.asm):00049                 LDD CUR_RAND    ;LOAD LEFT BYTE
318A 44               (       random.asm):00050                 LSRA ; PUTS BIT 0 INTO CARRY BIT 
318B B731BA           (       random.asm):00051                 STA CUR_RAND ; STORE NEW MSB
318E 2409             (       random.asm):00052                 BCC @nc
3190 F631BB           (       random.asm):00053                 LDB     CUR_RAND+1      ;THERE WAS A CARRY
3193 54               (       random.asm):00054                 LSRB
3194 FA31BE           (       random.asm):00055                 ORB ONE_IN_MSB ;  MASK A 1 ONTO THE LEFT MOST BIT
3197 2004             (       random.asm):00056                 BRA @ds  ;  DONE SHIFTING
3199                  (       random.asm):00057         @nc     
3199 F631BB           (       random.asm):00058                 LDB     CUR_RAND+1 ; JUST SHIFT, NO 1 ON LEFT
319C 54               (       random.asm):00059                 LSRB
319D F731BB           (       random.asm):00060         @ds STB CUR_RAND+1      ; STORE RIGHT HALF OF NEW RAND
                      (       random.asm):00061                 ;NOW MASK THE XOR_RSLT ONTO THE MSB
31A0 B631BA           (       random.asm):00062                 LDA CUR_RAND
31A3 BA31C3           (       random.asm):00063                 ORA XOR_RSLT    ; MASK A '1' ONTO THE MSB
31A6 B731BA           (       random.asm):00064                 STA CUR_RAND
                      (       random.asm):00065                 ;SUBTRACT 1 SINCE THE WORKING RAND CAN'T CONTAIN 0
31A9 FC31BA           (       random.asm):00066                 LDD CUR_RAND    ; RELOAD 2 BYTE VALUE
31AC 830001           (       random.asm):00067                 SUBD #1         ; DEC
31AF FD31BC           (       random.asm):00068                 STD RAND                        
31B2 BE31BA           (       random.asm):00069                 ldx CUR_RAND 
31B5 3610             (       random.asm):00070                 pshu x
31B7 3516             (       random.asm):00071                 PULS x,D
31B9 39               (       random.asm):00072                 RTS     
                      (       random.asm):00073         
                      (       random.asm):00074         ;DATA FOR RANDOM NUMBER GENERATION
31BA 0F0F             (       random.asm):00075         CUR_RAND                        .DW 0x0F0F
31BC 0000             (       random.asm):00076         RAND                            .DW 0x0000
31BE 80               (       random.asm):00077         ONE_IN_MSB              .DB 0x80
31BF 80               (       random.asm):00078         LEFT_TAP_MASK   .DB 0x80 ; 1000 0000
31C0 01               (       random.asm):00079         RIGHT_TAP_MASK  .DB 0x01 ; 0000 0001
31C1 00               (       random.asm):00080         LEFT_TAP                .DB 0x00
31C2 00               (       random.asm):00081         RIGHT_TAP               .DB 0x00
31C3 00               (       random.asm):00082         XOR_RSLT                        .BYTE 0x00
31C4                  (       random.asm):00083         OUTPUT
31C4 0000             (       random.asm):00084                 .DW 0X0000
31C6 0000             (       random.asm):00085                 .DW 0X0000
31C8 0000             (       random.asm):00086                 .DW 0X0000
                      (        amode.asm):01610                 include drawing.asm
                      (      drawing.asm):00001         ;,u = x ; in units of 4 pixels (one byte)
                      (      drawing.asm):00002         ;1,u = y ; in pixels (height is 192 )
                      (      drawing.asm):00003         ;2,u = w ; in units of 4 pixels (one byte)
                      (      drawing.asm):00004         ;3,u = h ; in units of 4 pixels (one byte)
                      (      drawing.asm):00005         ;4,u = fill color
31CA                  (      drawing.asm):00006         fill_rect
31CA 3436             (      drawing.asm):00007                 pshs d,x,y
31CC 8600             (      drawing.asm):00008                 lda #0
31CE 3402             (      drawing.asm):00009                 pshs a ; loop counter
                      (      drawing.asm):00010                 ;compute v skip amount
31D0 8620             (      drawing.asm):00011                 lda #32
31D2 A042             (      drawing.asm):00012                 suba 2,u
31D4 3402             (      drawing.asm):00013                 pshs a  ; push skip amount
31D6 8620             (      drawing.asm):00014                 lda #32 ; row width in bytes
31D8 E641             (      drawing.asm):00015                 ldb 1,u ; y
31DA 3D               (      drawing.asm):00016                 mul
31DB 1F01             (      drawing.asm):00017                 tfr d,x
31DD 30890E00         (      drawing.asm):00018                 leax VRAM,x
31E1 E6C4             (      drawing.asm):00019                 ldb ,u  ; x
31E3 3A               (      drawing.asm):00020                 abx
31E4 8600             (      drawing.asm):00021                 lda #0 ; col counter 
31E6                  (      drawing.asm):00022         @lp ;
31E6 3402             (      drawing.asm):00023                 pshs a 
31E8 A644             (      drawing.asm):00024                 lda 4,u ; fill square 
31EA A780             (      drawing.asm):00025                 sta ,x+
31EC 3502             (      drawing.asm):00026                 puls a
31EE 4C               (      drawing.asm):00027                 inca
31EF A142             (      drawing.asm):00028                 cmpa 2,u ; filled a row?
31F1 2609             (      drawing.asm):00029                 bne @c
                      (      drawing.asm):00030                 ;skip one row ()
31F3 8600             (      drawing.asm):00031                 lda #0  ; reset x counter
31F5 E6E4             (      drawing.asm):00032                 ldb ,s  ; skip amount
31F7 3A               (      drawing.asm):00033                 abx  ; b is how many bytes to drop   
31F8 6A43             (      drawing.asm):00034                 dec 3,u ; dec row counter
31FA 2702             (      drawing.asm):00035                 beq @x
31FC                  (      drawing.asm):00036         @c      ;
31FC 20E8             (      drawing.asm):00037                 bra @lp
31FE 3262             (      drawing.asm):00038         @x      leas 2,s ; pop 2 params
3200 3536             (      drawing.asm):00039                 puls d,x,y
3202 39               (      drawing.asm):00040                 rts
                      (      drawing.asm):00041         
                      (      drawing.asm):00042         ;copies a 16x16 tile to the 
                      (      drawing.asm):00043         ;coords must be multiples of 4
                      (      drawing.asm):00044         ;x contains the sprite addr
                      (      drawing.asm):00045         ;y contains dest addr
                      (      drawing.asm):00046         ;no screen bounds checking
3203                  (      drawing.asm):00047         draw_tile
3203 3436             (      drawing.asm):00048                 pshs d,x,y
3205 8600             (      drawing.asm):00049                 lda #0
3207                  (      drawing.asm):00050         @ol     
3207 C600             (      drawing.asm):00051                 ldb #0  ; inner loop counter
3209 3402             (      drawing.asm):00052         @il     pshs a
320B A680             (      drawing.asm):00053                 lda ,x+
320D A7A4             (      drawing.asm):00054                 sta ,y
320F 3502             (      drawing.asm):00055                 puls a
3211 3121             (      drawing.asm):00056                 leay 1,y
3213 5C               (      drawing.asm):00057                 incb
3214 C104             (      drawing.asm):00058                 cmpb #4 ; sprites are 4 bytes wide
3216 26F1             (      drawing.asm):00059                 bne @il 
3218 31A81C           (      drawing.asm):00060                 leay 28,y       ;drop down a line
321B 4C               (      drawing.asm):00061                 inca    
321C 8118             (      drawing.asm):00062                 cmpa #TILE_HEIGHT ;sprites are 16 rows tall
321E 26E7             (      drawing.asm):00063                 bne @ol
3220 3536             (      drawing.asm):00064                 puls y,x,d
3222 39               (      drawing.asm):00065                 rts
                      (      drawing.asm):00066         
                      (      drawing.asm):00067         ;this masks a tile on the vram
                      (      drawing.asm):00068         ;if a src pixel is white, it is not drawn
                      (      drawing.asm):00069         ;used for drawing the player, pit, and bat
3223                  (      drawing.asm):00070         mask_tile
3223 3436             (      drawing.asm):00071                 pshs d,x,y
3225 8600             (      drawing.asm):00072                 lda #0
3227                  (      drawing.asm):00073         @ol     
3227 3402             (      drawing.asm):00074                 pshs a  ; save loop counter
3229 C600             (      drawing.asm):00075                 ldb #0  ; inner loop counter
322B A684             (      drawing.asm):00076         @il     lda ,x  ;get the byte to draw
322D 84C0             (      drawing.asm):00077                 anda #$C0  ; 11000000 mask upper bits
                      (      drawing.asm):00078         ;       cmpa #$C0  
322F B15298           (      drawing.asm):00079                 cmpa transparent
3232 270C             (      drawing.asm):00080                 beq @s1 ; it's white, skip it
3234 3402             (      drawing.asm):00081                 pshs a
3236 A6A4             (      drawing.asm):00082                 lda ,y  ; dest already drawn byte
3238 843F             (      drawing.asm):00083                 anda #3Fh  ;00111111 clear top bits
323A AAE4             (      drawing.asm):00084                 ora ,s   ;or bits onto dest
323C A7A4             (      drawing.asm):00085             sta ,y  ; write it back
323E 3502             (      drawing.asm):00086                 puls a  ; clear temp
3240 A684             (      drawing.asm):00087         @s1 lda ,x  ; reload sprite bite
3242 8430             (      drawing.asm):00088                 anda #$30  ; 00110000 mask upper bits
                      (      drawing.asm):00089                 ;cmpa #$30  ; is it white?
3244 B15299           (      drawing.asm):00090                 cmpa transparent+1
3247 270C             (      drawing.asm):00091                 beq @s2
3249 3402             (      drawing.asm):00092                 pshs a  
324B A6A4             (      drawing.asm):00093             lda ,y  ; dest already drawn byte
324D 84CF             (      drawing.asm):00094                 anda #$CF  ;11001111 bits 4,5
324F AAE4             (      drawing.asm):00095                 ora ,s   ;or bits onto dest
3251 A7A4             (      drawing.asm):00096             sta ,y  ; write it back
3253 3502             (      drawing.asm):00097                 puls a   ; clear temp 
3255 A684             (      drawing.asm):00098         @s2     lda ,x  ; reload sprite bite
3257 840C             (      drawing.asm):00099                 anda #12  ; 00001100 mask upper bits
                      (      drawing.asm):00100                 ;cmpa #12  ; is it white?
3259 B1529A           (      drawing.asm):00101                 cmpa transparent+2
325C 270C             (      drawing.asm):00102                 beq @s3
325E 3402             (      drawing.asm):00103                 pshs a  
3260 A6A4             (      drawing.asm):00104             lda ,y  ; dest already drawn byte
3262 84F3             (      drawing.asm):00105                 anda #$F3  ;11110011 bits 2,3
3264 AAE4             (      drawing.asm):00106                 ora ,s   ;or bits onto dest
3266 A7A4             (      drawing.asm):00107             sta ,y  ; write it back
3268 3502             (      drawing.asm):00108                 puls a   ; clear temp 
326A A684             (      drawing.asm):00109         @s3 lda ,x  ; reload sprite bite
326C 8403             (      drawing.asm):00110                 anda #3  ; 00000011 mask upper bits
                      (      drawing.asm):00111                 ;cmpa #3  ; is it white?
326E B1529B           (      drawing.asm):00112                 cmpa transparent+3
3271 270C             (      drawing.asm):00113                 beq @c
3273 3402             (      drawing.asm):00114                 pshs a  
3275 A6A4             (      drawing.asm):00115                 lda ,y  ; dest already drawn byte
3277 84FC             (      drawing.asm):00116                 anda #$FC  ;11111100 bits 0,1
3279 AAE4             (      drawing.asm):00117                 ora ,s   ;or bits onto dest
327B A7A4             (      drawing.asm):00118             sta ,y  ; write it back
327D 3502             (      drawing.asm):00119                 puls a   ; clear temp 
327F 3001             (      drawing.asm):00120         @c      leax 1,x
3281 3121             (      drawing.asm):00121                 leay 1,y
3283 5C               (      drawing.asm):00122                 incb
3284 C104             (      drawing.asm):00123                 cmpb #4 ; sprites are 4 bytes wide
3286 26A3             (      drawing.asm):00124                 bne @il 
3288 31A81C           (      drawing.asm):00125                 leay 28,y       ;drop down a line
328B 3502             (      drawing.asm):00126                 puls a  ; restore loop counter
328D 4C               (      drawing.asm):00127                 inca    
328E 8118             (      drawing.asm):00128                 cmpa #TILE_HEIGHT ;sprites are 16 rows tall
3290 2695             (      drawing.asm):00129                 bne @ol
3292 3536             (      drawing.asm):00130                 puls y,x,d
3294 39               (      drawing.asm):00131                 rts
                      (      drawing.asm):00132         
                      (      drawing.asm):00133         ;a=x,b=y
                      (      drawing.asm):00134         ;a,b are in 'tiles' (not bytes or pixels)
                      (      drawing.asm):00135         ;resulting offset is in y
                      (      drawing.asm):00136         ;computes   
3295                  (      drawing.asm):00137         set_draw_offset
3295 3416             (      drawing.asm):00138                 pshs d,x
3297 48               (      drawing.asm):00139                 asla ; a * 4
3298 48               (      drawing.asm):00140                 asla
3299 3402             (      drawing.asm):00141                 pshs a
329B 108E0000         (      drawing.asm):00142                 ldy #0
329F C100             (      drawing.asm):00143         @lp     cmpb #0
32A1 2707             (      drawing.asm):00144                 beq @d
32A3 31A90300         (      drawing.asm):00145                 leay 768,y ; each line of tiles is 768 bytes
32A7 5A               (      drawing.asm):00146                 decb
32A8 20F5             (      drawing.asm):00147                 bra @lp
32AA 3504             (      drawing.asm):00148         @d  puls b   ; pop a*4 (how to add to x?)
32AC 1F21             (      drawing.asm):00149                 tfr y,x
32AE 3A               (      drawing.asm):00150                 abx     ; add b to x
32AF 30890E00         (      drawing.asm):00151                 leax VRAM,x
32B3 1F12             (      drawing.asm):00152                 tfr x,y
32B5 3516             (      drawing.asm):00153                 puls d,x
32B7 39               (      drawing.asm):00154                 rts
                      (      drawing.asm):00155         
                      (      drawing.asm):00156                 
                      (      drawing.asm):00157         ; since that's how many bytes d,x,y pushes/pulls
                      (      drawing.asm):00158         ; a = screen x in bytes (units of 4 pixels)
                      (      drawing.asm):00159         ; b = screen y in pixels
                      (      drawing.asm):00160         ; ,u = height (in pixels)
                      (      drawing.asm):00161         ; 1,u = width (in bytes = units of 4 pixels)
                      (      drawing.asm):00162         ; y = sprite src
32B8                  (      drawing.asm):00163         draw_sprite
32B8 3436             (      drawing.asm):00164                 pshs d,x,y
32BA 3402             (      drawing.asm):00165                 pshs a ; save x offset
32BC 8620             (      drawing.asm):00166                 lda #32
32BE 3D               (      drawing.asm):00167                 mul
32BF 1F01             (      drawing.asm):00168                 tfr d,x
32C1 3504             (      drawing.asm):00169                 puls b  ; add x to addr
32C3 3A               (      drawing.asm):00170                 abx
32C4 30890E00         (      drawing.asm):00171                 leax VRAM,x             
32C8 8620             (      drawing.asm):00172                 lda #32 ; (vksip = -1 * (32 - w) )
32CA A041             (      drawing.asm):00173                 suba 1,u
32CC B732EA           (      drawing.asm):00174                 sta @vskip
                      (      drawing.asm):00175                 ;a is outer loop (rows)
                      (      drawing.asm):00176                 ;b is inner loop (cols)
32CF 4F               (      drawing.asm):00177                 clra
32D0                  (      drawing.asm):00178         @ol 
32D0 5F               (      drawing.asm):00179                 clrb
32D1 3402             (      drawing.asm):00180                 pshs a
32D3                  (      drawing.asm):00181         @il 
32D3 A6A0             (      drawing.asm):00182                 lda ,y+
32D5 A780             (      drawing.asm):00183                 sta ,x+
32D7 5C               (      drawing.asm):00184                 incb
32D8 E141             (      drawing.asm):00185                 cmpb  1,u ; end of row
32DA 26F7             (      drawing.asm):00186                 bne @il 
32DC F632EA           (      drawing.asm):00187                 ldb @vskip
32DF 3A               (      drawing.asm):00188                 abx
32E0 5F               (      drawing.asm):00189                 clrb
32E1 3502             (      drawing.asm):00190                 puls a ;restore outer loop counter
32E3 4C               (      drawing.asm):00191                 inca
32E4 A1C4             (      drawing.asm):00192                 cmpa ,u  ; copied all rows?
32E6 26E8             (      drawing.asm):00193                 bne @ol
32E8 2001             (      drawing.asm):00194                 bra @x
32EA 00               (      drawing.asm):00195         @vskip .db 0     ; two's complement
32EB 3342             (      drawing.asm):00196         @x      leau 2,u  ; pop h,w params
32ED 3536             (      drawing.asm):00197                 puls d,x,y
32EF 39               (      drawing.asm):00198                 rts     
                      (        amode.asm):01611                 
                      (        amode.asm):01612                 ;format: x,y,u,d,l,r,room type,flags
32F0                  (        amode.asm):01613         rooms
32F0 0000380807010000 (        amode.asm):01614                 .db 0,0,56,8,7,1,0,0 ; x,y,u,d,l,r,flags 0
32F8 0100390900020000 (        amode.asm):01615                 .db 1,0,57,9,0,2,0,0 ; x,y,u,d,l,r,flags 1
3300 02003A0A01030000 (        amode.asm):01616                 .db 2,0,58,10,1,3,0,0 ; x,y,u,d,l,r,flags 2
3308 03003B0B02040000 (        amode.asm):01617                 .db 3,0,59,11,2,4,0,0 ; x,y,u,d,l,r,flags 3
3310 04003C0C03050000 (        amode.asm):01618                 .db 4,0,60,12,3,5,0,0 ; x,y,u,d,l,r,flags 4
3318 05003D0D04060000 (        amode.asm):01619                 .db 5,0,61,13,4,6,0,0 ; x,y,u,d,l,r,flags 5
3320 06003E0E05070000 (        amode.asm):01620                 .db 6,0,62,14,5,7,0,0 ; x,y,u,d,l,r,flags 6
3328 07003F0F06000000 (        amode.asm):01621                 .db 7,0,63,15,6,0,0,0 ; x,y,u,d,l,r,flags 7
                      (        amode.asm):01622                 
3330 000100100F090000 (        amode.asm):01623                 .db 0,1,0,16,15,9,0,0 ; x,y,u,d,l,r,flags 8
3338 01010111080A0000 (        amode.asm):01624                 .db 1,1,1,17,8,10,0,0 ; x,y,u,d,l,r,flags 9
3340 02010212090B0000 (        amode.asm):01625                 .db 2,1,2,18,9,11,0,0 ; x,y,u,d,l,r,flags 10
3348 030103130A0C0000 (        amode.asm):01626                 .db 3,1,3,19,10,12,0,0 ; x,y,u,d,l,r,flags 11
3350 040104140B0D0000 (        amode.asm):01627                 .db 4,1,4,20,11,13,0,0 ; x,y,u,d,l,r,flags 12
3358 050105150C0E0000 (        amode.asm):01628                 .db 5,1,5,21,12,14,0,0 ; x,y,u,d,l,r,flags 13
3360 060106160D0F0000 (        amode.asm):01629                 .db 6,1,6,22,13,15,0,0 ; x,y,u,d,l,r,flags 14
3368 070107170E080000 (        amode.asm):01630                 .db 7,1,7,23,14,8,0,0 ; x,y,u,d,l,r,flags 15
                      (        amode.asm):01631         
3370 0002081817110000 (        amode.asm):01632                 .db 0,2,8,24,23,17,0,0 ; x,y,u,d,l,r,flags 16
3378 0102091910120000 (        amode.asm):01633                 .db 1,2,9,25,16,18,0,0 ; u,d,l,r,flags 17
3380 02020A1A11130000 (        amode.asm):01634                 .db 2,2,10,26,17,19,0,0 ; u,d,l,r,flags 18
3388 03020B1B12140000 (        amode.asm):01635                 .db 3,2,11,27,18,20,0,0 ; u,d,l,r,flags 19
3390 04020C1C13150000 (        amode.asm):01636                 .db 4,2,12,28,19,21,0,0 ; u,d,l,r,flags 20
3398 05020D1D14160000 (        amode.asm):01637                 .db 5,2,13,29,20,22,0,0 ; u,d,l,r,flags 21
33A0 06020E1E15170000 (        amode.asm):01638                 .db 6,2,14,30,21,23,0,0 ; u,d,l,r,flags 22
33A8 07020F1F16100000 (        amode.asm):01639                 .db 7,2,15,31,22,16,0,0 ; u,d,l,r,flags 23
                      (        amode.asm):01640         
33B0 000310201F190000 (        amode.asm):01641                 .db 0,3,16,32,31,25,0,0 ; x,y,u,d,l,r,flags 24
33B8 01031121181A0000 (        amode.asm):01642                 .db 1,3,17,33,24,26,0,0 ; u,d,l,r,flags 25
33C0 02031222191B0000 (        amode.asm):01643                 .db 2,3,18,34,25,27,0,0 ; u,d,l,r,flags 26
33C8 030313231A1C0000 (        amode.asm):01644                 .db 3,3,19,35,26,28,0,0 ; u,d,l,r,flags 27
33D0 040314241B1D0000 (        amode.asm):01645                 .db 4,3,20,36,27,29,0,0 ; u,d,l,r,flags 28
33D8 050315251C1E0000 (        amode.asm):01646                 .db 5,3,21,37,28,30,0,0 ; u,d,l,r,flags 29
33E0 060316261D1F0000 (        amode.asm):01647                 .db 6,3,22,38,29,31,0,0 ; u,d,l,r,flags 30
33E8 070317271E180000 (        amode.asm):01648                 .db 7,3,23,39,30,24,0,0 ; u,d,l,r,flags 31
                      (        amode.asm):01649         
33F0 0004182827210000 (        amode.asm):01650                 .db 0,4,24,40,39,33,0,0 ; u,d,l,r,flags 32
33F8 0104192920220000 (        amode.asm):01651                 .db 1,4,25,41,32,34,0,0 ; u,d,l,r,flags 33
3400 02041A2A21230000 (        amode.asm):01652                 .db 2,4,26,42,33,35,0,0 ; u,d,l,r,flags 34
3408 03041B2B22240000 (        amode.asm):01653                 .db 3,4,27,43,34,36,0,0 ; u,d,l,r,flags 35
3410 04041C2C23250000 (        amode.asm):01654                 .db 4,4,28,44,35,37,0,0 ; u,d,l,r,flags 36
3418 05041D2D24260000 (        amode.asm):01655                 .db 5,4,29,45,36,38,0,0 ; u,d,l,r,flags 37
3420 06041E2E25270000 (        amode.asm):01656                 .db 6,4,30,46,37,39,0,0 ; u,d,l,r,flags 38
3428 07041F2F26200000 (        amode.asm):01657                 .db 7,4,31,47,38,32,0,0 ; u,d,l,r,flags 39
                      (        amode.asm):01658         
3430 000520302F290000 (        amode.asm):01659                 .db 0,5,32,48,47,41,0,0 ; u,d,l,r,flags 40
3438 01052131282A0000 (        amode.asm):01660                 .db 1,5,33,49,40,42,0,0 ; u,d,l,r,flags 41
3440 02052232292B0000 (        amode.asm):01661                 .db 2,5,34,50,41,43,0,0 ; u,d,l,r,flags 42
3448 030523332A2C0000 (        amode.asm):01662                 .db 3,5,35,51,42,44,0,0 ; u,d,l,r,flags 43
3450 040524342B2D0000 (        amode.asm):01663                 .db 4,5,36,52,43,45,0,0 ; u,d,l,r,flags 44
3458 050525352C2E0000 (        amode.asm):01664                 .db 5,5,37,53,44,46,0,0 ; u,d,l,r,flags 45
3460 060526362D2F0000 (        amode.asm):01665                 .db 6,5,38,54,45,47,0,0 ; u,d,l,r,flags 46
3468 070527372E280000 (        amode.asm):01666                 .db 7,5,39,55,46,40,0,0 ; u,d,l,r,flags 47
                      (        amode.asm):01667         
3470 0006283837310000 (        amode.asm):01668                 .db 0,6,40,56,55,49,0,0 ; u,d,l,r,flags 48
3478 0106293930320000 (        amode.asm):01669                 .db 1,6,41,57,48,50,0,0 ; u,d,l,r,flags 49
3480 02062A3A31330000 (        amode.asm):01670                 .db 2,6,42,58,49,51,0,0 ; u,d,l,r,flags 50
3488 03062B3B32340000 (        amode.asm):01671                 .db 3,6,43,59,50,52,0,0 ; u,d,l,r,flags 51
3490 04062C3C33350000 (        amode.asm):01672                 .db 4,6,44,60,51,53,0,0 ; u,d,l,r,flags 52
3498 05062D3D34360000 (        amode.asm):01673                 .db 5,6,45,61,52,54,0,0 ; u,d,l,r,flags 53
34A0 06062E3E35370000 (        amode.asm):01674                 .db 6,6,46,62,53,55,0,0 ; u,d,l,r,flags 54
34A8 07062F3F36300000 (        amode.asm):01675                 .db 7,6,47,63,54,48,0,0 ; u,d,l,r,flags 55
                      (        amode.asm):01676         
34B0 000730003F390000 (        amode.asm):01677                 .db 0,7,48,0,63,57,0,0 ; u,d,l,r,flags 56
34B8 01073101383A0000 (        amode.asm):01678                 .db 1,7,49,1,56,58,0,0 ; u,d,l,r,flags 57
34C0 02073202393B0000 (        amode.asm):01679                 .db 2,7,50,2,57,59,0,0 ; u,d,l,r,flags 58
34C8 030733033A3C0000 (        amode.asm):01680                 .db 3,7,51,3,58,60,0,0 ; u,d,l,r,flags 59
34D0 040734043B3D0000 (        amode.asm):01681                 .db 4,7,52,4,59,61,0,0 ; u,d,l,r,flags 60
34D8 050735053C3E0000 (        amode.asm):01682                 .db 5,7,53,5,60,62,0,0 ; u,d,l,r,flags 61
34E0 060736063D3F0000 (        amode.asm):01683                 .db 6,7,54,6,61,63,0,0 ; u,d,l,r,flags 62
34E8 070737073E380000 (        amode.asm):01684                 .db 7,7,55,7,62,56,0,0 ; u,d,l,r,flags 63
                      (        amode.asm):01685         ;extra (for tunnels)
34F0 0000000000000000 (        amode.asm):01686                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
34F8 0000000000000000 (        amode.asm):01687                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3500 0000000000000000 (        amode.asm):01688                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3508 0000000000000000 (        amode.asm):01689                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64  
3510 0000000000000000 (        amode.asm):01690                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3518 0000000000000000 (        amode.asm):01691                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3520 0000000000000000 (        amode.asm):01692                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3528 0000000000000000 (        amode.asm):01693                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64  
3530 0000000000000000 (        amode.asm):01694                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3538 0000000000000000 (        amode.asm):01695                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3540 0000000000000000 (        amode.asm):01696                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3548 0000000000000000 (        amode.asm):01697                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64  
3550 0000000000000000 (        amode.asm):01698                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3558 0000000000000000 (        amode.asm):01699                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3560 0000000000000000 (        amode.asm):01700                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3568 0000000000000000 (        amode.asm):01701                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64  
                      (        amode.asm):01702         
3570                  (        amode.asm):01703         initial_room_cfg
3570 0000380807010000 (        amode.asm):01704                 .db 0,0,56,8,7,1,0,0 ; x,y,u,d,l,r,flags 0
3578 0100390900020000 (        amode.asm):01705                 .db 1,0,57,9,0,2,0,0 ; x,y,u,d,l,r,flags 1
3580 02003A0A01030000 (        amode.asm):01706                 .db 2,0,58,10,1,3,0,0 ; x,y,u,d,l,r,flags 2
3588 03003B0B02040000 (        amode.asm):01707                 .db 3,0,59,11,2,4,0,0 ; x,y,u,d,l,r,flags 3
3590 04003C0C03050000 (        amode.asm):01708                 .db 4,0,60,12,3,5,0,0 ; x,y,u,d,l,r,flags 4
3598 05003D0D04060000 (        amode.asm):01709                 .db 5,0,61,13,4,6,0,0 ; x,y,u,d,l,r,flags 5
35A0 06003E0E05070000 (        amode.asm):01710                 .db 6,0,62,14,5,7,0,0 ; x,y,u,d,l,r,flags 6
35A8 07003F0F06000000 (        amode.asm):01711                 .db 7,0,63,15,6,0,0,0 ; x,y,u,d,l,r,flags 7
                      (        amode.asm):01712                 
35B0 000100100F090000 (        amode.asm):01713                 .db 0,1,0,16,15,9,0,0 ; x,y,u,d,l,r,flags 8
35B8 01010111080A0000 (        amode.asm):01714                 .db 1,1,1,17,8,10,0,0 ; x,y,u,d,l,r,flags 9
35C0 02010212090B0000 (        amode.asm):01715                 .db 2,1,2,18,9,11,0,0 ; x,y,u,d,l,r,flags 10
35C8 030103130A0C0000 (        amode.asm):01716                 .db 3,1,3,19,10,12,0,0 ; x,y,u,d,l,r,flags 11
35D0 040104140B0D0000 (        amode.asm):01717                 .db 4,1,4,20,11,13,0,0 ; x,y,u,d,l,r,flags 12
35D8 050105150C0E0000 (        amode.asm):01718                 .db 5,1,5,21,12,14,0,0 ; x,y,u,d,l,r,flags 13
35E0 060106160D0F0000 (        amode.asm):01719                 .db 6,1,6,22,13,15,0,0 ; x,y,u,d,l,r,flags 14
35E8 070107170E080000 (        amode.asm):01720                 .db 7,1,7,23,14,8,0,0 ; x,y,u,d,l,r,flags 15
                      (        amode.asm):01721         
35F0 0002081817110000 (        amode.asm):01722                 .db 0,2,8,24,23,17,0,0 ; x,y,u,d,l,r,flags 16
35F8 0102091910120000 (        amode.asm):01723                 .db 1,2,9,25,16,18,0,0 ; u,d,l,r,flags 17
3600 02020A1A11130000 (        amode.asm):01724                 .db 2,2,10,26,17,19,0,0 ; u,d,l,r,flags 18
3608 03020B1B12140000 (        amode.asm):01725                 .db 3,2,11,27,18,20,0,0 ; u,d,l,r,flags 19
3610 04020C1C13150000 (        amode.asm):01726                 .db 4,2,12,28,19,21,0,0 ; u,d,l,r,flags 20
3618 05020D1D14160000 (        amode.asm):01727                 .db 5,2,13,29,20,22,0,0 ; u,d,l,r,flags 21
3620 06020E1E15170000 (        amode.asm):01728                 .db 6,2,14,30,21,23,0,0 ; u,d,l,r,flags 22
3628 07020F1F16100000 (        amode.asm):01729                 .db 7,2,15,31,22,16,0,0 ; u,d,l,r,flags 23
                      (        amode.asm):01730         
3630 000310201F190000 (        amode.asm):01731                 .db 0,3,16,32,31,25,0,0 ; x,y,u,d,l,r,flags 24
3638 01031121181A0000 (        amode.asm):01732                 .db 1,3,17,33,24,26,0,0 ; u,d,l,r,flags 25
3640 02031222191B0000 (        amode.asm):01733                 .db 2,3,18,34,25,27,0,0 ; u,d,l,r,flags 26
3648 030313231A1C0000 (        amode.asm):01734                 .db 3,3,19,35,26,28,0,0 ; u,d,l,r,flags 27
3650 040314241B1D0000 (        amode.asm):01735                 .db 4,3,20,36,27,29,0,0 ; u,d,l,r,flags 28
3658 050315251C1E0000 (        amode.asm):01736                 .db 5,3,21,37,28,30,0,0 ; u,d,l,r,flags 29
3660 060316261D1F0000 (        amode.asm):01737                 .db 6,3,22,38,29,31,0,0 ; u,d,l,r,flags 30
3668 070317271E180000 (        amode.asm):01738                 .db 7,3,23,39,30,24,0,0 ; u,d,l,r,flags 31
                      (        amode.asm):01739         
3670 0004182827210000 (        amode.asm):01740                 .db 0,4,24,40,39,33,0,0 ; u,d,l,r,flags 32
3678 0104192920220000 (        amode.asm):01741                 .db 1,4,25,41,32,34,0,0 ; u,d,l,r,flags 33
3680 02041A2A21230000 (        amode.asm):01742                 .db 2,4,26,42,33,35,0,0 ; u,d,l,r,flags 34
3688 03041B2B22240000 (        amode.asm):01743                 .db 3,4,27,43,34,36,0,0 ; u,d,l,r,flags 35
3690 04041C2C23250000 (        amode.asm):01744                 .db 4,4,28,44,35,37,0,0 ; u,d,l,r,flags 36
3698 05041D2D24260000 (        amode.asm):01745                 .db 5,4,29,45,36,38,0,0 ; u,d,l,r,flags 37
36A0 06041E2E25270000 (        amode.asm):01746                 .db 6,4,30,46,37,39,0,0 ; u,d,l,r,flags 38
36A8 07041F2F26200000 (        amode.asm):01747                 .db 7,4,31,47,38,32,0,0 ; u,d,l,r,flags 39
                      (        amode.asm):01748         
36B0 000520302F290000 (        amode.asm):01749                 .db 0,5,32,48,47,41,0,0 ; u,d,l,r,flags 40
36B8 01052131282A0000 (        amode.asm):01750                 .db 1,5,33,49,40,42,0,0 ; u,d,l,r,flags 41
36C0 02052232292B0000 (        amode.asm):01751                 .db 2,5,34,50,41,43,0,0 ; u,d,l,r,flags 42
36C8 030523332A2C0000 (        amode.asm):01752                 .db 3,5,35,51,42,44,0,0 ; u,d,l,r,flags 43
36D0 040524342B2D0000 (        amode.asm):01753                 .db 4,5,36,52,43,45,0,0 ; u,d,l,r,flags 44
36D8 050525352C2E0000 (        amode.asm):01754                 .db 5,5,37,53,44,46,0,0 ; u,d,l,r,flags 45
36E0 060526362D2F0000 (        amode.asm):01755                 .db 6,5,38,54,45,47,0,0 ; u,d,l,r,flags 46
36E8 070527372E280000 (        amode.asm):01756                 .db 7,5,39,55,46,40,0,0 ; u,d,l,r,flags 47
                      (        amode.asm):01757         
36F0 0006283837310000 (        amode.asm):01758                 .db 0,6,40,56,55,49,0,0 ; u,d,l,r,flags 48
36F8 0106293930320000 (        amode.asm):01759                 .db 1,6,41,57,48,50,0,0 ; u,d,l,r,flags 49
3700 02062A3A31330000 (        amode.asm):01760                 .db 2,6,42,58,49,51,0,0 ; u,d,l,r,flags 50
3708 03062B3B32340000 (        amode.asm):01761                 .db 3,6,43,59,50,52,0,0 ; u,d,l,r,flags 51
3710 04062C3C33350000 (        amode.asm):01762                 .db 4,6,44,60,51,53,0,0 ; u,d,l,r,flags 52
3718 05062D3D34360000 (        amode.asm):01763                 .db 5,6,45,61,52,54,0,0 ; u,d,l,r,flags 53
3720 06062E3E35370000 (        amode.asm):01764                 .db 6,6,46,62,53,55,0,0 ; u,d,l,r,flags 54
3728 07062F3F36300000 (        amode.asm):01765                 .db 7,6,47,63,54,48,0,0 ; u,d,l,r,flags 55
                      (        amode.asm):01766         
3730 000730003F390000 (        amode.asm):01767                 .db 0,7,48,0,63,57,0,0 ; u,d,l,r,flags 56
3738 01073101383A0000 (        amode.asm):01768                 .db 1,7,49,1,56,58,0,0 ; u,d,l,r,flags 57
3740 02073202393B0000 (        amode.asm):01769                 .db 2,7,50,2,57,59,0,0 ; u,d,l,r,flags 58
3748 030733033A3C0000 (        amode.asm):01770                 .db 3,7,51,3,58,60,0,0 ; u,d,l,r,flags 59
3750 040734043B3D0000 (        amode.asm):01771                 .db 4,7,52,4,59,61,0,0 ; u,d,l,r,flags 60
3758 050735053C3E0000 (        amode.asm):01772                 .db 5,7,53,5,60,62,0,0 ; u,d,l,r,flags 61
3760 060736063D3F0000 (        amode.asm):01773                 .db 6,7,54,6,61,63,0,0 ; u,d,l,r,flags 62
3768 070737073E380000 (        amode.asm):01774                 .db 7,7,55,7,62,56,0,0 ; u,d,l,r,flags 63
                      (        amode.asm):01775                 
3770 0000000000000000 (        amode.asm):01776                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3778 0000000000000000 (        amode.asm):01777                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3780 0000000000000000 (        amode.asm):01778                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3788 0000000000000000 (        amode.asm):01779                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64  
3790 0000000000000000 (        amode.asm):01780                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
3798 0000000000000000 (        amode.asm):01781                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
37A0 0000000000000000 (        amode.asm):01782                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
37A8 0000000000000000 (        amode.asm):01783                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64  
37B0 0000000000000000 (        amode.asm):01784                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
37B8 0000000000000000 (        amode.asm):01785                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
37C0 0000000000000000 (        amode.asm):01786                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
37C8 0000000000000000 (        amode.asm):01787                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64  
37D0 0000000000000000 (        amode.asm):01788                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
37D8 0000000000000000 (        amode.asm):01789                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
37E0 0000000000000000 (        amode.asm):01790                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64
37E8 0000000000000000 (        amode.asm):01791                 .db 0,0,0,0,0,0,0,0 ; u,d,l,r,flags 64  
                      (        amode.asm):01792         
37F0                  (        amode.asm):01793         end_cfg_data
                      (        amode.asm):01794                 
                      (        amode.asm):01795                 
                      (        amode.asm):01796                 
                      (        amode.asm):01797                 include sprites.asm
                      (      sprites.asm):00001         ;wumpus sprite data
                      (      sprites.asm):00002         
37F0                  (      sprites.asm):00003         sprite_room
37F0 000FF000         (      sprites.asm):00004                 .db 0,15,240,0
37F4 000FF000         (      sprites.asm):00005                 .db 0,15,240,0
37F8 00FFFF00         (      sprites.asm):00006                 .db 0,255,255,0
37FC 00FFFF00         (      sprites.asm):00007                 .db 0,255,255,0
3800 03FFFFC0         (      sprites.asm):00008                 .db 3,255,255,192
3804 03FFFFC0         (      sprites.asm):00009                 .db 3,255,255,192
3808 0FFFFFF0         (      sprites.asm):00010                 .db 15,255,255,240
380C 0FFFFFFC         (      sprites.asm):00011                 .db 15,255,255,252
3810 3FFFFFFC         (      sprites.asm):00012                 .db 63,255,255,252
3814 FFFFFFFF         (      sprites.asm):00013                 .db 255,255,255,255
3818 FFFFFFFF         (      sprites.asm):00014                 .db 255,255,255,255
381C FFFFFFFF         (      sprites.asm):00015                 .db 255,255,255,255
3820 FFFFFFFF         (      sprites.asm):00016                 .db 255,255,255,255
3824 FFFFFFFF         (      sprites.asm):00017                 .db 255,255,255,255
3828 FFFFFFFF         (      sprites.asm):00018                 .db 255,255,255,255
382C 3FFFFFFC         (      sprites.asm):00019                 .db 63,255,255,252
3830 3FFFFFFC         (      sprites.asm):00020                 .db 63,255,255,252
3834 0FFFFFF0         (      sprites.asm):00021                 .db 15,255,255,240
3838 03FFFFC0         (      sprites.asm):00022                 .db 3,255,255,192
383C 03FFFFC0         (      sprites.asm):00023                 .db 3,255,255,192
3840 00FFFF00         (      sprites.asm):00024                 .db 0,255,255,0
3844 00FFFF00         (      sprites.asm):00025                 .db 0,255,255,0
3848 000FF000         (      sprites.asm):00026                 .db 0,15,240,0
384C 000FF000         (      sprites.asm):00027                 .db 0,15,240,0
                      (      sprites.asm):00028         
3850                  (      sprites.asm):00029         sprite_tunnel_1
3850 000FF000         (      sprites.asm):00030                 .db 0,15,240,0
3854 000FF002         (      sprites.asm):00031                 .db 0,15,240,2
3858 003FF002         (      sprites.asm):00032                 .db 0,63,240,2
385C 003FF00A         (      sprites.asm):00033                 .db 0,63,240,10
3860 003FF02A         (      sprites.asm):00034                 .db 0,63,240,42
3864 00FFF02A         (      sprites.asm):00035                 .db 0,255,240,42
3868 03FFC0AA         (      sprites.asm):00036                 .db 3,255,192,170
386C 03FFC2AA         (      sprites.asm):00037                 .db 3,255,194,170
3870 3FFFC2AA         (      sprites.asm):00038                 .db 63,255,194,170
3874 FFFF0AAA         (      sprites.asm):00039                 .db 255,255,10,170
3878 FFFC2AAA         (      sprites.asm):00040                 .db 255,252,42,170
387C FFF02AAA         (      sprites.asm):00041                 .db 255,240,42,170
3880 FFF0AAAA         (      sprites.asm):00042                 .db 255,240,170,170
3884 FFC0AAAA         (      sprites.asm):00043                 .db 255,192,170,170
3888 FC02AAAA         (      sprites.asm):00044                 .db 252,2,170,170
388C 0002AAAA         (      sprites.asm):00045                 .db 0,2,170,170
3890 000AAAAA         (      sprites.asm):00046                 .db 0,10,170,170
3894 000AAAAA         (      sprites.asm):00047                 .db 0,10,170,170
3898 002AAAAA         (      sprites.asm):00048                 .db 0,42,170,170
389C 00AAAAAA         (      sprites.asm):00049                 .db 0,170,170,170
38A0 02AAAAAA         (      sprites.asm):00050                 .db 2,170,170,170
38A4 0AAAAAAA         (      sprites.asm):00051                 .db 10,170,170,170
38A8 2AAAAAAA         (      sprites.asm):00052                 .db 42,170,170,170
38AC 2AAAAAAA         (      sprites.asm):00053                 .db 42,170,170,170
                      (      sprites.asm):00054         
38B0                  (      sprites.asm):00055         sprite_tunnel_2
38B0 AAAAAAA8         (      sprites.asm):00056                 .db 170,170,170,168
38B4 AAAAAAA8         (      sprites.asm):00057                 .db 170,170,170,168
38B8 AAAAAAA0         (      sprites.asm):00058                 .db 170,170,170,160
38BC AAAAAA80         (      sprites.asm):00059                 .db 170,170,170,128
38C0 AAAAAA00         (      sprites.asm):00060                 .db 170,170,170,0
38C4 AAAAA800         (      sprites.asm):00061                 .db 170,170,168,0
38C8 AAAAA000         (      sprites.asm):00062                 .db 170,170,160,0
38CC AAAAA000         (      sprites.asm):00063                 .db 170,170,160,0
38D0 AAAA8000         (      sprites.asm):00064                 .db 170,170,128,0
38D4 AAAA803F         (      sprites.asm):00065                 .db 170,170,128,63
38D8 AAAA03FF         (      sprites.asm):00066                 .db 170,170,3,255
38DC AAAA0FFF         (      sprites.asm):00067                 .db 170,170,15,255
38E0 AAA80FFF         (      sprites.asm):00068                 .db 170,168,15,255
38E4 AAA83FFF         (      sprites.asm):00069                 .db 170,168,63,255
38E8 AAA0FFFF         (      sprites.asm):00070                 .db 170,160,255,255
38EC AA83FFFC         (      sprites.asm):00071                 .db 170,131,255,252
38F0 AA83FFC0         (      sprites.asm):00072                 .db 170,131,255,192
38F4 AA03FFC0         (      sprites.asm):00073                 .db 170,3,255,192
38F8 A80FFF00         (      sprites.asm):00074                 .db 168,15,255,0
38FC A80FFC00         (      sprites.asm):00075                 .db 168,15,252,0
3900 A00FFC00         (      sprites.asm):00076                 .db 160,15,252,0
3904 800FFC00         (      sprites.asm):00077                 .db 128,15,252,0
3908 800FF000         (      sprites.asm):00078                 .db 128,15,240,0
390C 000FF000         (      sprites.asm):00079                 .db 0,15,240,0
                      (      sprites.asm):00080         
3910                  (      sprites.asm):00081         sprite_tunnel_3 
3910 2AAAAAAA         (      sprites.asm):00082                 .db 42,170,170,170
3914 2AAAAAAA         (      sprites.asm):00083                 .db 42,170,170,170
3918 0AAAAAAA         (      sprites.asm):00084                 .db 10,170,170,170
391C 02AAAAAA         (      sprites.asm):00085                 .db 2,170,170,170
3920 00AAAAAA         (      sprites.asm):00086                 .db 0,170,170,170
3924 002AAAAA         (      sprites.asm):00087                 .db 0,42,170,170
3928 000AAAAA         (      sprites.asm):00088                 .db 0,10,170,170
392C 000AAAAA         (      sprites.asm):00089                 .db 0,10,170,170
3930 0002AAAA         (      sprites.asm):00090                 .db 0,2,170,170
3934 FC02AAAA         (      sprites.asm):00091                 .db 252,2,170,170
3938 FFC0AAAA         (      sprites.asm):00092                 .db 255,192,170,170
393C FFF0AAAA         (      sprites.asm):00093                 .db 255,240,170,170
3940 FFF02AAA         (      sprites.asm):00094                 .db 255,240,42,170
3944 FFFC2AAA         (      sprites.asm):00095                 .db 255,252,42,170
3948 FFFF0AAA         (      sprites.asm):00096                 .db 255,255,10,170
394C 3FFFC2AA         (      sprites.asm):00097                 .db 63,255,194,170
3950 03FFC2AA         (      sprites.asm):00098                 .db 3,255,194,170
3954 03FFC0AA         (      sprites.asm):00099                 .db 3,255,192,170
3958 00FFF02A         (      sprites.asm):00100                 .db 0,255,240,42
395C 003FF02A         (      sprites.asm):00101                 .db 0,63,240,42
3960 003FF00A         (      sprites.asm):00102                 .db 0,63,240,10
3964 003FF002         (      sprites.asm):00103                 .db 0,63,240,2
3968 000FF002         (      sprites.asm):00104                 .db 0,15,240,2
396C 000FF000         (      sprites.asm):00105                 .db 0,15,240,0
                      (      sprites.asm):00106         
3970                  (      sprites.asm):00107         sprite_tunnel_4 
3970 000FF000         (      sprites.asm):00108                 .db 0,15,240,0
3974 800FF000         (      sprites.asm):00109                 .db 128,15,240,0
3978 800FFC00         (      sprites.asm):00110                 .db 128,15,252,0
397C A00FFC00         (      sprites.asm):00111                 .db 160,15,252,0
3980 A80FFC00         (      sprites.asm):00112                 .db 168,15,252,0
3984 A80FFF00         (      sprites.asm):00113                 .db 168,15,255,0
3988 AA03FFC0         (      sprites.asm):00114                 .db 170,3,255,192
398C AA83FFC0         (      sprites.asm):00115                 .db 170,131,255,192
3990 AA83FFFC         (      sprites.asm):00116                 .db 170,131,255,252
3994 AAA0FFFF         (      sprites.asm):00117                 .db 170,160,255,255
3998 AAA83FFF         (      sprites.asm):00118                 .db 170,168,63,255
399C AAA80FFF         (      sprites.asm):00119                 .db 170,168,15,255
39A0 AAAA0FFF         (      sprites.asm):00120                 .db 170,170,15,255
39A4 AAAA03FF         (      sprites.asm):00121                 .db 170,170,3,255
39A8 AAAA803F         (      sprites.asm):00122                 .db 170,170,128,63
39AC AAAA8000         (      sprites.asm):00123                 .db 170,170,128,0
39B0 AAAAA000         (      sprites.asm):00124                 .db 170,170,160,0
39B4 AAAAA000         (      sprites.asm):00125                 .db 170,170,160,0
39B8 AAAAA800         (      sprites.asm):00126                 .db 170,170,168,0
39BC AAAAAA00         (      sprites.asm):00127                 .db 170,170,170,0
39C0 AAAAAA80         (      sprites.asm):00128                 .db 170,170,170,128
39C4 AAAAAAA0         (      sprites.asm):00129                 .db 170,170,170,160
39C8 AAAAAAA8         (      sprites.asm):00130                 .db 170,170,170,168
39CC AAAAAAA8         (      sprites.asm):00131                 .db 170,170,170,168
                      (      sprites.asm):00132         
39D0                  (      sprites.asm):00133         sprite_room_slime
39D0 000FF000         (      sprites.asm):00134                 .db 0,15,240,0
39D4 000FF000         (      sprites.asm):00135                 .db 0,15,240,0
39D8 00FFFF00         (      sprites.asm):00136                 .db 0,255,255,0
39DC 00FFFF00         (      sprites.asm):00137                 .db 0,255,255,0
39E0 03FFFFC0         (      sprites.asm):00138                 .db 3,255,255,192
39E4 03EAABC0         (      sprites.asm):00139                 .db 3,234,171,192
39E8 0FEAABF0         (      sprites.asm):00140                 .db 15,234,171,240
39EC 0FAAAAFC         (      sprites.asm):00141                 .db 15,170,170,252
39F0 3FAAAAFC         (      sprites.asm):00142                 .db 63,170,170,252
39F4 FEAAAABF         (      sprites.asm):00143                 .db 254,170,170,191
39F8 FEAAAABF         (      sprites.asm):00144                 .db 254,170,170,191
39FC FEAAAABF         (      sprites.asm):00145                 .db 254,170,170,191
3A00 FEAAAABF         (      sprites.asm):00146                 .db 254,170,170,191
3A04 FEAAAABF         (      sprites.asm):00147                 .db 254,170,170,191
3A08 FEAAAABF         (      sprites.asm):00148                 .db 254,170,170,191
3A0C 3EAAAABC         (      sprites.asm):00149                 .db 62,170,170,188
3A10 3FAAAAFC         (      sprites.asm):00150                 .db 63,170,170,252
3A14 0FAAAAF0         (      sprites.asm):00151                 .db 15,170,170,240
3A18 03EAABC0         (      sprites.asm):00152                 .db 3,234,171,192
3A1C 03EAAFC0         (      sprites.asm):00153                 .db 3,234,175,192
3A20 00FFFF00         (      sprites.asm):00154                 .db 0,255,255,0
3A24 00FFFF00         (      sprites.asm):00155                 .db 0,255,255,0
3A28 000FF000         (      sprites.asm):00156                 .db 0,15,240,0
3A2C 000FF000         (      sprites.asm):00157                 .db 0,15,240,0
                      (      sprites.asm):00158         
                      (      sprites.asm):00159         
3A30                  (      sprites.asm):00160         sprite_pit
3A30 000FF000         (      sprites.asm):00161                 .db 0,15,240,0
3A34 000FF000         (      sprites.asm):00162                 .db 0,15,240,0
3A38 00FFFF00         (      sprites.asm):00163                 .db 0,255,255,0
3A3C 00FFFF00         (      sprites.asm):00164                 .db 0,255,255,0
3A40 03FFFFC0         (      sprites.asm):00165                 .db 3,255,255,192
3A44 03C003C0         (      sprites.asm):00166                 .db 3,192,3,192
3A48 0FC003F0         (      sprites.asm):00167                 .db 15,192,3,240
3A4C 0F0000FC         (      sprites.asm):00168                 .db 15,0,0,252
3A50 3F0000FC         (      sprites.asm):00169                 .db 63,0,0,252
3A54 FC00003F         (      sprites.asm):00170                 .db 252,0,0,63
3A58 FC00003F         (      sprites.asm):00171                 .db 252,0,0,63
3A5C FC00003F         (      sprites.asm):00172                 .db 252,0,0,63
3A60 FC00003F         (      sprites.asm):00173                 .db 252,0,0,63
3A64 FC00003F         (      sprites.asm):00174                 .db 252,0,0,63
3A68 FC00003F         (      sprites.asm):00175                 .db 252,0,0,63
3A6C 3C00003C         (      sprites.asm):00176                 .db 60,0,0,60
3A70 3F0000FC         (      sprites.asm):00177                 .db 63,0,0,252
3A74 0F0000F0         (      sprites.asm):00178                 .db 15,0,0,240
3A78 03C003C0         (      sprites.asm):00179                 .db 3,192,3,192
3A7C 03C00FC0         (      sprites.asm):00180                 .db 3,192,15,192
3A80 00FFFF00         (      sprites.asm):00181                 .db 0,255,255,0
3A84 00FFFF00         (      sprites.asm):00182                 .db 0,255,255,0
3A88 000FF000         (      sprites.asm):00183                 .db 0,15,240,0
3A8C 000FF000         (      sprites.asm):00184                 .db 0,15,240,0
                      (      sprites.asm):00185                 
3A90                  (      sprites.asm):00186         sprite_draft_slime
3A90 000FF000         (      sprites.asm):00187                 .db 0,15,240,0
3A94 005FF500         (      sprites.asm):00188                 .db 0,95,245,0
3A98 01FFFF40         (      sprites.asm):00189                 .db 1,255,255,64
3A9C 01FFFF40         (      sprites.asm):00190                 .db 1,255,255,64
3AA0 07FFFFD0         (      sprites.asm):00191                 .db 7,255,255,208
3AA4 07EAABD4         (      sprites.asm):00192                 .db 7,234,171,212
3AA8 1FEAABF4         (      sprites.asm):00193                 .db 31,234,171,244
3AAC 1FAAAAFC         (      sprites.asm):00194                 .db 31,170,170,252
3AB0 3FAAAAFC         (      sprites.asm):00195                 .db 63,170,170,252
3AB4 FEAAAABF         (      sprites.asm):00196                 .db 254,170,170,191
3AB8 FEAAAABF         (      sprites.asm):00197                 .db 254,170,170,191
3ABC FEAAAABF         (      sprites.asm):00198                 .db 254,170,170,191
3AC0 FEAAAABF         (      sprites.asm):00199                 .db 254,170,170,191
3AC4 FEAAAABF         (      sprites.asm):00200                 .db 254,170,170,191
3AC8 FEAAAABF         (      sprites.asm):00201                 .db 254,170,170,191
3ACC 3EAAAABC         (      sprites.asm):00202                 .db 62,170,170,188
3AD0 3FAAAAFC         (      sprites.asm):00203                 .db 63,170,170,252
3AD4 1FAAAAF4         (      sprites.asm):00204                 .db 31,170,170,244
3AD8 07EAABD0         (      sprites.asm):00205                 .db 7,234,171,208
3ADC 07EAAFD0         (      sprites.asm):00206                 .db 7,234,175,208
3AE0 01FFFF40         (      sprites.asm):00207                 .db 1,255,255,64
3AE4 01FFFF40         (      sprites.asm):00208                 .db 1,255,255,64
3AE8 005FF500         (      sprites.asm):00209                 .db 0,95,245,0
3AEC 000FF000         (      sprites.asm):00210                 .db 0,15,240,0
                      (      sprites.asm):00211         
3AF0                  (      sprites.asm):00212         sprite_room_draft
3AF0 000FF000         (      sprites.asm):00213                 .db 0,15,240,0
3AF4 005FF500         (      sprites.asm):00214                 .db 0,95,245,0
3AF8 01FFFF40         (      sprites.asm):00215                 .db 1,255,255,64
3AFC 01FFFF40         (      sprites.asm):00216                 .db 1,255,255,64
3B00 07FFFFD0         (      sprites.asm):00217                 .db 7,255,255,208
3B04 07FFFFD4         (      sprites.asm):00218                 .db 7,255,255,212
3B08 1FFFFFF4         (      sprites.asm):00219                 .db 31,255,255,244
3B0C 1FFFFFFC         (      sprites.asm):00220                 .db 31,255,255,252
3B10 3FFFFFFC         (      sprites.asm):00221                 .db 63,255,255,252
3B14 FFFFFFFF         (      sprites.asm):00222                 .db 255,255,255,255
3B18 FFFFFFFF         (      sprites.asm):00223                 .db 255,255,255,255
3B1C FFFFFFFF         (      sprites.asm):00224                 .db 255,255,255,255
3B20 FFFFFFFF         (      sprites.asm):00225                 .db 255,255,255,255
3B24 FFFFFFFF         (      sprites.asm):00226                 .db 255,255,255,255
3B28 FFFFFFFF         (      sprites.asm):00227                 .db 255,255,255,255
3B2C 3FFFFFFC         (      sprites.asm):00228                 .db 63,255,255,252
3B30 3FFFFFFC         (      sprites.asm):00229                 .db 63,255,255,252
3B34 1FFFFFF4         (      sprites.asm):00230                 .db 31,255,255,244
3B38 07FFFFD0         (      sprites.asm):00231                 .db 7,255,255,208
3B3C 07FFFFD0         (      sprites.asm):00232                 .db 7,255,255,208
3B40 01FFFF40         (      sprites.asm):00233                 .db 1,255,255,64
3B44 01FFFF40         (      sprites.asm):00234                 .db 1,255,255,64
3B48 005FF500         (      sprites.asm):00235                 .db 0,95,245,0
3B4C 000FF000         (      sprites.asm):00236                 .db 0,15,240,0
                      (      sprites.asm):00237         
                      (      sprites.asm):00238                 
3B50                  (      sprites.asm):00239         sprite_player
3B50 FFFFFFFF         (      sprites.asm):00240                 .db 255,255,255,255
3B54 FFFFFFFF         (      sprites.asm):00241                 .db 255,255,255,255
3B58 FFFFFFFF         (      sprites.asm):00242                 .db 255,255,255,255
3B5C FFFFFFFF         (      sprites.asm):00243                 .db 255,255,255,255
3B60 FFFFFFFF         (      sprites.asm):00244                 .db 255,255,255,255
3B64 FFFFFFFF         (      sprites.asm):00245                 .db 255,255,255,255
3B68 FFFFFFFF         (      sprites.asm):00246                 .db 255,255,255,255
3B6C FFF77FFF         (      sprites.asm):00247                 .db 255,247,127,255
3B70 FFF7DFFF         (      sprites.asm):00248                 .db 255,247,223,255
3B74 FFFFDFFF         (      sprites.asm):00249                 .db 255,255,223,255
3B78 FFD55FFF         (      sprites.asm):00250                 .db 255,213,95,255
3B7C FFF7DFFF         (      sprites.asm):00251                 .db 255,247,223,255
3B80 FFF7DFFF         (      sprites.asm):00252                 .db 255,247,223,255
3B84 FFF77FFF         (      sprites.asm):00253                 .db 255,247,127,255
3B88 FFF7FFFF         (      sprites.asm):00254                 .db 255,247,255,255
3B8C FFDDFFFF         (      sprites.asm):00255                 .db 255,221,255,255
3B90 FFDDFFFF         (      sprites.asm):00256                 .db 255,221,255,255
3B94 FFFFFFFF         (      sprites.asm):00257                 .db 255,255,255,255
3B98 FFFFFFFF         (      sprites.asm):00258                 .db 255,255,255,255
3B9C FFFFFFFF         (      sprites.asm):00259                 .db 255,255,255,255
3BA0 FFFFFFFF         (      sprites.asm):00260                 .db 255,255,255,255
3BA4 FFFFFFFF         (      sprites.asm):00261                 .db 255,255,255,255
3BA8 FFFFFFFF         (      sprites.asm):00262                 .db 255,255,255,255
3BAC FFFFFFFF         (      sprites.asm):00263                 .db 255,255,255,255
                      (      sprites.asm):00264         
3BB0                  (      sprites.asm):00265         sprite_player_up_left
3BB0 FFFFFFFF         (      sprites.asm):00266                 .db 255,255,255,255
3BB4 FDDFFFFF         (      sprites.asm):00267                 .db 253,223,255,255
3BB8 FDF7FFFF         (      sprites.asm):00268                 .db 253,247,255,255
3BBC FFF7FFFF         (      sprites.asm):00269                 .db 255,247,255,255
3BC0 F557FFFF         (      sprites.asm):00270                 .db 245,87,255,255
3BC4 FDF7FFFF         (      sprites.asm):00271                 .db 253,247,255,255
3BC8 FDF7FFFF         (      sprites.asm):00272                 .db 253,247,255,255
3BCC FDDFFFFF         (      sprites.asm):00273                 .db 253,223,255,255
3BD0 FDFFFFFF         (      sprites.asm):00274                 .db 253,255,255,255
3BD4 F77FFFFF         (      sprites.asm):00275                 .db 247,127,255,255
3BD8 F77FFFFF         (      sprites.asm):00276                 .db 247,127,255,255
3BDC FFFFFFFF         (      sprites.asm):00277                 .db 255,255,255,255
3BE0 FFFFFFFF         (      sprites.asm):00278                 .db 255,255,255,255
3BE4 FFFFFFFF         (      sprites.asm):00279                 .db 255,255,255,255
3BE8 FFFFFFFF         (      sprites.asm):00280                 .db 255,255,255,255
3BEC FFFFFFFF         (      sprites.asm):00281                 .db 255,255,255,255
3BF0 FFFFFFFF         (      sprites.asm):00282                 .db 255,255,255,255
3BF4 FFFFFFFF         (      sprites.asm):00283                 .db 255,255,255,255
3BF8 FFFFFFFF         (      sprites.asm):00284                 .db 255,255,255,255
3BFC FFFFFFFF         (      sprites.asm):00285                 .db 255,255,255,255
3C00 FFFFFFFF         (      sprites.asm):00286                 .db 255,255,255,255
3C04 FFFFFFFF         (      sprites.asm):00287                 .db 255,255,255,255
3C08 FFFFFFFF         (      sprites.asm):00288                 .db 255,255,255,255
3C0C FFFFFFFF         (      sprites.asm):00289                 .db 255,255,255,255
                      (      sprites.asm):00290                 
3C10                  (      sprites.asm):00291         sprite_player_down_left
3C10 FFFFFFFF         (      sprites.asm):00292                 .db 255,255,255,255
3C14 FFFFFFFF         (      sprites.asm):00293                 .db 255,255,255,255
3C18 FFFFFFFF         (      sprites.asm):00294                 .db 255,255,255,255
3C1C FFFFFFFF         (      sprites.asm):00295                 .db 255,255,255,255
3C20 FFFFFFFF         (      sprites.asm):00296                 .db 255,255,255,255
3C24 FFFFFFFF         (      sprites.asm):00297                 .db 255,255,255,255
3C28 FFFFFFFF         (      sprites.asm):00298                 .db 255,255,255,255
3C2C FFFFFFFF         (      sprites.asm):00299                 .db 255,255,255,255
3C30 FFFFFFFF         (      sprites.asm):00300                 .db 255,255,255,255
3C34 FFFFFFFF         (      sprites.asm):00301                 .db 255,255,255,255
3C38 FF77FFFF         (      sprites.asm):00302                 .db 255,119,255,255
3C3C FF7DFFFF         (      sprites.asm):00303                 .db 255,125,255,255
3C40 FFFDFFFF         (      sprites.asm):00304                 .db 255,253,255,255
3C44 FD55FFFF         (      sprites.asm):00305                 .db 253,85,255,255
3C48 FF7DFFFF         (      sprites.asm):00306                 .db 255,125,255,255
3C4C FF7DFFFF         (      sprites.asm):00307                 .db 255,125,255,255
3C50 FF77FFFF         (      sprites.asm):00308                 .db 255,119,255,255
3C54 FF7FFFFF         (      sprites.asm):00309                 .db 255,127,255,255
3C58 FDDFFFFF         (      sprites.asm):00310                 .db 253,223,255,255
3C5C FDDFFFFF         (      sprites.asm):00311                 .db 253,223,255,255
3C60 FFFFFFFF         (      sprites.asm):00312                 .db 255,255,255,255
3C64 FFFFFFFF         (      sprites.asm):00313                 .db 255,255,255,255
3C68 FFFFFFFF         (      sprites.asm):00314                 .db 255,255,255,255
3C6C FFFFFFFF         (      sprites.asm):00315                 .db 255,255,255,255
                      (      sprites.asm):00316         
                      (      sprites.asm):00317         
3C70                  (      sprites.asm):00318         sprite_player_up_right
3C70 FFFFFFFF         (      sprites.asm):00319                 .db 255,255,255,255
3C74 FFFFFFFF         (      sprites.asm):00320                 .db 255,255,255,255
3C78 FFFFFFFF         (      sprites.asm):00321                 .db 255,255,255,255
3C7C FFFFDDFF         (      sprites.asm):00322                 .db 255,255,221,255
3C80 FFFFDF7F         (      sprites.asm):00323                 .db 255,255,223,127
3C84 FFFFFF7F         (      sprites.asm):00324                 .db 255,255,255,127
3C88 FFFF557F         (      sprites.asm):00325                 .db 255,255,85,127
3C8C FFFFDF7F         (      sprites.asm):00326                 .db 255,255,223,127
3C90 FFFFDF7F         (      sprites.asm):00327                 .db 255,255,223,127
3C94 FFFFDDFF         (      sprites.asm):00328                 .db 255,255,221,255
3C98 FFFFDFFF         (      sprites.asm):00329                 .db 255,255,223,255
3C9C FFFF77FF         (      sprites.asm):00330                 .db 255,255,119,255
3CA0 FFFF77FF         (      sprites.asm):00331                 .db 255,255,119,255
3CA4 FFFFFFFF         (      sprites.asm):00332                 .db 255,255,255,255
3CA8 FFFFFFFF         (      sprites.asm):00333                 .db 255,255,255,255
3CAC FFFFFFFF         (      sprites.asm):00334                 .db 255,255,255,255
3CB0 FFFFFFFF         (      sprites.asm):00335                 .db 255,255,255,255
3CB4 FFFFFFFF         (      sprites.asm):00336                 .db 255,255,255,255
3CB8 FFFFFFFF         (      sprites.asm):00337                 .db 255,255,255,255
3CBC FFFFFFFF         (      sprites.asm):00338                 .db 255,255,255,255
3CC0 FFFFFFFF         (      sprites.asm):00339                 .db 255,255,255,255
3CC4 FFFFFFFF         (      sprites.asm):00340                 .db 255,255,255,255
3CC8 FFFFFFFF         (      sprites.asm):00341                 .db 255,255,255,255
3CCC FFFFFFFF         (      sprites.asm):00342                 .db 255,255,255,255
                      (      sprites.asm):00343                 
3CD0                  (      sprites.asm):00344         sprite_player_down_right
3CD0 FFFFFFFF         (      sprites.asm):00345                 .db 255,255,255,255
3CD4 FFFFFFFF         (      sprites.asm):00346                 .db 255,255,255,255
3CD8 FFFFFFFF         (      sprites.asm):00347                 .db 255,255,255,255
3CDC FFFFFFFF         (      sprites.asm):00348                 .db 255,255,255,255
3CE0 FFFFFFFF         (      sprites.asm):00349                 .db 255,255,255,255
3CE4 FFFFFFFF         (      sprites.asm):00350                 .db 255,255,255,255
3CE8 FFFFFFFF         (      sprites.asm):00351                 .db 255,255,255,255
3CEC FFFFFFFF         (      sprites.asm):00352                 .db 255,255,255,255
3CF0 FFFFFFFF         (      sprites.asm):00353                 .db 255,255,255,255
3CF4 FFFFFFFF         (      sprites.asm):00354                 .db 255,255,255,255
3CF8 FFFFF77F         (      sprites.asm):00355                 .db 255,255,247,127
3CFC FFFFF7DF         (      sprites.asm):00356                 .db 255,255,247,223
3D00 FFFFFFDF         (      sprites.asm):00357                 .db 255,255,255,223
3D04 FFFFD55F         (      sprites.asm):00358                 .db 255,255,213,95
3D08 FFFFF7DF         (      sprites.asm):00359                 .db 255,255,247,223
3D0C FFFFF7DF         (      sprites.asm):00360                 .db 255,255,247,223
3D10 FFFFF77F         (      sprites.asm):00361                 .db 255,255,247,127
3D14 FFFFF7FF         (      sprites.asm):00362                 .db 255,255,247,255
3D18 FFFFDDFF         (      sprites.asm):00363                 .db 255,255,221,255
3D1C FFFFDDFF         (      sprites.asm):00364                 .db 255,255,221,255
3D20 FFFFFFFF         (      sprites.asm):00365                 .db 255,255,255,255
3D24 FFFFFFFF         (      sprites.asm):00366                 .db 255,255,255,255
3D28 FFFFFFFF         (      sprites.asm):00367                 .db 255,255,255,255
3D2C FFFFFFFF         (      sprites.asm):00368                 .db 255,255,255,255
                      (      sprites.asm):00369                 
3D30                  (      sprites.asm):00370         sprite_wumpus
3D30 FFFFFFFF         (      sprites.asm):00371                 .db 255,255,255,255
3D34 FFFFFFFF         (      sprites.asm):00372                 .db 255,255,255,255
3D38 FFFFFFFF         (      sprites.asm):00373                 .db 255,255,255,255
3D3C FFFFFFFF         (      sprites.asm):00374                 .db 255,255,255,255
3D40 FFFFFFFF         (      sprites.asm):00375                 .db 255,255,255,255
3D44 FFFFFFFF         (      sprites.asm):00376                 .db 255,255,255,255
3D48 FFFD5FFF         (      sprites.asm):00377                 .db 255,253,95,255
3D4C FFF557FF         (      sprites.asm):00378                 .db 255,245,87,255
3D50 FFF777FF         (      sprites.asm):00379                 .db 255,247,119,255
3D54 FFD555FF         (      sprites.asm):00380                 .db 255,213,85,255
3D58 FFDDDDFF         (      sprites.asm):00381                 .db 255,221,221,255
3D5C FF77777F         (      sprites.asm):00382                 .db 255,119,119,127
3D60 FF7D5F7F         (      sprites.asm):00383                 .db 255,125,95,127
3D64 FDDFFDDF         (      sprites.asm):00384                 .db 253,223,253,223
3D68 FFFFFFFF         (      sprites.asm):00385                 .db 255,255,255,255
3D6C FFFFFFFF         (      sprites.asm):00386                 .db 255,255,255,255
3D70 FFFFFFFF         (      sprites.asm):00387                 .db 255,255,255,255
3D74 FFFFFFFF         (      sprites.asm):00388                 .db 255,255,255,255
3D78 FFFFFFFF         (      sprites.asm):00389                 .db 255,255,255,255
3D7C FFFFFFFF         (      sprites.asm):00390                 .db 255,255,255,255
3D80 FFFFFFFF         (      sprites.asm):00391                 .db 255,255,255,255
3D84 FFFFFFFF         (      sprites.asm):00392                 .db 255,255,255,255
3D88 FFFFFFFF         (      sprites.asm):00393                 .db 255,255,255,255
3D8C FFFFFFFF         (      sprites.asm):00394                 .db 255,255,255,255
                      (      sprites.asm):00395                 
3D90                  (      sprites.asm):00396         sprite_bat
3D90 FFFFFFFF         (      sprites.asm):00397                 .db 255,255,255,255
3D94 FFFFFFFF         (      sprites.asm):00398                 .db 255,255,255,255
3D98 FFFFFFFF         (      sprites.asm):00399                 .db 255,255,255,255
3D9C FFFFCFCF         (      sprites.asm):00400                 .db 255,255,207,207
3DA0 FFFFCCCF         (      sprites.asm):00401                 .db 255,255,204,207
3DA4 FFFFC00F         (      sprites.asm):00402                 .db 255,255,192,15
3DA8 FFFFF33F         (      sprites.asm):00403                 .db 255,255,243,63
3DAC FFFFFFFF         (      sprites.asm):00404                 .db 255,255,255,255
3DB0 FFFFFFFF         (      sprites.asm):00405                 .db 255,255,255,255
3DB4 FFFFFFFF         (      sprites.asm):00406                 .db 255,255,255,255
3DB8 FFFFFFFF         (      sprites.asm):00407                 .db 255,255,255,255
3DBC FFFFFFFF         (      sprites.asm):00408                 .db 255,255,255,255
3DC0 FFFFFFFF         (      sprites.asm):00409                 .db 255,255,255,255
3DC4 FFFFFFFF         (      sprites.asm):00410                 .db 255,255,255,255
3DC8 FFFFFFFF         (      sprites.asm):00411                 .db 255,255,255,255
3DCC FFFFFFFF         (      sprites.asm):00412                 .db 255,255,255,255
3DD0 FFFFFFFF         (      sprites.asm):00413                 .db 255,255,255,255
3DD4 FFFFFFFF         (      sprites.asm):00414                 .db 255,255,255,255
3DD8 FFFFFFFF         (      sprites.asm):00415                 .db 255,255,255,255
3DDC FFFFFFFF         (      sprites.asm):00416                 .db 255,255,255,255
3DE0 FFFFFFFF         (      sprites.asm):00417                 .db 255,255,255,255
3DE4 FFFFFFFF         (      sprites.asm):00418                 .db 255,255,255,255
3DE8 FFFFFFFF         (      sprites.asm):00419                 .db 255,255,255,255
3DEC FFFFFFFF         (      sprites.asm):00420                 .db 255,255,255,255
                      (      sprites.asm):00421         
3DF0                  (      sprites.asm):00422         sprite_arrow_1
3DF0 FFFFFFFF         (      sprites.asm):00423                 .db 255,255,255,255
3DF4 FFFFFFFF         (      sprites.asm):00424                 .db 255,255,255,255
3DF8 FFFFFFFF         (      sprites.asm):00425                 .db 255,255,255,255
3DFC FFFFFFFF         (      sprites.asm):00426                 .db 255,255,255,255
3E00 FFFFFFFF         (      sprites.asm):00427                 .db 255,255,255,255
3E04 FFFFFFFF         (      sprites.asm):00428                 .db 255,255,255,255
3E08 FFFFFFFF         (      sprites.asm):00429                 .db 255,255,255,255
3E0C FFFFFFFF         (      sprites.asm):00430                 .db 255,255,255,255
3E10 FFFFFFFF         (      sprites.asm):00431                 .db 255,255,255,255
3E14 FFFFFFFF         (      sprites.asm):00432                 .db 255,255,255,255
3E18 FFFFFFFF         (      sprites.asm):00433                 .db 255,255,255,255
3E1C 0FF3FFFF         (      sprites.asm):00434                 .db 15,243,255,255
3E20 5554FFFF         (      sprites.asm):00435                 .db 85,84,255,255
3E24 0FF3FFFF         (      sprites.asm):00436                 .db 15,243,255,255
3E28 FFFFFFFF         (      sprites.asm):00437                 .db 255,255,255,255
3E2C FFFFFFFF         (      sprites.asm):00438                 .db 255,255,255,255
3E30 FFFFFFFF         (      sprites.asm):00439                 .db 255,255,255,255
3E34 FFFFFFFF         (      sprites.asm):00440                 .db 255,255,255,255
3E38 FFFFFFFF         (      sprites.asm):00441                 .db 255,255,255,255
3E3C FFFFFFFF         (      sprites.asm):00442                 .db 255,255,255,255
3E40 FFFFFFFF         (      sprites.asm):00443                 .db 255,255,255,255
3E44 FFFFFFFF         (      sprites.asm):00444                 .db 255,255,255,255
3E48 FFFFFFFF         (      sprites.asm):00445                 .db 255,255,255,255
3E4C FFFFFFFF         (      sprites.asm):00446                 .db 255,255,255,255     
                      (      sprites.asm):00447         
3E50                  (      sprites.asm):00448         sprite_arrow_2
3E50 FFFFFFFF         (      sprites.asm):00449                 .db 255,255,255,255
3E54 FFFFFFFF         (      sprites.asm):00450                 .db 255,255,255,255
3E58 FFFFFFFF         (      sprites.asm):00451                 .db 255,255,255,255
3E5C FFFFFFFF         (      sprites.asm):00452                 .db 255,255,255,255
3E60 FFFFFFFF         (      sprites.asm):00453                 .db 255,255,255,255
3E64 FFFFFFFF         (      sprites.asm):00454                 .db 255,255,255,255
3E68 FFFFFFFF         (      sprites.asm):00455                 .db 255,255,255,255
3E6C FFFFFFFF         (      sprites.asm):00456                 .db 255,255,255,255
3E70 FFFFFFFF         (      sprites.asm):00457                 .db 255,255,255,255
3E74 FFFFFFFF         (      sprites.asm):00458                 .db 255,255,255,255
3E78 FFFFFFFF         (      sprites.asm):00459                 .db 255,255,255,255
3E7C FFFF0FF3         (      sprites.asm):00460                 .db 255,255,15,243
3E80 FFFF5554         (      sprites.asm):00461                 .db 255,255,85,84
3E84 FFFF0FF3         (      sprites.asm):00462                 .db 255,255,15,243
3E88 FFFFFFFF         (      sprites.asm):00463                 .db 255,255,255,255
3E8C FFFFFFFF         (      sprites.asm):00464                 .db 255,255,255,255
3E90 FFFFFFFF         (      sprites.asm):00465                 .db 255,255,255,255
3E94 FFFFFFFF         (      sprites.asm):00466                 .db 255,255,255,255
3E98 FFFFFFFF         (      sprites.asm):00467                 .db 255,255,255,255
3E9C FFFFFFFF         (      sprites.asm):00468                 .db 255,255,255,255
3EA0 FFFFFFFF         (      sprites.asm):00469                 .db 255,255,255,255
3EA4 FFFFFFFF         (      sprites.asm):00470                 .db 255,255,255,255
3EA8 FFFFFFFF         (      sprites.asm):00471                 .db 255,255,255,255
3EAC FFFFFFFF         (      sprites.asm):00472                 .db 255,255,255,255
                      (      sprites.asm):00473         
3EB0                  (      sprites.asm):00474         sprite_player_bat_1
3EB0 FFFFFFFF         (      sprites.asm):00475                 .db 255,255,255,255
3EB4 FFFFFFFF         (      sprites.asm):00476                 .db 255,255,255,255
3EB8 F333FFFF         (      sprites.asm):00477                 .db 243,51,255,255
3EBC F003FFFF         (      sprites.asm):00478                 .db 240,3,255,255
3EC0 F003FFFF         (      sprites.asm):00479                 .db 240,3,255,255
3EC4 F0C3FFFF         (      sprites.asm):00480                 .db 240,195,255,255
3EC8 F333FFFF         (      sprites.asm):00481                 .db 243,51,255,255
3ECC FF3FFFFF         (      sprites.asm):00482                 .db 255,63,255,255
3ED0 FC3FFFFF         (      sprites.asm):00483                 .db 252,63,255,255
3ED4 FF0FFFFF         (      sprites.asm):00484                 .db 255,15,255,255
3ED8 FF3FFFFF         (      sprites.asm):00485                 .db 255,63,255,255
3EDC FF3FFFFF         (      sprites.asm):00486                 .db 255,63,255,255
3EE0 FCCFFFFF         (      sprites.asm):00487                 .db 252,207,255,255
3EE4 FCCFFFFF         (      sprites.asm):00488                 .db 252,207,255,255
3EE8 FFFFFFFF         (      sprites.asm):00489                 .db 255,255,255,255
3EEC FFFFFFFF         (      sprites.asm):00490                 .db 255,255,255,255
3EF0 FFFFFFFF         (      sprites.asm):00491                 .db 255,255,255,255
3EF4 FFFFFFFF         (      sprites.asm):00492                 .db 255,255,255,255
3EF8 FFFFFFFF         (      sprites.asm):00493                 .db 255,255,255,255
3EFC FFFFFFFF         (      sprites.asm):00494                 .db 255,255,255,255
3F00 FFFFFFFF         (      sprites.asm):00495                 .db 255,255,255,255
3F04 FFFFFFFF         (      sprites.asm):00496                 .db 255,255,255,255
3F08 FFFFFFFF         (      sprites.asm):00497                 .db 255,255,255,255
3F0C FFFFFFFF         (      sprites.asm):00498                 .db 255,255,255,255
                      (      sprites.asm):00499         
3F10                  (      sprites.asm):00500         sprite_player_bat_2
3F10 FFFFFFFF         (      sprites.asm):00501                 .db 255,255,255,255
3F14 FFFFF3F3         (      sprites.asm):00502                 .db 255,255,243,243
3F18 FFFFF333         (      sprites.asm):00503                 .db 255,255,243,51
3F1C FFFFF003         (      sprites.asm):00504                 .db 255,255,240,3
3F20 FFFFFC0F         (      sprites.asm):00505                 .db 255,255,252,15
3F24 FFFFFFFF         (      sprites.asm):00506                 .db 255,255,255,255
3F28 FFFFFF3F         (      sprites.asm):00507                 .db 255,255,255,63
3F2C FFFFFF3F         (      sprites.asm):00508                 .db 255,255,255,63
3F30 FFFFFF0F         (      sprites.asm):00509                 .db 255,255,255,15
3F34 FFFFFC3F         (      sprites.asm):00510                 .db 255,255,252,63
3F38 FFFFFF3F         (      sprites.asm):00511                 .db 255,255,255,63
3F3C FFFFFF3F         (      sprites.asm):00512                 .db 255,255,255,63
3F40 FFFFFCCF         (      sprites.asm):00513                 .db 255,255,252,207
3F44 FFFFFCCF         (      sprites.asm):00514                 .db 255,255,252,207
3F48 FFFFFFFF         (      sprites.asm):00515                 .db 255,255,255,255
3F4C FFFFFFFF         (      sprites.asm):00516                 .db 255,255,255,255
3F50 FFFFFFFF         (      sprites.asm):00517                 .db 255,255,255,255
3F54 FFFFFFFF         (      sprites.asm):00518                 .db 255,255,255,255
3F58 FFFFFFFF         (      sprites.asm):00519                 .db 255,255,255,255
3F5C FFFFFFFF         (      sprites.asm):00520                 .db 255,255,255,255
3F60 FFFFFFFF         (      sprites.asm):00521                 .db 255,255,255,255
3F64 FFFFFFFF         (      sprites.asm):00522                 .db 255,255,255,255
3F68 FFFFFFFF         (      sprites.asm):00523                 .db 255,255,255,255
3F6C FFFFFFFF         (      sprites.asm):00524                 .db 255,255,255,255
                      (      sprites.asm):00525         
                      (      sprites.asm):00526         
                      (      sprites.asm):00527                 
3F70                  (      sprites.asm):00528         sprite_pit_wall
3F70 00000000         (      sprites.asm):00529                 .db 0,0,0,0
3F74 00000000         (      sprites.asm):00530                 .db 0,0,0,0
3F78 00000000         (      sprites.asm):00531                 .db 0,0,0,0
3F7C 00000000         (      sprites.asm):00532                 .db 0,0,0,0
3F80 00000000         (      sprites.asm):00533                 .db 0,0,0,0
3F84 00000000         (      sprites.asm):00534                 .db 0,0,0,0
3F88 00000000         (      sprites.asm):00535                 .db 0,0,0,0
3F8C 00000000         (      sprites.asm):00536                 .db 0,0,0,0
3F90 00000000         (      sprites.asm):00537                 .db 0,0,0,0
3F94 00000000         (      sprites.asm):00538                 .db 0,0,0,0
3F98 00000000         (      sprites.asm):00539                 .db 0,0,0,0
3F9C 00000000         (      sprites.asm):00540                 .db 0,0,0,0
3FA0 00000000         (      sprites.asm):00541                 .db 0,0,0,0
3FA4 00000000         (      sprites.asm):00542                 .db 0,0,0,0
3FA8 00000000         (      sprites.asm):00543                 .db 0,0,0,0
3FAC 00000000         (      sprites.asm):00544                 .db 0,0,0,0
3FB0 00000000         (      sprites.asm):00545                 .db 0,0,0,0
3FB4 00000000         (      sprites.asm):00546                 .db 0,0,0,0
3FB8 00000000         (      sprites.asm):00547                 .db 0,0,0,0
3FBC 00000000         (      sprites.asm):00548                 .db 0,0,0,0
3FC0 00000000         (      sprites.asm):00549                 .db 0,0,0,0
3FC4 00000000         (      sprites.asm):00550                 .db 0,0,0,0
3FC8 00000000         (      sprites.asm):00551                 .db 0,0,0,0
3FCC 00000000         (      sprites.asm):00552                 .db 0,0,0,0
                      (      sprites.asm):00553         
3FD0                  (      sprites.asm):00554         white_tile
3FD0 FFFFFFFF         (      sprites.asm):00555                 .db 255,255,255,255
3FD4 FFFFFFFF         (      sprites.asm):00556                 .db 255,255,255,255
3FD8 FFFFFFFF         (      sprites.asm):00557                 .db 255,255,255,255
3FDC FFFFFFFF         (      sprites.asm):00558                 .db 255,255,255,255
3FE0 FFFFFFFF         (      sprites.asm):00559                 .db 255,255,255,255
3FE4 FFFFFFFF         (      sprites.asm):00560                 .db 255,255,255,255
3FE8 FFFFFFFF         (      sprites.asm):00561                 .db 255,255,255,255
3FEC FFFFFFFF         (      sprites.asm):00562                 .db 255,255,255,255
3FF0 FFFFFFFF         (      sprites.asm):00563                 .db 255,255,255,255
3FF4 FFFFFFFF         (      sprites.asm):00564                 .db 255,255,255,255
3FF8 FFFFFFFF         (      sprites.asm):00565                 .db 255,255,255,255
3FFC FFFFFFFF         (      sprites.asm):00566                 .db 255,255,255,255
4000 FFFFFFFF         (      sprites.asm):00567                 .db 255,255,255,255
4004 FFFFFFFF         (      sprites.asm):00568                 .db 255,255,255,255
4008 FFFFFFFF         (      sprites.asm):00569                 .db 255,255,255,255
400C FFFFFFFF         (      sprites.asm):00570                 .db 255,255,255,255
4010 FFFFFFFF         (      sprites.asm):00571                 .db 255,255,255,255
4014 FFFFFFFF         (      sprites.asm):00572                 .db 255,255,255,255
4018 FFFFFFFF         (      sprites.asm):00573                 .db 255,255,255,255
401C FFFFFFFF         (      sprites.asm):00574                 .db 255,255,255,255
4020 FFFFFFFF         (      sprites.asm):00575                 .db 255,255,255,255
4024 FFFFFFFF         (      sprites.asm):00576                 .db 255,255,255,255
4028 FFFFFFFF         (      sprites.asm):00577                 .db 255,255,255,255
402C FFFFFFFF         (      sprites.asm):00578                 .db 255,255,255,255
                      (      sprites.asm):00579                 
4030                  (      sprites.asm):00580         sprite_pit_bottom
4030 CCCCCCCC         (      sprites.asm):00581                 .db 204,204,204,204
4034 33333333         (      sprites.asm):00582                 .db 51,51,51,51
4038 CCCCCCCC         (      sprites.asm):00583                 .db 204,204,204,204
403C 33333333         (      sprites.asm):00584                 .db 51,51,51,51
4040 CCCCCCCC         (      sprites.asm):00585                 .db 204,204,204,204
4044 33333333         (      sprites.asm):00586                 .db 51,51,51,51
4048 CCCCCCCC         (      sprites.asm):00587                 .db 204,204,204,204
404C 33333333         (      sprites.asm):00588                 .db 51,51,51,51
4050 CCCCCCCC         (      sprites.asm):00589                 .db 204,204,204,204
4054 33333333         (      sprites.asm):00590                 .db 51,51,51,51
4058 CCCCCCCC         (      sprites.asm):00591                 .db 204,204,204,204
405C 33333333         (      sprites.asm):00592                 .db 51,51,51,51
4060 CCCCCCCC         (      sprites.asm):00593                 .db 204,204,204,204
4064 33333333         (      sprites.asm):00594                 .db 51,51,51,51
4068 CCCCCCCC         (      sprites.asm):00595                 .db 204,204,204,204
406C 33333333         (      sprites.asm):00596                 .db 51,51,51,51
4070 CCCCCCCC         (      sprites.asm):00597                 .db 204,204,204,204
4074 33333333         (      sprites.asm):00598                 .db 51,51,51,51
4078 CCCCCCCC         (      sprites.asm):00599                 .db 204,204,204,204
407C 33333333         (      sprites.asm):00600                 .db 51,51,51,51
4080 CCCCCCCC         (      sprites.asm):00601                 .db 204,204,204,204
4084 33333333         (      sprites.asm):00602                 .db 51,51,51,51
4088 CCCCCCCC         (      sprites.asm):00603                 .db 204,204,204,204
408C 33333333         (      sprites.asm):00604                 .db 51,51,51,51
                      (      sprites.asm):00605         
4090                  (      sprites.asm):00606         sprite_tooth_upper
4090 FFFFFFFF         (      sprites.asm):00607                 .db 255,255,255,255
4094 FFFFFFFF         (      sprites.asm):00608                 .db 255,255,255,255
4098 FFFFFFFF         (      sprites.asm):00609                 .db 255,255,255,255
409C FFFFFFFF         (      sprites.asm):00610                 .db 255,255,255,255
40A0 FFFFFFFF         (      sprites.asm):00611                 .db 255,255,255,255
40A4 FFFFFFFF         (      sprites.asm):00612                 .db 255,255,255,255
40A8 FFFFFFFF         (      sprites.asm):00613                 .db 255,255,255,255
40AC FFFFFFFF         (      sprites.asm):00614                 .db 255,255,255,255
40B0 FFFFFFFF         (      sprites.asm):00615                 .db 255,255,255,255
40B4 BFFFFFFE         (      sprites.asm):00616                 .db 191,255,255,254
40B8 BFFFFFFE         (      sprites.asm):00617                 .db 191,255,255,254
40BC BFFFFFFE         (      sprites.asm):00618                 .db 191,255,255,254
40C0 BFFFFFFE         (      sprites.asm):00619                 .db 191,255,255,254
40C4 AFFFFFFA         (      sprites.asm):00620                 .db 175,255,255,250
40C8 AFFFFFFA         (      sprites.asm):00621                 .db 175,255,255,250
40CC AFFFFFFA         (      sprites.asm):00622                 .db 175,255,255,250
40D0 AFFFFFFA         (      sprites.asm):00623                 .db 175,255,255,250
40D4 ABFFFFEA         (      sprites.asm):00624                 .db 171,255,255,234
40D8 ABFFFFEA         (      sprites.asm):00625                 .db 171,255,255,234
40DC AAFFFFAA         (      sprites.asm):00626                 .db 170,255,255,170
40E0 AABFFEAA         (      sprites.asm):00627                 .db 170,191,254,170
40E4 AAAFFAAA         (      sprites.asm):00628                 .db 170,175,250,170
40E8 AAABEAAA         (      sprites.asm):00629                 .db 170,171,234,170
40EC AAAAAAAA         (      sprites.asm):00630                 .db 170,170,170,170
                      (      sprites.asm):00631                 
40F0                  (      sprites.asm):00632         sprite_tooth_lower
40F0 AAAAAAAA         (      sprites.asm):00633                 .db 170,170,170,170
40F4 AAABEAAA         (      sprites.asm):00634                 .db 170,171,234,170
40F8 AAAFFAAA         (      sprites.asm):00635                 .db 170,175,250,170
40FC AABFFEAA         (      sprites.asm):00636                 .db 170,191,254,170
4100 AAFFFFAA         (      sprites.asm):00637                 .db 170,255,255,170
4104 ABFFFFEA         (      sprites.asm):00638                 .db 171,255,255,234
4108 ABFFFFEA         (      sprites.asm):00639                 .db 171,255,255,234
410C AFFFFFFA         (      sprites.asm):00640                 .db 175,255,255,250
4110 AFFFFFFA         (      sprites.asm):00641                 .db 175,255,255,250
4114 AFFFFFFA         (      sprites.asm):00642                 .db 175,255,255,250
4118 AFFFFFFA         (      sprites.asm):00643                 .db 175,255,255,250
411C BFFFFFFE         (      sprites.asm):00644                 .db 191,255,255,254
4120 BFFFFFFE         (      sprites.asm):00645                 .db 191,255,255,254
4124 BFFFFFFE         (      sprites.asm):00646                 .db 191,255,255,254
4128 BFFFFFFE         (      sprites.asm):00647                 .db 191,255,255,254
412C FFFFFFFF         (      sprites.asm):00648                 .db 255,255,255,255
4130 FFFFFFFF         (      sprites.asm):00649                 .db 255,255,255,255
4134 FFFFFFFF         (      sprites.asm):00650                 .db 255,255,255,255
4138 FFFFFFFF         (      sprites.asm):00651                 .db 255,255,255,255
413C FFFFFFFF         (      sprites.asm):00652                 .db 255,255,255,255
4140 FFFFFFFF         (      sprites.asm):00653                 .db 255,255,255,255
4144 FFFFFFFF         (      sprites.asm):00654                 .db 255,255,255,255
4148 FFFFFFFF         (      sprites.asm):00655                 .db 255,255,255,255
414C FFFFFFFF         (      sprites.asm):00656                 .db 255,255,255,255
                      (      sprites.asm):00657         
4150                  (      sprites.asm):00658         sprite_falling_player_1
4150 FFFFFFFF         (      sprites.asm):00659                 .db 255,255,255,255
4154 FFFFFFFF         (      sprites.asm):00660                 .db 255,255,255,255
4158 FFFFFCFF         (      sprites.asm):00661                 .db 255,255,252,255
415C FFFFFCFF         (      sprites.asm):00662                 .db 255,255,252,255
4160 FFFC0CC3         (      sprites.asm):00663                 .db 255,252,12,195
4164 FFFFF003         (      sprites.asm):00664                 .db 255,255,240,3
4168 FFFC0CC3         (      sprites.asm):00665                 .db 255,252,12,195
416C FFFFFCFF         (      sprites.asm):00666                 .db 255,255,252,255
4170 FFFFFCFF         (      sprites.asm):00667                 .db 255,255,252,255
4174 FFFFFFFF         (      sprites.asm):00668                 .db 255,255,255,255
4178 FFFFFFFF         (      sprites.asm):00669                 .db 255,255,255,255
417C FFFFFFFF         (      sprites.asm):00670                 .db 255,255,255,255
4180 FFFFFFFF         (      sprites.asm):00671                 .db 255,255,255,255
4184 FFFFFFFF         (      sprites.asm):00672                 .db 255,255,255,255
4188 FFFFFFFF         (      sprites.asm):00673                 .db 255,255,255,255
418C FFFFFFFF         (      sprites.asm):00674                 .db 255,255,255,255
4190 FFFFFFFF         (      sprites.asm):00675                 .db 255,255,255,255
4194 FFFFFFFF         (      sprites.asm):00676                 .db 255,255,255,255
4198 FFFFFFFF         (      sprites.asm):00677                 .db 255,255,255,255
419C FFFFFFFF         (      sprites.asm):00678                 .db 255,255,255,255
41A0 FFFFFFFF         (      sprites.asm):00679                 .db 255,255,255,255
41A4 FFFFFFFF         (      sprites.asm):00680                 .db 255,255,255,255
41A8 FFFFFFFF         (      sprites.asm):00681                 .db 255,255,255,255
41AC FFFFFFFF         (      sprites.asm):00682                 .db 255,255,255,255
                      (      sprites.asm):00683         
41B0                  (      sprites.asm):00684         sprite_falling_player_2 
41B0 FFFFFFFF         (      sprites.asm):00685                 .db 255,255,255,255
41B4 FFFFFFFF         (      sprites.asm):00686                 .db 255,255,255,255
41B8 FFFFFFFF         (      sprites.asm):00687                 .db 255,255,255,255
41BC FFFFFFFF         (      sprites.asm):00688                 .db 255,255,255,255
41C0 FFFFFFFF         (      sprites.asm):00689                 .db 255,255,255,255
41C4 FFFFFFFF         (      sprites.asm):00690                 .db 255,255,255,255
41C8 FFFFFFFF         (      sprites.asm):00691                 .db 255,255,255,255
41CC FFFFFFFF         (      sprites.asm):00692                 .db 255,255,255,255
41D0 FFFFFFFF         (      sprites.asm):00693                 .db 255,255,255,255
41D4 FFFFFFFF         (      sprites.asm):00694                 .db 255,255,255,255
41D8 FFFFFFFF         (      sprites.asm):00695                 .db 255,255,255,255
41DC FFFFFFFF         (      sprites.asm):00696                 .db 255,255,255,255
41E0 FFFFFFFF         (      sprites.asm):00697                 .db 255,255,255,255
41E4 FFFFFFFF         (      sprites.asm):00698                 .db 255,255,255,255
41E8 FFFFFFFF         (      sprites.asm):00699                 .db 255,255,255,255
41EC FFFFFCFF         (      sprites.asm):00700                 .db 255,255,252,255
41F0 FFFFFCFF         (      sprites.asm):00701                 .db 255,255,252,255
41F4 FFFC0CC3         (      sprites.asm):00702                 .db 255,252,12,195
41F8 FFFFF003         (      sprites.asm):00703                 .db 255,255,240,3
41FC FFFC0CC3         (      sprites.asm):00704                 .db 255,252,12,195
4200 FFFFFCFF         (      sprites.asm):00705                 .db 255,255,252,255
4204 FFFFFCFF         (      sprites.asm):00706                 .db 255,255,252,255
4208 FFFFFFFF         (      sprites.asm):00707                 .db 255,255,255,255
420C FFFFFFFF         (      sprites.asm):00708                 .db 255,255,255,255
                      (      sprites.asm):00709         
4210                  (      sprites.asm):00710         sprite_wumpus_left
4210 FFFFD555         (      sprites.asm):00711                 .db 255,255,213,85
4214 FFFFD555         (      sprites.asm):00712                 .db 255,255,213,85
4218 FFFF5555         (      sprites.asm):00713                 .db 255,255,85,85
421C FFFF5575         (      sprites.asm):00714                 .db 255,255,85,117
4220 FFFD55FD         (      sprites.asm):00715                 .db 255,253,85,253
4224 FFFD55ED         (      sprites.asm):00716                 .db 255,253,85,237
4228 FFF55555         (      sprites.asm):00717                 .db 255,245,85,85
422C FFF55555         (      sprites.asm):00718                 .db 255,245,85,85
4230 FFD55555         (      sprites.asm):00719                 .db 255,213,85,85
4234 FF55D555         (      sprites.asm):00720                 .db 255,85,213,85
4238 FF55DCCC         (      sprites.asm):00721                 .db 255,85,220,204
423C FF5FDCCC         (      sprites.asm):00722                 .db 255,95,220,204
4240 FF5FD000         (      sprites.asm):00723                 .db 255,95,208,0
4244 FF5FDC00         (      sprites.asm):00724                 .db 255,95,220,0
4248 FF5FDCCC         (      sprites.asm):00725                 .db 255,95,220,204
424C FF5FD4CC         (      sprites.asm):00726                 .db 255,95,212,204
4250 FF5FD555         (      sprites.asm):00727                 .db 255,95,213,85
4254 FF5FD555         (      sprites.asm):00728                 .db 255,95,213,85
4258 FF57F555         (      sprites.asm):00729                 .db 255,87,245,85
425C FFD5FD55         (      sprites.asm):00730                 .db 255,213,253,85
4260 FFF57F55         (      sprites.asm):00731                 .db 255,245,127,85
4264 FFFD5FFF         (      sprites.asm):00732                 .db 255,253,95,255
4268 FFFD57FF         (      sprites.asm):00733                 .db 255,253,87,255
426C FFF5F5FF         (      sprites.asm):00734                 .db 255,245,245,255
                      (      sprites.asm):00735         
4270                  (      sprites.asm):00736         sprite_wumpus_right
4270 5557FFFF         (      sprites.asm):00737                 .db 85,87,255,255
4274 5557FFFF         (      sprites.asm):00738                 .db 85,87,255,255
4278 5555FFFF         (      sprites.asm):00739                 .db 85,85,255,255
427C 5D55FFFF         (      sprites.asm):00740                 .db 93,85,255,255
4280 7F557FFF         (      sprites.asm):00741                 .db 127,85,127,255
4284 7B557FFF         (      sprites.asm):00742                 .db 123,85,127,255
4288 55555FFF         (      sprites.asm):00743                 .db 85,85,95,255
428C 55555FFF         (      sprites.asm):00744                 .db 85,85,95,255
4290 555557FF         (      sprites.asm):00745                 .db 85,85,87,255
4294 555755FF         (      sprites.asm):00746                 .db 85,87,85,255
4298 333755FF         (      sprites.asm):00747                 .db 51,55,85,255
429C 3337F5FF         (      sprites.asm):00748                 .db 51,55,245,255
42A0 0007F5FF         (      sprites.asm):00749                 .db 0,7,245,255
42A4 0037F5FF         (      sprites.asm):00750                 .db 0,55,245,255
42A8 3337F5FF         (      sprites.asm):00751                 .db 51,55,245,255
42AC 3317F5FF         (      sprites.asm):00752                 .db 51,23,245,255
42B0 5557F5FF         (      sprites.asm):00753                 .db 85,87,245,255
42B4 5557F5FF         (      sprites.asm):00754                 .db 85,87,245,255
42B8 555FD5FF         (      sprites.asm):00755                 .db 85,95,213,255
42BC 557F57FF         (      sprites.asm):00756                 .db 85,127,87,255
42C0 55FD5FFF         (      sprites.asm):00757                 .db 85,253,95,255
42C4 FFF57FFF         (      sprites.asm):00758                 .db 255,245,127,255
42C8 FFD57FFF         (      sprites.asm):00759                 .db 255,213,127,255
42CC FF5F5FFF         (      sprites.asm):00760                 .db 255,95,95,255
                      (      sprites.asm):00761         
42D0                  (      sprites.asm):00762         sprite_wumpus_dead_left
42D0 FFFFD555         (      sprites.asm):00763                 .db 255,255,213,85
42D4 C3FFD555         (      sprites.asm):00764                 .db 195,255,213,85
42D8 C0FF5555         (      sprites.asm):00765                 .db 192,255,85,85
42DC F0000175         (      sprites.asm):00766                 .db 240,0,1,117
42E0 C0FD55FD         (      sprites.asm):00767                 .db 192,253,85,253
42E4 C3FD55ED         (      sprites.asm):00768                 .db 195,253,85,237
42E8 FFF55555         (      sprites.asm):00769                 .db 255,245,85,85
42EC FFF55555         (      sprites.asm):00770                 .db 255,245,85,85
42F0 FFD55555         (      sprites.asm):00771                 .db 255,213,85,85
42F4 FF55D555         (      sprites.asm):00772                 .db 255,85,213,85
42F8 FF55DCCC         (      sprites.asm):00773                 .db 255,85,220,204
42FC FF5FDCCC         (      sprites.asm):00774                 .db 255,95,220,204
4300 FF5FD000         (      sprites.asm):00775                 .db 255,95,208,0
4304 FF5FDC00         (      sprites.asm):00776                 .db 255,95,220,0
4308 FF5FDCCC         (      sprites.asm):00777                 .db 255,95,220,204
430C FF5FD4CC         (      sprites.asm):00778                 .db 255,95,212,204
4310 FF5FD555         (      sprites.asm):00779                 .db 255,95,213,85
4314 FF5FD555         (      sprites.asm):00780                 .db 255,95,213,85
4318 FF57F555         (      sprites.asm):00781                 .db 255,87,245,85
431C FFD5FD55         (      sprites.asm):00782                 .db 255,213,253,85
4320 FFF57F55         (      sprites.asm):00783                 .db 255,245,127,85
4324 FFFD5FFF         (      sprites.asm):00784                 .db 255,253,95,255
4328 FFFD57FF         (      sprites.asm):00785                 .db 255,253,87,255
432C FFF5F5FF         (      sprites.asm):00786                 .db 255,245,245,255
                      (      sprites.asm):00787         
                      (      sprites.asm):00788         
                      (      sprites.asm):00789                 
4330                  (      sprites.asm):00790         sprite_splat
4330 FFFFFFFF         (      sprites.asm):00791                 .db 255,255,255,255
4334 FFFFFFFF         (      sprites.asm):00792                 .db 255,255,255,255
4338 FFFFFFFF         (      sprites.asm):00793                 .db 255,255,255,255
433C FFFFFFFF         (      sprites.asm):00794                 .db 255,255,255,255
4340 FFFFFFFF         (      sprites.asm):00795                 .db 255,255,255,255
4344 FFFFFFFF         (      sprites.asm):00796                 .db 255,255,255,255
4348 FFFFFFFF         (      sprites.asm):00797                 .db 255,255,255,255
434C FFFFFFFF         (      sprites.asm):00798                 .db 255,255,255,255
4350 FFFFFFFF         (      sprites.asm):00799                 .db 255,255,255,255
4354 FFFFFFFF         (      sprites.asm):00800                 .db 255,255,255,255
4358 FFFFFFFF         (      sprites.asm):00801                 .db 255,255,255,255
435C FFFFFFFF         (      sprites.asm):00802                 .db 255,255,255,255
4360 FFFFFFFF         (      sprites.asm):00803                 .db 255,255,255,255
4364 FFFFFFFF         (      sprites.asm):00804                 .db 255,255,255,255
4368 FFFFFFFF         (      sprites.asm):00805                 .db 255,255,255,255
436C FFFFFFFF         (      sprites.asm):00806                 .db 255,255,255,255
4370 FFFFFFFF         (      sprites.asm):00807                 .db 255,255,255,255
4374 FFFFFFFF         (      sprites.asm):00808                 .db 255,255,255,255
4378 FFFFFFFF         (      sprites.asm):00809                 .db 255,255,255,255
437C FFFFFFFF         (      sprites.asm):00810                 .db 255,255,255,255
4380 FFFFFCFF         (      sprites.asm):00811                 .db 255,255,252,255
4384 FFFFFCFF         (      sprites.asm):00812                 .db 255,255,252,255
4388 FFFC2883         (      sprites.asm):00813                 .db 255,252,40,131
438C FFFAAAAA         (      sprites.asm):00814                 .db 255,250,170,170
                      (      sprites.asm):00815                 
4390                  (      sprites.asm):00816         sprite_blue
4390 55555555         (      sprites.asm):00817                 .db 85,85,85,85
4394 55555555         (      sprites.asm):00818                 .db 85,85,85,85
4398 55555555         (      sprites.asm):00819                 .db 85,85,85,85
439C 55555555         (      sprites.asm):00820                 .db 85,85,85,85
43A0 55555555         (      sprites.asm):00821                 .db 85,85,85,85
43A4 55555555         (      sprites.asm):00822                 .db 85,85,85,85
43A8 55555555         (      sprites.asm):00823                 .db 85,85,85,85
43AC 55555555         (      sprites.asm):00824                 .db 85,85,85,85
43B0 55555555         (      sprites.asm):00825                 .db 85,85,85,85
43B4 55555555         (      sprites.asm):00826                 .db 85,85,85,85
43B8 55555555         (      sprites.asm):00827                 .db 85,85,85,85
43BC 55555555         (      sprites.asm):00828                 .db 85,85,85,85
43C0 55555555         (      sprites.asm):00829                 .db 85,85,85,85
43C4 55555555         (      sprites.asm):00830                 .db 85,85,85,85
43C8 55555555         (      sprites.asm):00831                 .db 85,85,85,85
43CC 55555555         (      sprites.asm):00832                 .db 85,85,85,85
43D0 55555555         (      sprites.asm):00833                 .db 85,85,85,85
43D4 55555555         (      sprites.asm):00834                 .db 85,85,85,85
43D8 55555555         (      sprites.asm):00835                 .db 85,85,85,85
43DC 55555555         (      sprites.asm):00836                 .db 85,85,85,85
43E0 55555555         (      sprites.asm):00837                 .db 85,85,85,85
43E4 55555555         (      sprites.asm):00838                 .db 85,85,85,85
43E8 55555555         (      sprites.asm):00839                 .db 85,85,85,85
43EC 55555555         (      sprites.asm):00840                 .db 85,85,85,85
                      (      sprites.asm):00841         
43F0                  (      sprites.asm):00842         sprite_orange
43F0 AAAAAAAA         (      sprites.asm):00843                 .db 170,170,170,170
43F4 AAAAAAAA         (      sprites.asm):00844                 .db 170,170,170,170
43F8 AAAAAAAA         (      sprites.asm):00845                 .db 170,170,170,170
43FC AAAAAAAA         (      sprites.asm):00846                 .db 170,170,170,170
4400 AAAAAAAA         (      sprites.asm):00847                 .db 170,170,170,170
4404 AAAAAAAA         (      sprites.asm):00848                 .db 170,170,170,170
4408 AAAAAAAA         (      sprites.asm):00849                 .db 170,170,170,170
440C AAAAAAAA         (      sprites.asm):00850                 .db 170,170,170,170
4410 AAAAAAAA         (      sprites.asm):00851                 .db 170,170,170,170
4414 AAAAAAAA         (      sprites.asm):00852                 .db 170,170,170,170
4418 AAAAAAAA         (      sprites.asm):00853                 .db 170,170,170,170
441C AAAAAAAA         (      sprites.asm):00854                 .db 170,170,170,170
4420 AAAAAAAA         (      sprites.asm):00855                 .db 170,170,170,170
4424 AAAAAAAA         (      sprites.asm):00856                 .db 170,170,170,170
4428 AAAAAAAA         (      sprites.asm):00857                 .db 170,170,170,170
442C AAAAAAAA         (      sprites.asm):00858                 .db 170,170,170,170
4430 AAAAAAAA         (      sprites.asm):00859                 .db 170,170,170,170
4434 AAAAAAAA         (      sprites.asm):00860                 .db 170,170,170,170
4438 AAAAAAAA         (      sprites.asm):00861                 .db 170,170,170,170
443C AAAAAAAA         (      sprites.asm):00862                 .db 170,170,170,170
4440 AAAAAAAA         (      sprites.asm):00863                 .db 170,170,170,170
4444 AAAAAAAA         (      sprites.asm):00864                 .db 170,170,170,170
4448 AAAAAAAA         (      sprites.asm):00865                 .db 170,170,170,170
444C AAAAAAAA         (      sprites.asm):00866                 .db 170,170,170,170
                      (      sprites.asm):00867                 
4450                  (      sprites.asm):00868         sprite_white
4450 FFFFFFFF         (      sprites.asm):00869                 .db 255,255,255,255
4454 FFFFFFFF         (      sprites.asm):00870                 .db 255,255,255,255
4458 FFFFFFFF         (      sprites.asm):00871                 .db 255,255,255,255
445C FFFFFFFF         (      sprites.asm):00872                 .db 255,255,255,255
4460 FFFFFFFF         (      sprites.asm):00873                 .db 255,255,255,255
4464 FFFFFFFF         (      sprites.asm):00874                 .db 255,255,255,255
4468 FFFFFFFF         (      sprites.asm):00875                 .db 255,255,255,255
446C FFFFFFFF         (      sprites.asm):00876                 .db 255,255,255,255
4470 FFFFFFFF         (      sprites.asm):00877                 .db 255,255,255,255
4474 FFFFFFFF         (      sprites.asm):00878                 .db 255,255,255,255
4478 FFFFFFFF         (      sprites.asm):00879                 .db 255,255,255,255
447C FFFFFFFF         (      sprites.asm):00880                 .db 255,255,255,255
4480 FFFFFFFF         (      sprites.asm):00881                 .db 255,255,255,255
4484 FFFFFFFF         (      sprites.asm):00882                 .db 255,255,255,255
4488 FFFFFFFF         (      sprites.asm):00883                 .db 255,255,255,255
448C FFFFFFFF         (      sprites.asm):00884                 .db 255,255,255,255
4490 FFFFFFFF         (      sprites.asm):00885                 .db 255,255,255,255
4494 FFFFFFFF         (      sprites.asm):00886                 .db 255,255,255,255
4498 FFFFFFFF         (      sprites.asm):00887                 .db 255,255,255,255
449C FFFFFFFF         (      sprites.asm):00888                 .db 255,255,255,255
44A0 FFFFFFFF         (      sprites.asm):00889                 .db 255,255,255,255
44A4 FFFFFFFF         (      sprites.asm):00890                 .db 255,255,255,255
44A8 FFFFFFFF         (      sprites.asm):00891                 .db 255,255,255,255
44AC FFFFFFFF         (      sprites.asm):00892                 .db 255,255,255,255
                      (      sprites.asm):00893         
                      (      sprites.asm):00894                 
                      (      sprites.asm):00895                 
44B0                  (      sprites.asm):00896         sprite_got
44B0 FFFFFFFF         (      sprites.asm):00897                 .db 255,255,255,255
44B4 FFFFFFFF         (      sprites.asm):00898                 .db 255,255,255,255
44B8 EAAAAAAA         (      sprites.asm):00899                 .db 234,170,170,170
44BC EAAAAAAA         (      sprites.asm):00900                 .db 234,170,170,170
44C0 EFFFFFFF         (      sprites.asm):00901                 .db 239,255,255,255
44C4 EFF0FFC0         (      sprites.asm):00902                 .db 239,240,255,192
44C8 EFC03F3F         (      sprites.asm):00903                 .db 239,192,63,63
44CC EF0F0F3F         (      sprites.asm):00904                 .db 239,15,15,63
44D0 EF3FCF3F         (      sprites.asm):00905                 .db 239,63,207,63
44D4 EF3FFF3F         (      sprites.asm):00906                 .db 239,63,255,63
44D8 EF3FFF3F         (      sprites.asm):00907                 .db 239,63,255,63
44DC EF3FFF3F         (      sprites.asm):00908                 .db 239,63,255,63
44E0 EF3F0F3F         (      sprites.asm):00909                 .db 239,63,15,63
44E4 EF3FCF3F         (      sprites.asm):00910                 .db 239,63,207,63
44E8 EF0FCF3F         (      sprites.asm):00911                 .db 239,15,207,63
44EC EFCF3F3F         (      sprites.asm):00912                 .db 239,207,63,63
44F0 EFC03FCF         (      sprites.asm):00913                 .db 239,192,63,207
44F4 EFF0FFF0         (      sprites.asm):00914                 .db 239,240,255,240
44F8 EFFFFFFF         (      sprites.asm):00915                 .db 239,255,255,255
44FC EFFFFFFF         (      sprites.asm):00916                 .db 239,255,255,255
4500 EAAAAAAA         (      sprites.asm):00917                 .db 234,170,170,170
4504 EAAAAAAA         (      sprites.asm):00918                 .db 234,170,170,170
4508 FFFFFFFF         (      sprites.asm):00919                 .db 255,255,255,255
450C FFFFFFFF         (      sprites.asm):00920                 .db 255,255,255,255
                      (      sprites.asm):00921         
                      (      sprites.asm):00922         
4510                  (      sprites.asm):00923         sprite_it
4510 FFFFFFFF         (      sprites.asm):00924                 .db 255,255,255,255
4514 FFFFFFFF         (      sprites.asm):00925                 .db 255,255,255,255
4518 AAAAAAAA         (      sprites.asm):00926                 .db 170,170,170,170
451C AAAAAAAA         (      sprites.asm):00927                 .db 170,170,170,170
4520 FFFFFFFF         (      sprites.asm):00928                 .db 255,255,255,255
4524 FFFFFFFF         (      sprites.asm):00929                 .db 255,255,255,255
4528 3C00FC0C         (      sprites.asm):00930                 .db 60,0,252,12
452C 3FCFFF3F         (      sprites.asm):00931                 .db 63,207,255,63
4530 3FCFFF3F         (      sprites.asm):00932                 .db 63,207,255,63
4534 3FCFFF3F         (      sprites.asm):00933                 .db 63,207,255,63
4538 3FCFFF3F         (      sprites.asm):00934                 .db 63,207,255,63
453C 3FCFFF3F         (      sprites.asm):00935                 .db 63,207,255,63
4540 3FCFFF3F         (      sprites.asm):00936                 .db 63,207,255,63
4544 3FCFFF3F         (      sprites.asm):00937                 .db 63,207,255,63
4548 3FCFFF3F         (      sprites.asm):00938                 .db 63,207,255,63
454C 3FCFFF3F         (      sprites.asm):00939                 .db 63,207,255,63
4550 3FCFFF3F         (      sprites.asm):00940                 .db 63,207,255,63
4554 FFCFFC0F         (      sprites.asm):00941                 .db 255,207,252,15
4558 FFFFFFFF         (      sprites.asm):00942                 .db 255,255,255,255
455C FFFFFFFF         (      sprites.asm):00943                 .db 255,255,255,255
4560 AAAAAAAA         (      sprites.asm):00944                 .db 170,170,170,170
4564 AAAAAAAA         (      sprites.asm):00945                 .db 170,170,170,170
4568 FFFFFFFF         (      sprites.asm):00946                 .db 255,255,255,255
456C FFFFFFFF         (      sprites.asm):00947                 .db 255,255,255,255
                      (      sprites.asm):00948         
4570                  (      sprites.asm):00949         sprite_excl
4570 FFFFFFFF         (      sprites.asm):00950                 .db 255,255,255,255
4574 FFFFFFFF         (      sprites.asm):00951                 .db 255,255,255,255
4578 AAAAFFFF         (      sprites.asm):00952                 .db 170,170,255,255
457C AAAAFFFF         (      sprites.asm):00953                 .db 170,170,255,255
4580 FFFEFFFF         (      sprites.asm):00954                 .db 255,254,255,255
4584 FFFEFFFF         (      sprites.asm):00955                 .db 255,254,255,255
4588 00CEFFFF         (      sprites.asm):00956                 .db 0,206,255,255
458C CFCEFFFF         (      sprites.asm):00957                 .db 207,206,255,255
4590 CFCEFFFF         (      sprites.asm):00958                 .db 207,206,255,255
4594 CFCEFFFF         (      sprites.asm):00959                 .db 207,206,255,255
4598 CFCEFFFF         (      sprites.asm):00960                 .db 207,206,255,255
459C CFCEFFFF         (      sprites.asm):00961                 .db 207,206,255,255
45A0 CFCEFFFF         (      sprites.asm):00962                 .db 207,206,255,255
45A4 CFCEFFFF         (      sprites.asm):00963                 .db 207,206,255,255
45A8 CFCEFFFF         (      sprites.asm):00964                 .db 207,206,255,255
45AC CFCEFFFF         (      sprites.asm):00965                 .db 207,206,255,255
45B0 CFFEFFFF         (      sprites.asm):00966                 .db 207,254,255,255
45B4 CFCEFFFF         (      sprites.asm):00967                 .db 207,206,255,255
45B8 FFFEFFFF         (      sprites.asm):00968                 .db 255,254,255,255
45BC FFFEFFFF         (      sprites.asm):00969                 .db 255,254,255,255
45C0 AAAAFFFF         (      sprites.asm):00970                 .db 170,170,255,255
45C4 AAAAFFFF         (      sprites.asm):00971                 .db 170,170,255,255
45C8 FFFFFFFF         (      sprites.asm):00972                 .db 255,255,255,255
45CC FFFFFFFF         (      sprites.asm):00973                 .db 255,255,255,255
                      (      sprites.asm):00974         
45D0                  (      sprites.asm):00975         sprite_cho
45D0 FFFFFFFF         (      sprites.asm):00976                 .db 255,255,255,255
45D4 FFFFFFFF         (      sprites.asm):00977                 .db 255,255,255,255
45D8 FFFFFFFF         (      sprites.asm):00978                 .db 255,255,255,255
45DC FFFFFFFF         (      sprites.asm):00979                 .db 255,255,255,255
45E0 FFFFFFFF         (      sprites.asm):00980                 .db 255,255,255,255
45E4 F57DF7D7         (      sprites.asm):00981                 .db 245,125,247,215
45E8 DFDDF77D         (      sprites.asm):00982                 .db 223,221,247,125
45EC DFDDF77D         (      sprites.asm):00983                 .db 223,221,247,125
45F0 DFFDF77D         (      sprites.asm):00984                 .db 223,253,247,125
45F4 DFFDF77D         (      sprites.asm):00985                 .db 223,253,247,125
45F8 DFFDF77D         (      sprites.asm):00986                 .db 223,253,247,125
45FC DFFD577D         (      sprites.asm):00987                 .db 223,253,87,125
4600 DFFDF77D         (      sprites.asm):00988                 .db 223,253,247,125
4604 DFFDF77D         (      sprites.asm):00989                 .db 223,253,247,125
4608 DFDDF77D         (      sprites.asm):00990                 .db 223,221,247,125
460C DFDDF77D         (      sprites.asm):00991                 .db 223,221,247,125
4610 F57DF7D7         (      sprites.asm):00992                 .db 245,125,247,215
4614 FFFFFFFF         (      sprites.asm):00993                 .db 255,255,255,255
4618 FFFFFFFF         (      sprites.asm):00994                 .db 255,255,255,255
461C FFFFFFFF         (      sprites.asm):00995                 .db 255,255,255,255
4620 FFFFFFFF         (      sprites.asm):00996                 .db 255,255,255,255
4624 FFFFFFFF         (      sprites.asm):00997                 .db 255,255,255,255
4628 FFFFFFFF         (      sprites.asm):00998                 .db 255,255,255,255
462C FFFFFFFF         (      sprites.asm):00999                 .db 255,255,255,255
                      (      sprites.asm):01000         
4630                  (      sprites.asm):01001         sprite_ose
4630 FFFFFFFF         (      sprites.asm):01002                 .db 255,255,255,255
4634 FFFFFFFF         (      sprites.asm):01003                 .db 255,255,255,255
4638 FFFFFFFF         (      sprites.asm):01004                 .db 255,255,255,255
463C FFFFFFFF         (      sprites.asm):01005                 .db 255,255,255,255
4640 FFFFFFFF         (      sprites.asm):01006                 .db 255,255,255,255
4644 F5FD7D5F         (      sprites.asm):01007                 .db 245,253,125,95
4648 DF77DDFF         (      sprites.asm):01008                 .db 223,119,221,255
464C DF77DDFF         (      sprites.asm):01009                 .db 223,119,221,255
4650 DF77FDFF         (      sprites.asm):01010                 .db 223,119,253,255
4654 DF77FDFF         (      sprites.asm):01011                 .db 223,119,253,255
4658 DF7D7D5F         (      sprites.asm):01012                 .db 223,125,125,95
465C DF7FDDFF         (      sprites.asm):01013                 .db 223,127,221,255
4660 DF7FDDFF         (      sprites.asm):01014                 .db 223,127,221,255
4664 DF7FDDFF         (      sprites.asm):01015                 .db 223,127,221,255
4668 DF77DDFF         (      sprites.asm):01016                 .db 223,119,221,255
466C DF77DDFF         (      sprites.asm):01017                 .db 223,119,221,255
4670 F5FD7D5F         (      sprites.asm):01018                 .db 245,253,125,95
4674 FFFFFFFF         (      sprites.asm):01019                 .db 255,255,255,255
4678 FFFFFFFF         (      sprites.asm):01020                 .db 255,255,255,255
467C FFFFFFFF         (      sprites.asm):01021                 .db 255,255,255,255
4680 FFFFFFFF         (      sprites.asm):01022                 .db 255,255,255,255
4684 FFFFFFFF         (      sprites.asm):01023                 .db 255,255,255,255
4688 FFFFFFFF         (      sprites.asm):01024                 .db 255,255,255,255
468C FFFFFFFF         (      sprites.asm):01025                 .db 255,255,255,255
                      (      sprites.asm):01026         
4690                  (      sprites.asm):01027         sprite_a_sk     
4690 FFFFFFFF         (      sprites.asm):01028                 .db 255,255,255,255
4694 FFFFFFFF         (      sprites.asm):01029                 .db 255,255,255,255
4698 FFFFFFFF         (      sprites.asm):01030                 .db 255,255,255,255
469C FFFFFFFF         (      sprites.asm):01031                 .db 255,255,255,255
46A0 FFFFFFFF         (      sprites.asm):01032                 .db 255,255,255,255
46A4 F5FFD7DF         (      sprites.asm):01033                 .db 245,255,215,223
46A8 DF7F7DDF         (      sprites.asm):01034                 .db 223,127,125,223
46AC DF7F7DDF         (      sprites.asm):01035                 .db 223,127,125,223
46B0 DF7F7FDD         (      sprites.asm):01036                 .db 223,127,127,221
46B4 DF7F7FDD         (      sprites.asm):01037                 .db 223,127,127,221
46B8 DF7FDFD7         (      sprites.asm):01038                 .db 223,127,223,215
46BC DF7FF7D7         (      sprites.asm):01039                 .db 223,127,247,215
46C0 D57FFDDD         (      sprites.asm):01040                 .db 213,127,253,221
46C4 DF7FFDDD         (      sprites.asm):01041                 .db 223,127,253,221
46C8 DF7F7DDF         (      sprites.asm):01042                 .db 223,127,125,223
46CC DF7F7DDF         (      sprites.asm):01043                 .db 223,127,125,223
46D0 DF7FD7DF         (      sprites.asm):01044                 .db 223,127,215,223
46D4 FFFFFFFF         (      sprites.asm):01045                 .db 255,255,255,255
46D8 FFFFFFFF         (      sprites.asm):01046                 .db 255,255,255,255
46DC FFFFFFFF         (      sprites.asm):01047                 .db 255,255,255,255
46E0 FFFFFFFF         (      sprites.asm):01048                 .db 255,255,255,255
46E4 FFFFFFFF         (      sprites.asm):01049                 .db 255,255,255,255
46E8 FFFFFFFF         (      sprites.asm):01050                 .db 255,255,255,255
46EC FFFFFFFF         (      sprites.asm):01051                 .db 255,255,255,255
                      (      sprites.asm):01052         
46F0                  (      sprites.asm):01053         sprite_ill      
46F0 FFFFFFFF         (      sprites.asm):01054                 .db 255,255,255,255
46F4 FFFFFFFF         (      sprites.asm):01055                 .db 255,255,255,255
46F8 FFFFFFFF         (      sprites.asm):01056                 .db 255,255,255,255
46FC FFFFFFFF         (      sprites.asm):01057                 .db 255,255,255,255
4700 FFFFFFFF         (      sprites.asm):01058                 .db 255,255,255,255
4704 FD5DFDFF         (      sprites.asm):01059                 .db 253,93,253,255
4708 DF7DFDFF         (      sprites.asm):01060                 .db 223,125,253,255
470C 7F7DFDFF         (      sprites.asm):01061                 .db 127,125,253,255
4710 7F7DFDFF         (      sprites.asm):01062                 .db 127,125,253,255
4714 FF7DFDFF         (      sprites.asm):01063                 .db 255,125,253,255
4718 FF7DFDFF         (      sprites.asm):01064                 .db 255,125,253,255
471C FF7DFDFF         (      sprites.asm):01065                 .db 255,125,253,255
4720 FF7DFDFF         (      sprites.asm):01066                 .db 255,125,253,255
4724 FF7DFDFF         (      sprites.asm):01067                 .db 255,125,253,255
4728 7F7DFDFF         (      sprites.asm):01068                 .db 127,125,253,255
472C 7F7DFDFF         (      sprites.asm):01069                 .db 127,125,253,255
4730 DD5D5D5F         (      sprites.asm):01070                 .db 221,93,93,95
4734 FFFFFFFF         (      sprites.asm):01071                 .db 255,255,255,255
4738 FFFFFFFF         (      sprites.asm):01072                 .db 255,255,255,255
473C FFFFFFFF         (      sprites.asm):01073                 .db 255,255,255,255
4740 FFFFFFFF         (      sprites.asm):01074                 .db 255,255,255,255
4744 FFFFFFFF         (      sprites.asm):01075                 .db 255,255,255,255
4748 FFFFFFFF         (      sprites.asm):01076                 .db 255,255,255,255
474C FFFFFFFF         (      sprites.asm):01077                 .db 255,255,255,255
                      (      sprites.asm):01078         
4750                  (      sprites.asm):01079         sprite_left_eye
4750 FFFFFFFF         (      sprites.asm):01080                 .db 255,255,255,255
4754 FFEAABFF         (      sprites.asm):01081                 .db 255,234,171,255
4758 FFAAAAFF         (      sprites.asm):01082                 .db 255,170,170,255
475C FEAAAABF         (      sprites.asm):01083                 .db 254,170,170,191
4760 FAAAAAAF         (      sprites.asm):01084                 .db 250,170,170,175
4764 FAAAAAAB         (      sprites.asm):01085                 .db 250,170,170,171
4768 FAAAAAAB         (      sprites.asm):01086                 .db 250,170,170,171
476C FAA00AAB         (      sprites.asm):01087                 .db 250,160,10,171
4770 EA8002AB         (      sprites.asm):01088                 .db 234,128,2,171
4774 EA8002AB         (      sprites.asm):01089                 .db 234,128,2,171
4778 EA8002AB         (      sprites.asm):01090                 .db 234,128,2,171
477C EA8002AB         (      sprites.asm):01091                 .db 234,128,2,171
4780 EA8002AB         (      sprites.asm):01092                 .db 234,128,2,171
4784 EA8002AB         (      sprites.asm):01093                 .db 234,128,2,171
4788 EA800AAF         (      sprites.asm):01094                 .db 234,128,10,175
478C EAA02AAF         (      sprites.asm):01095                 .db 234,160,42,175
4790 EAAAAAAF         (      sprites.asm):01096                 .db 234,170,170,175
4794 FAAAAAAF         (      sprites.asm):01097                 .db 250,170,170,175
4798 FAAAAABF         (      sprites.asm):01098                 .db 250,170,170,191
479C FAAAAABF         (      sprites.asm):01099                 .db 250,170,170,191
47A0 FEAAAAFF         (      sprites.asm):01100                 .db 254,170,170,255
47A4 FFAAAAFF         (      sprites.asm):01101                 .db 255,170,170,255
47A8 FFEAABFF         (      sprites.asm):01102                 .db 255,234,171,255
47AC FFFFFFFF         (      sprites.asm):01103                 .db 255,255,255,255
                      (      sprites.asm):01104                 
47B0                  (      sprites.asm):01105         sprite_right_eye
47B0 FFFFFFFF         (      sprites.asm):01106                 .db 255,255,255,255
47B4 FFEAABFF         (      sprites.asm):01107                 .db 255,234,171,255
47B8 FFAAAAFF         (      sprites.asm):01108                 .db 255,170,170,255
47BC FEAAAABF         (      sprites.asm):01109                 .db 254,170,170,191
47C0 FAAAAAAF         (      sprites.asm):01110                 .db 250,170,170,175
47C4 EAAAAAAF         (      sprites.asm):01111                 .db 234,170,170,175
47C8 EAAAAAAF         (      sprites.asm):01112                 .db 234,170,170,175
47CC EAA00AAF         (      sprites.asm):01113                 .db 234,160,10,175
47D0 EA8002AB         (      sprites.asm):01114                 .db 234,128,2,171
47D4 EA8002AB         (      sprites.asm):01115                 .db 234,128,2,171
47D8 EA8002AB         (      sprites.asm):01116                 .db 234,128,2,171
47DC EA8002AB         (      sprites.asm):01117                 .db 234,128,2,171
47E0 EA8002AB         (      sprites.asm):01118                 .db 234,128,2,171
47E4 EA8002AB         (      sprites.asm):01119                 .db 234,128,2,171
47E8 FAA002AB         (      sprites.asm):01120                 .db 250,160,2,171
47EC FAA80AAB         (      sprites.asm):01121                 .db     250,168,10,171
47F0 FAAAAAAB         (      sprites.asm):01122                 .db 250,170,170,171
47F4 FAAAAAAF         (      sprites.asm):01123                 .db 250,170,170,175
47F8 FEAAAAAF         (      sprites.asm):01124                 .db 254,170,170,175
47FC FEAAAAAF         (      sprites.asm):01125                 .db 254,170,170,175
4800 FFAAAABF         (      sprites.asm):01126                 .db 255,170,170,191
4804 FFAAAAFF         (      sprites.asm):01127                 .db 255,170,170,255
4808 FFEAABFF         (      sprites.asm):01128                 .db 255,234,171,255
480C FFFFFFFF         (      sprites.asm):01129                 .db 255,255,255,255
                      (      sprites.asm):01130         
4810                  (      sprites.asm):01131         title_w
4810 FFFFFFFF         (      sprites.asm):01132                 .db 255,255,255,255
4814 FFFFFFFF         (      sprites.asm):01133                 .db 255,255,255,255
4818 F7FFFFF7         (      sprites.asm):01134                 .db 247,255,255,247
481C F7FFFFF7         (      sprites.asm):01135                 .db 247,255,255,247
4820 FDFFFFDF         (      sprites.asm):01136                 .db 253,255,255,223
4824 FDFFFFDF         (      sprites.asm):01137                 .db 253,255,255,223
4828 FDFFFFDF         (      sprites.asm):01138                 .db 253,255,255,223
482C FDFFFFDF         (      sprites.asm):01139                 .db 253,255,255,223
4830 FDFFFFDF         (      sprites.asm):01140                 .db 253,255,255,223
4834 FDFFFFDF         (      sprites.asm):01141                 .db 253,255,255,223
4838 FDFFFFDF         (      sprites.asm):01142                 .db 253,255,255,223
483C FDFF7FDF         (      sprites.asm):01143                 .db 253,255,127,223
4840 FDFD5FDF         (      sprites.asm):01144                 .db 253,253,95,223
4844 FDFD5FDF         (      sprites.asm):01145                 .db 253,253,95,223
4848 FDFDDFDF         (      sprites.asm):01146                 .db 253,253,223,223
484C FDF7F7DF         (      sprites.asm):01147                 .db 253,247,247,223
4850 FF57F57F         (      sprites.asm):01148                 .db 255,87,245,127
4854 FF5FFD7F         (      sprites.asm):01149                 .db 255,95,253,127
4858 FFFFFFFF         (      sprites.asm):01150                 .db 255,255,255,255
485C FD777DF7         (      sprites.asm):01151                 .db 253,119,125,247
4860 FDF77775         (      sprites.asm):01152                 .db 253,247,119,117
4864 FD777575         (      sprites.asm):01153                 .db 253,119,117,117
4868 FDF57777         (      sprites.asm):01154                 .db 253,245,119,119
486C FD7DF777         (      sprites.asm):01155                 .db 253,125,247,119
                      (      sprites.asm):01156                 
4870                  (      sprites.asm):01157         title_u
4870 FFFFFFFF         (      sprites.asm):01158                 .db 255,255,255,255
4874 FFFFFFFF         (      sprites.asm):01159                 .db 255,255,255,255
4878 FD7FFD7F         (      sprites.asm):01160                 .db 253,127,253,127
487C FD7FFD7F         (      sprites.asm):01161                 .db 253,127,253,127
4880 FF7FFDFF         (      sprites.asm):01162                 .db 255,127,253,255
4884 FF7FFDFF         (      sprites.asm):01163                 .db 255,127,253,255
4888 FF7FFDFF         (      sprites.asm):01164                 .db 255,127,253,255
488C FF7FFDFF         (      sprites.asm):01165                 .db 255,127,253,255
4890 FF7FFDFF         (      sprites.asm):01166                 .db 255,127,253,255
4894 FF7FFDFF         (      sprites.asm):01167                 .db 255,127,253,255
4898 FF7FFDFF         (      sprites.asm):01168                 .db 255,127,253,255
489C FF7FFDFF         (      sprites.asm):01169                 .db 255,127,253,255
48A0 FF7FFDFF         (      sprites.asm):01170                 .db 255,127,253,255
48A4 FF7FFDFF         (      sprites.asm):01171                 .db 255,127,253,255
48A8 FF7FFDFF         (      sprites.asm):01172                 .db 255,127,253,255
48AC FF5FF5FF         (      sprites.asm):01173                 .db 255,95,245,255
48B0 FFD7D7FF         (      sprites.asm):01174                 .db 255,215,215,255
48B4 FFF55FFF         (      sprites.asm):01175                 .db 255,245,95,255
48B8 FFF55FFF         (      sprites.asm):01176                 .db 255,245,95,255
48BC DFFFFDFD         (      sprites.asm):01177                 .db 223,255,253,253
48C0 DFFFFDFD         (      sprites.asm):01178                 .db 223,255,253,253
48C4 5FFFFDDD         (      sprites.asm):01179                 .db 95,255,253,221
48C8 5FFFFF57         (      sprites.asm):01180                 .db 95,255,255,87
48CC DFFFFF77         (      sprites.asm):01181                 .db 223,255,255,119
                      (      sprites.asm):01182         
48D0                  (      sprites.asm):01183         title_m 
48D0 FFFFFFFF         (      sprites.asm):01184                 .db 255,255,255,255
48D4 FF0FFC3F         (      sprites.asm):01185                 .db 255,15,252,63
48D8 FF03F03F         (      sprites.asm):01186                 .db 255,3,240,63
48DC FDF3F3DF         (      sprites.asm):01187                 .db 253,243,243,223
48E0 FDFCCFDF         (      sprites.asm):01188                 .db 253,252,207,223
48E4 FDFC0FDF         (      sprites.asm):01189                 .db 253,252,15,223
48E8 FDFC0FDF         (      sprites.asm):01190                 .db 253,252,15,223
48EC FDFF3FDF         (      sprites.asm):01191                 .db 253,255,63,223
48F0 FDFFFFDF         (      sprites.asm):01192                 .db 253,255,255,223
48F4 FDFFFFDF         (      sprites.asm):01193                 .db 253,255,255,223
48F8 FDFFFFDF         (      sprites.asm):01194                 .db 253,255,255,223
48FC FDFFFFDF         (      sprites.asm):01195                 .db 253,255,255,223
4900 FDFFFFDF         (      sprites.asm):01196                 .db 253,255,255,223
4904 FDFFFFDF         (      sprites.asm):01197                 .db 253,255,255,223
4908 FDFFFFDF         (      sprites.asm):01198                 .db 253,255,255,223
490C F7FFFFF7         (      sprites.asm):01199                 .db 247,255,255,247
4910 F7FFFFF7         (      sprites.asm):01200                 .db 247,255,255,247
4914 FFFFFFFF         (      sprites.asm):01201                 .db 255,255,255,255
4918 FFFFFFFF         (      sprites.asm):01202                 .db 255,255,255,255
491C D5D5D5F7         (      sprites.asm):01203                 .db 213,213,213,247
4920 DDF7DFF7         (      sprites.asm):01204                 .db 221,247,223,247
4924 D7F7DD75         (      sprites.asm):01205                 .db 215,247,221,117
4928 DDF7DF77         (      sprites.asm):01206                 .db 221,247,223,119
492C DDD5D5F7         (      sprites.asm):01207                 .db 221,213,213,247
                      (      sprites.asm):01208         
4930                  (      sprites.asm):01209         title_p
4930 FFFFFFFF         (      sprites.asm):01210                 .db 255,255,255,255
4934 FFFFFFFF         (      sprites.asm):01211                 .db 255,255,255,255
4938 FFF55FFF         (      sprites.asm):01212                 .db 255,245,95,255
493C FFF7F7FF         (      sprites.asm):01213                 .db 255,247,247,255
4940 FFF7FDFF         (      sprites.asm):01214                 .db 255,247,253,255
4944 FFF7FDFF         (      sprites.asm):01215                 .db 255,247,253,255
4948 FFF7FDFF         (      sprites.asm):01216                 .db 255,247,253,255
494C FFF7FDFF         (      sprites.asm):01217                 .db 255,247,253,255
4950 FFF7FDFF         (      sprites.asm):01218                 .db 255,247,253,255
4954 FFF7F7FF         (      sprites.asm):01219                 .db 255,247,247,255
4958 FFF55FFF         (      sprites.asm):01220                 .db 255,245,95,255
495C FFF7FFFF         (      sprites.asm):01221                 .db 255,247,255,255
4960 FFF7FFFF         (      sprites.asm):01222                 .db 255,247,255,255
4964 FFF7FFFF         (      sprites.asm):01223                 .db 255,247,255,255
4968 FFF7FFFF         (      sprites.asm):01224                 .db 255,247,255,255
496C FFF7FFFF         (      sprites.asm):01225                 .db 255,247,255,255
4970 FFD5FFFF         (      sprites.asm):01226                 .db 255,213,255,255
4974 FF557FFF         (      sprites.asm):01227                 .db 255,85,127,255
4978 FFFFFFFF         (      sprites.asm):01228                 .db 255,255,255,255
497C 757FF5FD         (      sprites.asm):01229                 .db 117,127,245,253
4980 7DFFDF77         (      sprites.asm):01230                 .db 125,255,223,119
4984 7DFFFDF7         (      sprites.asm):01231                 .db 125,255,253,247
4988 7DFFF7F7         (      sprites.asm):01232                 .db 125,255,247,247
498C 7DFFD57D         (      sprites.asm):01233                 .db 125,255,213,125
                      (      sprites.asm):01234         
4990                  (      sprites.asm):01235         title_u2
4990 FFFFFFFF         (      sprites.asm):01236                 .db 255,255,255,255
4994 FFFFFFFF         (      sprites.asm):01237                 .db 255,255,255,255
4998 FD7FFD7F         (      sprites.asm):01238                 .db 253,127,253,127
499C FD7FFD7F         (      sprites.asm):01239                 .db 253,127,253,127
49A0 FF7FFDFF         (      sprites.asm):01240                 .db 255,127,253,255
49A4 FF7FFDFF         (      sprites.asm):01241                 .db 255,127,253,255
49A8 FF7FFDFF         (      sprites.asm):01242                 .db 255,127,253,255
49AC FF7FFDFF         (      sprites.asm):01243                 .db 255,127,253,255
49B0 FF7FFDFF         (      sprites.asm):01244                 .db 255,127,253,255
49B4 FF7FFDFF         (      sprites.asm):01245                 .db 255,127,253,255
49B8 FF7FFDFF         (      sprites.asm):01246                 .db 255,127,253,255
49BC FF7FFDFF         (      sprites.asm):01247                 .db 255,127,253,255
49C0 FF7FFDFF         (      sprites.asm):01248                 .db 255,127,253,255
49C4 FF7FFDFF         (      sprites.asm):01249                 .db 255,127,253,255
49C8 FF7FFDFF         (      sprites.asm):01250                 .db 255,127,253,255
49CC FF5FF5FF         (      sprites.asm):01251                 .db 255,95,245,255
49D0 FFD7D7FF         (      sprites.asm):01252                 .db 255,215,215,255
49D4 FFF55FFF         (      sprites.asm):01253                 .db 255,245,95,255
49D8 FFF55D5F         (      sprites.asm):01254                 .db 255,245,93,95
49DC 7D7FFDDF         (      sprites.asm):01255                 .db 125,127,253,223
49E0 DF7FFD5F         (      sprites.asm):01256                 .db 223,127,253,95
49E4 DF7FFDDF         (      sprites.asm):01257                 .db 223,127,253,223
49E8 DF7FFDDF         (      sprites.asm):01258                 .db 223,127,253,223
49EC 7D5FFD5F         (      sprites.asm):01259                 .db 125,95,253,95
                      (      sprites.asm):01260                 
49F0                  (      sprites.asm):01261         title_s
49F0 FFFFFFFF         (      sprites.asm):01262                 .db 255,255,255,255
49F4 FFFFFFFF         (      sprites.asm):01263                 .db 255,255,255,255
49F8 FFF557FF         (      sprites.asm):01264                 .db 255,245,87,255
49FC FFDFFDFF         (      sprites.asm):01265                 .db 255,223,253,255
4A00 FF7FFF7F         (      sprites.asm):01266                 .db 255,127,255,127
4A04 FF7FFF7F         (      sprites.asm):01267                 .db 255,127,255,127
4A08 FF7FFFFF         (      sprites.asm):01268                 .db 255,127,255,255
4A0C FF7FFFFF         (      sprites.asm):01269                 .db 255,127,255,255
4A10 FF7FFFFF         (      sprites.asm):01270                 .db 255,127,255,255
4A14 FFD7FFFF         (      sprites.asm):01271                 .db 255,215,255,255
4A18 FFFDFFFF         (      sprites.asm):01272                 .db 255,253,255,255
4A1C FFFF7FFF         (      sprites.asm):01273                 .db 255,255,127,255
4A20 FFFFD7FF         (      sprites.asm):01274                 .db 255,255,215,255
4A24 FFFFFDFF         (      sprites.asm):01275                 .db 255,255,253,255
4A28 FFFFFF7F         (      sprites.asm):01276                 .db 255,255,255,127
4A2C FFFFFF7F         (      sprites.asm):01277                 .db 255,255,255,127
4A30 FFFFFF7F         (      sprites.asm):01278                 .db 255,255,255,127
4A34 FF7FFF7F         (      sprites.asm):01279                 .db 255,127,255,127
4A38 FF7FFF7F         (      sprites.asm):01280                 .db 255,127,255,127
4A3C FFDFFDFF         (      sprites.asm):01281                 .db 255,223,253,255
4A40 FFF557FF         (      sprites.asm):01282                 .db 255,245,87,255
4A44 FFFFFFFF         (      sprites.asm):01283                 .db 255,255,255,255
4A48 FFFFFFFF         (      sprites.asm):01284                 .db 255,255,255,255
4A4C FFFFFFFF         (      sprites.asm):01285                 .db 255,255,255,255
                      (      sprites.asm):01286         
4A50                  (      sprites.asm):01287         tile_wumpus
4A50 FFFFFFFF         (      sprites.asm):01288                 .db 255,255,255,255
4A54 FF5555FF         (      sprites.asm):01289                 .db 255,85,85,255
4A58 FF55557F         (      sprites.asm):01290                 .db 255,85,85,127
4A5C FD55557F         (      sprites.asm):01291                 .db 253,85,85,127
4A60 FD55555F         (      sprites.asm):01292                 .db 253,85,85,95
4A64 F555555F         (      sprites.asm):01293                 .db 245,85,85,95
4A68 D5755D77         (      sprites.asm):01294                 .db 213,117,93,119
4A6C DDFD7F77         (      sprites.asm):01295                 .db 221,253,127,119
4A70 DDDD777D         (      sprites.asm):01296                 .db 221,221,119,125
4A74 7D55557D         (      sprites.asm):01297                 .db 125,85,85,125
4A78 7D55557D         (      sprites.asm):01298                 .db 125,85,85,125
4A7C 7D53317D         (      sprites.asm):01299                 .db 125,83,49,125
4A80 7D73337D         (      sprites.asm):01300                 .db 125,115,51,125
4A84 7D40007D         (      sprites.asm):01301                 .db 125,64,0,125
4A88 7D40007D         (      sprites.asm):01302                 .db 125,64,0,125
4A8C 7D73337D         (      sprites.asm):01303                 .db 125,115,51,125
4A90 7D53317D         (      sprites.asm):01304                 .db 125,83,49,125
4A94 7F5555FD         (      sprites.asm):01305                 .db 127,85,85,253
4A98 DFD557F7         (      sprites.asm):01306                 .db 223,213,87,247
4A9C F7D557DF         (      sprites.asm):01307                 .db 247,213,87,223
4AA0 FDFFFF7F         (      sprites.asm):01308                 .db 253,255,255,127
4AA4 FF7FFDFF         (      sprites.asm):01309                 .db 255,127,253,255
4AA8 FD5FF57F         (      sprites.asm):01310                 .db 253,95,245,127
4AAC F777DDDF         (      sprites.asm):01311                 .db 247,119,221,223
                      (      sprites.asm):01312         
4AB0                  (      sprites.asm):01313         press_a_key     
4AB0 FFFFFFFF         (      sprites.asm):01314                 .db 255,255,255,255
4AB4 FFFFFFFF         (      sprites.asm):01315                 .db 255,255,255,255
4AB8 03030C30         (      sprites.asm):01316                 .db 3,3,12,48
4ABC 33333CF3         (      sprites.asm):01317                 .db 51,51,60,243
4AC0 33333CF3         (      sprites.asm):01318                 .db 51,51,60,243
4AC4 03030C30         (      sprites.asm):01319                 .db 3,3,12,48
4AC8 3F0F3F3C         (      sprites.asm):01320                 .db 63,15,63,60
4ACC 3F333F3C         (      sprites.asm):01321                 .db 63,51,63,60
4AD0 3F333F3C         (      sprites.asm):01322                 .db 63,51,63,60
4AD4 3F330C30         (      sprites.asm):01323                 .db 63,51,12,48
4AD8 FFFFFFFF         (      sprites.asm):01324                 .db 255,255,255,255
4ADC FFFFFFFF         (      sprites.asm):01325                 .db 255,255,255,255
4AE0 FFFFFFFF         (      sprites.asm):01326                 .db 255,255,255,255
4AE4 CFCF30CC         (      sprites.asm):01327                 .db 207,207,48,204
4AE8 33CF33CC         (      sprites.asm):01328                 .db 51,207,51,204
4AEC 33CCF3CC         (      sprites.asm):01329                 .db 51,204,243,204
4AF0 33C3F0CC         (      sprites.asm):01330                 .db 51,195,240,204
4AF4 03C3F3F3         (      sprites.asm):01331                 .db 3,195,243,243
4AF8 33CCF3F3         (      sprites.asm):01332                 .db 51,204,243,243
4AFC 33CF30F3         (      sprites.asm):01333                 .db 51,207,48,243
4B00 FFFFFFFF         (      sprites.asm):01334                 .db 255,255,255,255
4B04 FFFFFFFF         (      sprites.asm):01335                 .db 255,255,255,255
4B08 FFFFFFFF         (      sprites.asm):01336                 .db 255,255,255,255
                      (      sprites.asm):01337         
4B0C                  (      sprites.asm):01338         skill_level_easy
4B0C FFFFFFFF         (      sprites.asm):01339                 .db 255,255,255,255
4B10 FFFFFFFF         (      sprites.asm):01340                 .db 255,255,255,255
4B14 FFFFFFFF         (      sprites.asm):01341                 .db 255,255,255,255
4B18 FFFFFFFF         (      sprites.asm):01342                 .db 255,255,255,255
4B1C FFFFFFFF         (      sprites.asm):01343                 .db 255,255,255,255
4B20 FFFFFFFF         (      sprites.asm):01344                 .db 255,255,255,255
4B24 03030333         (      sprites.asm):01345                 .db 3,3,3,51
4B28 3F333F33         (      sprites.asm):01346                 .db 63,51,63,51
4B2C 3F333F33         (      sprites.asm):01347                 .db 63,51,63,51
4B30 3F333F33         (      sprites.asm):01348                 .db 63,51,63,51
4B34 030303CF         (      sprites.asm):01349                 .db 3,3,3,207
4B38 3F33F3CF         (      sprites.asm):01350                 .db 63,51,243,207
4B3C 3F33F3CF         (      sprites.asm):01351                 .db 63,51,243,207
4B40 3F33F3CF         (      sprites.asm):01352                 .db 63,51,243,207
4B44 033303CF         (      sprites.asm):01353                 .db 3,51,3,207
4B48 FFFFFFFF         (      sprites.asm):01354                 .db 255,255,255,255
4B4C FFFFFFFF         (      sprites.asm):01355                 .db 255,255,255,255
4B50 FFFFFFFF         (      sprites.asm):01356                 .db 255,255,255,255
4B54 FFFFFFFF         (      sprites.asm):01357                 .db 255,255,255,255
4B58 FFFFFFFF         (      sprites.asm):01358                 .db 255,255,255,255
4B5C FFFFFFFF         (      sprites.asm):01359                 .db 255,255,255,255
4B60 FFFFFFFF         (      sprites.asm):01360                 .db 255,255,255,255
4B64 FFFFFFFF         (      sprites.asm):01361                 .db 255,255,255,255
4B68 FFFFFFFF         (      sprites.asm):01362                 .db 255,255,255,255
                      (      sprites.asm):01363         
4B6C                  (      sprites.asm):01364         skill_level_twis
4B6C FFFFFFFF         (      sprites.asm):01365                 .db 255,255,255,255
4B70 FFFFFFFF         (      sprites.asm):01366                 .db 255,255,255,255
4B74 FFFFFFFF         (      sprites.asm):01367                 .db 255,255,255,255
4B78 FFFFFFFF         (      sprites.asm):01368                 .db 255,255,255,255
4B7C FFFFFFFF         (      sprites.asm):01369                 .db 255,255,255,255
4B80 FFFFFFFF         (      sprites.asm):01370                 .db 255,255,255,255
4B84 03333303         (      sprites.asm):01371                 .db 3,51,51,3
4B88 CF33333F         (      sprites.asm):01372                 .db 207,51,51,63
4B8C CF33333F         (      sprites.asm):01373                 .db 207,51,51,63
4B90 CF33333F         (      sprites.asm):01374                 .db 207,51,51,63
4B94 CF333303         (      sprites.asm):01375                 .db 207,51,51,3
4B98 CF3333F3         (      sprites.asm):01376                 .db 207,51,51,243
4B9C CF3333F3         (      sprites.asm):01377                 .db 207,51,51,243
4BA0 CF3333F3         (      sprites.asm):01378                 .db 207,51,51,243
4BA4 CFCCF303         (      sprites.asm):01379                 .db 207,204,243,3
4BA8 FFFFFFFF         (      sprites.asm):01380                 .db 255,255,255,255
4BAC FFFFFFFF         (      sprites.asm):01381                 .db 255,255,255,255
4BB0 FFFFFFFF         (      sprites.asm):01382                 .db 255,255,255,255
4BB4 FFFFFFFF         (      sprites.asm):01383                 .db 255,255,255,255
4BB8 FFFFFFFF         (      sprites.asm):01384                 .db 255,255,255,255
4BBC FFFFFFFF         (      sprites.asm):01385                 .db 255,255,255,255
4BC0 FFFFFFFF         (      sprites.asm):01386                 .db 255,255,255,255
4BC4 FFFFFFFF         (      sprites.asm):01387                 .db 255,255,255,255
4BC8 FFFFFFFF         (      sprites.asm):01388                 .db 255,255,255,255
                      (      sprites.asm):01389         
4BCC                  (      sprites.asm):01390         skill_level_ty
4BCC FFFFFFFF         (      sprites.asm):01391                 .db 255,255,255,255
4BD0 FFFFFFFF         (      sprites.asm):01392                 .db 255,255,255,255
4BD4 FFFFFFFF         (      sprites.asm):01393                 .db 255,255,255,255
4BD8 FFFFFFFF         (      sprites.asm):01394                 .db 255,255,255,255
4BDC FFFFFFFF         (      sprites.asm):01395                 .db 255,255,255,255
4BE0 FFFFFFFF         (      sprites.asm):01396                 .db 255,255,255,255
4BE4 0333FFFF         (      sprites.asm):01397                 .db 3,51,255,255
4BE8 CF33FFFF         (      sprites.asm):01398                 .db 207,51,255,255
4BEC CF33FFFF         (      sprites.asm):01399                 .db 207,51,255,255
4BF0 CF33FFFF         (      sprites.asm):01400                 .db 207,51,255,255
4BF4 CFCFFFFF         (      sprites.asm):01401                 .db 207,207,255,255
4BF8 CFCFFFFF         (      sprites.asm):01402                 .db 207,207,255,255
4BFC CFCFFFFF         (      sprites.asm):01403                 .db 207,207,255,255
4C00 CFCFFFFF         (      sprites.asm):01404                 .db 207,207,255,255
4C04 CFCFFFFF         (      sprites.asm):01405                 .db 207,207,255,255
4C08 FFFFFFFF         (      sprites.asm):01406                 .db 255,255,255,255
4C0C FFFFFFFF         (      sprites.asm):01407                 .db 255,255,255,255
4C10 FFFFFFFF         (      sprites.asm):01408                 .db 255,255,255,255
4C14 FFFFFFFF         (      sprites.asm):01409                 .db 255,255,255,255
4C18 FFFFFFFF         (      sprites.asm):01410                 .db 255,255,255,255
4C1C FFFFFFFF         (      sprites.asm):01411                 .db 255,255,255,255
4C20 FFFFFFFF         (      sprites.asm):01412                 .db 255,255,255,255
4C24 FFFFFFFF         (      sprites.asm):01413                 .db 255,255,255,255
4C28 FFFFFFFF         (      sprites.asm):01414                 .db 255,255,255,255
                      (      sprites.asm):01415         
4C2C                  (      sprites.asm):01416         skill_level_very
4C2C FFFFFFFF         (      sprites.asm):01417                 .db 255,255,255,255
4C30 FFFFFFFF         (      sprites.asm):01418                 .db 255,255,255,255
4C34 FFFFFFFF         (      sprites.asm):01419                 .db 255,255,255,255
4C38 FFFFFFFF         (      sprites.asm):01420                 .db 255,255,255,255
4C3C FFFFFFFF         (      sprites.asm):01421                 .db 255,255,255,255
4C40 FFFFFFFF         (      sprites.asm):01422                 .db 255,255,255,255
4C44 330C0CCF         (      sprites.asm):01423                 .db 51,12,12,207
4C48 333CCCCF         (      sprites.asm):01424                 .db 51,60,204,207
4C4C 333CCCCF         (      sprites.asm):01425                 .db 51,60,204,207
4C50 333C0CCF         (      sprites.asm):01426                 .db 51,60,12,207
4C54 330C3F3F         (      sprites.asm):01427                 .db 51,12,63,63
4C58 333CCF3F         (      sprites.asm):01428                 .db 51,60,207,63
4C5C 033CCF3F         (      sprites.asm):01429                 .db 3,60,207,63
4C60 CF3CCF3F         (      sprites.asm):01430                 .db 207,60,207,63
4C64 CF0CCF3F         (      sprites.asm):01431                 .db 207,12,207,63
4C68 FFFFFFFF         (      sprites.asm):01432                 .db 255,255,255,255
4C6C FFFFFFFF         (      sprites.asm):01433                 .db 255,255,255,255
4C70 FFFFFFFF         (      sprites.asm):01434                 .db 255,255,255,255
4C74 FFFFFFFF         (      sprites.asm):01435                 .db 255,255,255,255
4C78 FFFFFFFF         (      sprites.asm):01436                 .db 255,255,255,255
4C7C FFFFFFFF         (      sprites.asm):01437                 .db 255,255,255,255
4C80 FFFFFFFF         (      sprites.asm):01438                 .db 255,255,255,255
4C84 FFFFFFFF         (      sprites.asm):01439                 .db 255,255,255,255
4C88 FFFFFFFF         (      sprites.asm):01440                 .db 255,255,255,255
                      (      sprites.asm):01441         
                      (      sprites.asm):01442                 
4C8C                  (      sprites.asm):01443         player_icon
4C8C FFFFFFFF         (      sprites.asm):01444                 .db 255,255,255,255
4C90 FFF57FFF         (      sprites.asm):01445                 .db 255,245,127,255
4C94 FFF57CFF         (      sprites.asm):01446                 .db 255,245,124,255
4C98 FFF57F3F         (      sprites.asm):01447                 .db 255,245,127,63
4C9C FFF57F3F         (      sprites.asm):01448                 .db 255,245,127,63
4CA0 FFF57F3F         (      sprites.asm):01449                 .db 255,245,127,63
4CA4 FFD5FF33         (      sprites.asm):01450                 .db 255,213,255,51
4CA8 FF540000         (      sprites.asm):01451                 .db 255,84,0,0
4CAC FF555513         (      sprites.asm):01452                 .db 255,85,85,19
4CB0 FF557F1F         (      sprites.asm):01453                 .db 255,85,127,31
4CB4 FFD57F3F         (      sprites.asm):01454                 .db 255,213,127,63
4CB8 FFD57F3F         (      sprites.asm):01455                 .db 255,213,127,63
4CBC FFD57F3F         (      sprites.asm):01456                 .db 255,213,127,63
4CC0 FFD57F3F         (      sprites.asm):01457                 .db 255,213,127,63
4CC4 FFD57CFF         (      sprites.asm):01458                 .db 255,213,124,255
4CC8 FFD773FF         (      sprites.asm):01459                 .db 255,215,115,255
4CCC FFD77FFF         (      sprites.asm):01460                 .db 255,215,127,255
4CD0 FFDF7FFF         (      sprites.asm):01461                 .db 255,223,127,255
4CD4 FFDF7FFF         (      sprites.asm):01462                 .db 255,223,127,255
4CD8 FFDF7FFF         (      sprites.asm):01463                 .db 255,223,127,255
4CDC FFDF7FFF         (      sprites.asm):01464                 .db 255,223,127,255
4CE0 FFDF7FFF         (      sprites.asm):01465                 .db 255,223,127,255
4CE4 FFDF7FFF         (      sprites.asm):01466                 .db 255,223,127,255
4CE8 FFDF7FFF         (      sprites.asm):01467                 .db 255,223,127,255
                      (      sprites.asm):01468                 
                      (      sprites.asm):01469         ;8x14
4CEC                  (      sprites.asm):01470         digits
4CEC                  (      sprites.asm):01471         number_0
4CEC FFFF             (      sprites.asm):01472                 .db 255,255
4CEE FC3F             (      sprites.asm):01473                 .db 252,63
4CF0 F3CF             (      sprites.asm):01474                 .db 243,207
4CF2 CFF3             (      sprites.asm):01475                 .db 207,243
4CF4 CFF3             (      sprites.asm):01476                 .db 207,243
4CF6 CFF3             (      sprites.asm):01477                 .db 207,243
4CF8 CFF3             (      sprites.asm):01478                 .db 207,243
4CFA CFF3             (      sprites.asm):01479                 .db 207,243
4CFC CFF3             (      sprites.asm):01480                 .db 207,243
4CFE CFF3             (      sprites.asm):01481                 .db 207,243
4D00 CFF3             (      sprites.asm):01482                 .db 207,243
4D02 F3CF             (      sprites.asm):01483                 .db 243,207
4D04 FC3F             (      sprites.asm):01484                 .db 252,63
4D06 FFFF             (      sprites.asm):01485                 .db 255,255
                      (      sprites.asm):01486                 
4D08                  (      sprites.asm):01487         number_1        
4D08 FFFF             (      sprites.asm):01488                 .db 255,255
4D0A FC3F             (      sprites.asm):01489                 .db 252,63
4D0C F33F             (      sprites.asm):01490                 .db 243,63
4D0E FF3F             (      sprites.asm):01491                 .db 255,63
4D10 FF3F             (      sprites.asm):01492                 .db 255,63
4D12 FF3F             (      sprites.asm):01493                 .db 255,63
4D14 FF3F             (      sprites.asm):01494                 .db 255,63
4D16 FF3F             (      sprites.asm):01495                 .db 255,63
4D18 FF3F             (      sprites.asm):01496                 .db 255,63
4D1A FF3F             (      sprites.asm):01497                 .db 255,63
4D1C FF3F             (      sprites.asm):01498                 .db 255,63
4D1E FF3F             (      sprites.asm):01499                 .db 255,63
4D20 F003             (      sprites.asm):01500                 .db 240,3
4D22 FFFF             (      sprites.asm):01501                 .db 255,255
                      (      sprites.asm):01502                 
4D24                  (      sprites.asm):01503         number_2
4D24 FFFF             (      sprites.asm):01504                 .db 255,255
4D26 F00F             (      sprites.asm):01505                 .db 240,15
4D28 CFF3             (      sprites.asm):01506                 .db 207,243
4D2A CFF3             (      sprites.asm):01507                 .db 207,243
4D2C FFF3             (      sprites.asm):01508                 .db 255,243
4D2E FFCF             (      sprites.asm):01509                 .db 255,207
4D30 FF3F             (      sprites.asm):01510                 .db 255,63
4D32 FCFF             (      sprites.asm):01511                 .db 252,255
4D34 F3FF             (      sprites.asm):01512                 .db 243,255
4D36 CFFF             (      sprites.asm):01513                 .db 207,255
4D38 CFFF             (      sprites.asm):01514                 .db 207,255
4D3A CFFF             (      sprites.asm):01515                 .db 207,255
4D3C C003             (      sprites.asm):01516                 .db 192,3
4D3E FFFF             (      sprites.asm):01517                 .db 255,255
                      (      sprites.asm):01518         
                      (      sprites.asm):01519         
4D40                  (      sprites.asm):01520         number_3
4D40 FFFF             (      sprites.asm):01521                 .db 255,255
4D42 F00F             (      sprites.asm):01522                 .db 240,15
4D44 CFF3             (      sprites.asm):01523                 .db 207,243
4D46 CFF3             (      sprites.asm):01524                 .db 207,243
4D48 FFF3             (      sprites.asm):01525                 .db 255,243
4D4A FFCF             (      sprites.asm):01526                 .db 255,207
4D4C FF3F             (      sprites.asm):01527                 .db 255,63
4D4E FFCF             (      sprites.asm):01528                 .db 255,207
4D50 FFF3             (      sprites.asm):01529                 .db 255,243
4D52 FFF3             (      sprites.asm):01530                 .db 255,243
4D54 CFF3             (      sprites.asm):01531                 .db 207,243
4D56 CFF3             (      sprites.asm):01532                 .db 207,243
4D58 F00F             (      sprites.asm):01533                 .db 240,15
4D5A FFFF             (      sprites.asm):01534                 .db 255,255
                      (      sprites.asm):01535         
4D5C                  (      sprites.asm):01536         number_4
4D5C FFFF             (      sprites.asm):01537                 .db 255,255
4D5E CFF3             (      sprites.asm):01538                 .db 207,243
4D60 CFF3             (      sprites.asm):01539                 .db 207,243
4D62 CFF3             (      sprites.asm):01540                 .db 207,243
4D64 CFF3             (      sprites.asm):01541                 .db 207,243
4D66 CFF3             (      sprites.asm):01542                 .db 207,243
4D68 CFF3             (      sprites.asm):01543                 .db 207,243
4D6A C000             (      sprites.asm):01544                 .db 192,0
4D6C FFF3             (      sprites.asm):01545                 .db 255,243
4D6E FFF3             (      sprites.asm):01546                 .db 255,243
4D70 FFF3             (      sprites.asm):01547                 .db 255,243
4D72 FFF3             (      sprites.asm):01548                 .db 255,243
4D74 FFF3             (      sprites.asm):01549                 .db 255,243
4D76 FFFF             (      sprites.asm):01550                 .db 255,255
                      (      sprites.asm):01551                 
4D78                  (      sprites.asm):01552         number_5
4D78 FFFF             (      sprites.asm):01553                 .db 255,255
4D7A C003             (      sprites.asm):01554                 .db 192,3
4D7C CFFF             (      sprites.asm):01555                 .db 207,255
4D7E CFFF             (      sprites.asm):01556                 .db 207,255
4D80 CFFF             (      sprites.asm):01557                 .db 207,255
4D82 CFFF             (      sprites.asm):01558                 .db 207,255
4D84 C00F             (      sprites.asm):01559                 .db 192,15
4D86 FFF3             (      sprites.asm):01560                 .db 255,243
4D88 FFF3             (      sprites.asm):01561                 .db 255,243
4D8A FFF3             (      sprites.asm):01562                 .db 255,243
4D8C FFF3             (      sprites.asm):01563                 .db 255,243
4D8E FFF3             (      sprites.asm):01564                 .db 255,243
4D90 C00F             (      sprites.asm):01565                 .db 192,15
4D92 FFFF             (      sprites.asm):01566                 .db 255,255
                      (      sprites.asm):01567         
4D94                  (      sprites.asm):01568         number_6
4D94 FFFF             (      sprites.asm):01569                 .db 255,255
4D96 C003             (      sprites.asm):01570                 .db 192,3
4D98 CFFF             (      sprites.asm):01571                 .db 207,255
4D9A CFFF             (      sprites.asm):01572                 .db 207,255
4D9C CFFF             (      sprites.asm):01573                 .db 207,255
4D9E CFFF             (      sprites.asm):01574                 .db 207,255
4DA0 C003             (      sprites.asm):01575                 .db 192,3
4DA2 CFF3             (      sprites.asm):01576                 .db 207,243
4DA4 CFF3             (      sprites.asm):01577                 .db 207,243
4DA6 CFF3             (      sprites.asm):01578                 .db 207,243
4DA8 CFF3             (      sprites.asm):01579                 .db 207,243
4DAA CFF3             (      sprites.asm):01580                 .db 207,243
4DAC C003             (      sprites.asm):01581                 .db 192,3
4DAE FFFF             (      sprites.asm):01582                 .db 255,255
                      (      sprites.asm):01583         
4DB0                  (      sprites.asm):01584         number_7
4DB0 FFFF             (      sprites.asm):01585                 .db 255,255
4DB2 C003             (      sprites.asm):01586                 .db 192,3
4DB4 FFF3             (      sprites.asm):01587                 .db 255,243
4DB6 FFCF             (      sprites.asm):01588                 .db 255,207
4DB8 FF3F             (      sprites.asm):01589                 .db 255,63
4DBA FCFF             (      sprites.asm):01590                 .db 252,255
4DBC FCFF             (      sprites.asm):01591                 .db 252,255
4DBE F3FF             (      sprites.asm):01592                 .db 243,255
4DC0 F3FF             (      sprites.asm):01593                 .db 243,255
4DC2 F3FF             (      sprites.asm):01594                 .db 243,255
4DC4 F3FF             (      sprites.asm):01595                 .db 243,255
4DC6 F3FF             (      sprites.asm):01596                 .db 243,255
4DC8 F3FF             (      sprites.asm):01597                 .db 243,255
4DCA FFFF             (      sprites.asm):01598                 .db 255,255
                      (      sprites.asm):01599                 
4DCC                  (      sprites.asm):01600         number_8
4DCC FFFF             (      sprites.asm):01601                 .db 255,255
4DCE F00F             (      sprites.asm):01602                 .db 240,15
4DD0 CFF3             (      sprites.asm):01603                 .db 207,243
4DD2 CFF3             (      sprites.asm):01604                 .db 207,243
4DD4 CFF3             (      sprites.asm):01605                 .db 207,243
4DD6 CFF3             (      sprites.asm):01606                 .db 207,243
4DD8 F00F             (      sprites.asm):01607                 .db 240,15
4DDA CFF3             (      sprites.asm):01608                 .db 207,243
4DDC CFF3             (      sprites.asm):01609                 .db 207,243
4DDE CFF3             (      sprites.asm):01610                 .db 207,243
4DE0 CFF3             (      sprites.asm):01611                 .db 207,243
4DE2 CFF3             (      sprites.asm):01612                 .db 207,243
4DE4 F00F             (      sprites.asm):01613                 .db 240,15
4DE6 FFFF             (      sprites.asm):01614                 .db 255,255
                      (      sprites.asm):01615                 
4DE8                  (      sprites.asm):01616         number_9
4DE8 FFFF             (      sprites.asm):01617                 .db 255,255
4DEA F00F             (      sprites.asm):01618                 .db 240,15
4DEC CFF3             (      sprites.asm):01619                 .db 207,243
4DEE CFF3             (      sprites.asm):01620                 .db 207,243
4DF0 CFF3             (      sprites.asm):01621                 .db 207,243
4DF2 CFF3             (      sprites.asm):01622                 .db 207,243
4DF4 F003             (      sprites.asm):01623                 .db 240,3
4DF6 FFF3             (      sprites.asm):01624                 .db 255,243
4DF8 FFF3             (      sprites.asm):01625                 .db 255,243
4DFA FFF3             (      sprites.asm):01626                 .db 255,243
4DFC FFF3             (      sprites.asm):01627                 .db 255,243
4DFE FFF3             (      sprites.asm):01628                 .db 255,243
4E00 FFF3             (      sprites.asm):01629                 .db 255,243
4E02 FFFF             (      sprites.asm):01630                 .db 255,255
                      (      sprites.asm):01631         
4E04                  (      sprites.asm):01632         color_calibration
4E04 FFFFFFFF         (      sprites.asm):01633                 .db 255,255,255,255
4E08 FFFFFFFF         (      sprites.asm):01634                 .db 255,255,255,255
4E0C FFFFFFFF         (      sprites.asm):01635                 .db 255,255,255,255
4E10 030C3FFA         (      sprites.asm):01636                 .db 3,12,63,250
4E14 333CCFFA         (      sprites.asm):01637                 .db 51,60,207,250
4E18 030CCFFA         (      sprites.asm):01638                 .db 3,12,207,250
4E1C 0F3CCFFA         (      sprites.asm):01639                 .db 15,60,207,250
4E20 333CCFFA         (      sprites.asm):01640                 .db 51,60,207,250
4E24 330C3FFA         (      sprites.asm):01641                 .db 51,12,63,250
4E28 FFFFFFFF         (      sprites.asm):01642                 .db 255,255,255,255
4E2C FFFFFFFF         (      sprites.asm):01643                 .db 255,255,255,255
4E30 033CCC35         (      sprites.asm):01644                 .db 3,60,204,53
4E34 333CCCF5         (      sprites.asm):01645                 .db 51,60,204,245
4E38 0F3CCC35         (      sprites.asm):01646                 .db 15,60,204,53
4E3C 033CCCF5         (      sprites.asm):01647                 .db 3,60,204,245
4E40 333CCCF5         (      sprites.asm):01648                 .db 51,60,204,245
4E44 030C0C35         (      sprites.asm):01649                 .db 3,12,12,53
4E48 FFFFFFFF         (      sprites.asm):01650                 .db 255,255,255,255
4E4C FFFFFFFF         (      sprites.asm):01651                 .db 255,255,255,255
4E50 FFFFFFFF         (      sprites.asm):01652                 .db 255,255,255,255
4E54 FFFFFFFF         (      sprites.asm):01653                 .db 255,255,255,255
4E58 FFFFFFFF         (      sprites.asm):01654                 .db 255,255,255,255
4E5C FFFFFFFF         (      sprites.asm):01655                 .db 255,255,255,255
4E60 FFFFFFFF         (      sprites.asm):01656                 .db 255,255,255,255
                      (        amode.asm):01798                 include tile_maps.asm
                      (    tile_maps.asm):00001         ;tile_maps
                      (    tile_maps.asm):00002                 
4E64                  (    tile_maps.asm):00003         pit_tile_map
4E64 3F703F703F703FD0 (    tile_maps.asm):00004                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,white_tile,white_tile,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3FD03F703F703F70
4E74 3F703F703F703FD0 (    tile_maps.asm):00005                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,white_tile,white_tile,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3FD03F703F703F70
4E84 3F703F703F703FD0 (    tile_maps.asm):00006                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,white_tile,white_tile,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3FD03F703F703F70
4E94 3F703F703F703FD0 (    tile_maps.asm):00007                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,white_tile,white_tile,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3FD03F703F703F70
4EA4 3F703F703F703FD0 (    tile_maps.asm):00008                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,white_tile,white_tile,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3FD03F703F703F70
4EB4 3F703F703F703FD0 (    tile_maps.asm):00009                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,white_tile,white_tile,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3FD03F703F703F70
4EC4 3F703F703F703FD0 (    tile_maps.asm):00010                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,white_tile,white_tile,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3FD03F703F703F70
4ED4 3F703F703F704030 (    tile_maps.asm):00011                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_bottom,sprite_pit_bottom,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     40303F703F703F70
                      (    tile_maps.asm):00012                 
4EE4                  (    tile_maps.asm):00013         tunnel_tile_map
4EE4 3F703F703F703F70 (    tile_maps.asm):00014                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
4EF4 3F703F703F703F70 (    tile_maps.asm):00015                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
4F04 3F703F703F703F70 (    tile_maps.asm):00016                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
4F14 3FD03FD03FD03FD0 (    tile_maps.asm):00017                 .dw white_tile,white_tile,white_tile,white_tile,white_tile,white_tile,white_tile,white_tile     
     3FD03FD03FD03FD0
4F24 3FD03FD03FD03FD0 (    tile_maps.asm):00018                 .dw white_tile,white_tile,white_tile,white_tile,white_tile,white_tile,white_tile,white_tile     
     3FD03FD03FD03FD0
4F34 3F703F703F703F70 (    tile_maps.asm):00019                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
4F44 3F703F703F703F70 (    tile_maps.asm):00020                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
4F54 3F703F703F703F70 (    tile_maps.asm):00021                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
                      (    tile_maps.asm):00022                 
4F64                  (    tile_maps.asm):00023         win_tile_map
4F64 3F703F703F703F70 (    tile_maps.asm):00024                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
4F74 3F703F703F703F70 (    tile_maps.asm):00025                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
4F84 3F703F703F703F70 (    tile_maps.asm):00026                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
4F94 3FD03FD044B04510 (    tile_maps.asm):00027                 .dw white_tile,white_tile,sprite_got,sprite_it,sprite_excl,white_tile,white_tile,white_tile     
     45703FD03FD03FD0
4FA4 3FD03FD03FD03FD0 (    tile_maps.asm):00028                 .dw white_tile,white_tile,white_tile,white_tile,white_tile,white_tile,sprite_wumpus_dead_left,sprite_wumpus_right       
     3FD03FD042D04270
4FB4 3F703F703F703F70 (    tile_maps.asm):00029                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
4FC4 3F703F703F703F70 (    tile_maps.asm):00030                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
4FD4 3F703F703F703F70 (    tile_maps.asm):00031                 .dw sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall,sprite_pit_wall
     3F703F703F703F70
                      (    tile_maps.asm):00032         
                      (    tile_maps.asm):00033                 
                      (    tile_maps.asm):00034                 
4FE4                  (    tile_maps.asm):00035         choose_skill_tile_map
4FE4 4090409040904090 (    tile_maps.asm):00036                 .dw sprite_tooth_upper,sprite_tooth_upper,sprite_tooth_upper,sprite_tooth_upper,sprite_tooth_upper,sprite_tooth_upper,sprite_tooth_upper,sprite_tooth_upper
     4090409040904090
4FF4 43F043F043F043F0 (    tile_maps.asm):00037                 .dw sprite_orange,sprite_orange,sprite_orange,sprite_orange,sprite_orange,sprite_orange,sprite_orange,sprite_orange
     43F043F043F043F0
5004 43F043F045D04630 (    tile_maps.asm):00038                 .dw sprite_orange,sprite_orange,sprite_cho,sprite_ose,sprite_a_sk,sprite_ill,sprite_orange,sprite_orange
     469046F043F043F0
5014 43F043F03FD04B0C (    tile_maps.asm):00039                 .dw sprite_orange,sprite_orange,white_tile,skill_level_easy,white_tile,white_tile,sprite_orange,sprite_orange
     3FD03FD043F043F0
5024 43F043F03FD04B6C (    tile_maps.asm):00040                 .dw sprite_orange,sprite_orange,white_tile,skill_level_twis,skill_level_ty,white_tile,sprite_orange,sprite_orange
     4BCC3FD043F043F0
5034 43F043F03FD04C2C (    tile_maps.asm):00041                 .dw sprite_orange,sprite_orange,white_tile,skill_level_very,skill_level_twis,skill_level_ty,sprite_orange,sprite_orange
     4B6C4BCC43F043F0
5044 43F043F043F043F0 (    tile_maps.asm):00042                 .dw sprite_orange,sprite_orange,sprite_orange,sprite_orange,sprite_orange,sprite_orange,sprite_orange,sprite_orange
     43F043F043F043F0
5054 40F040F040F040F0 (    tile_maps.asm):00043                 .dw sprite_tooth_lower,sprite_tooth_lower,sprite_tooth_lower,sprite_tooth_lower,sprite_tooth_lower,sprite_tooth_lower,sprite_tooth_lower,sprite_tooth_lower
     40F040F040F040F0
                      (        amode.asm):01799                 include calibration.asm
                      (  calibration.asm):00001         ;calibration
                      (  calibration.asm):00002         ;include this file directly (inline)
                      (  calibration.asm):00003         ;it is not a subroutine
                      (  calibration.asm):00004                 
5064 9E72             (  calibration.asm):00005                 ldx $72
5066 BF52C3           (  calibration.asm):00006                 stx rv_save
                      (  calibration.asm):00007                 
5069 8E260C           (  calibration.asm):00008                 ldx #reset ; overwrite warm reset vector
506C 9F72             (  calibration.asm):00009                 stx $72
                      (  calibration.asm):00010                 
506E 86FF             (  calibration.asm):00011                 lda #WHITE_FILL
5070 BD26AB           (  calibration.asm):00012                 jsr cls
5073 8604             (  calibration.asm):00013                 lda #4
5075 C604             (  calibration.asm):00014                 ldb #4
5077 BD3295           (  calibration.asm):00015                 jsr set_draw_offset
507A 8E4E04           (  calibration.asm):00016                 ldx #color_calibration
507D BD3203           (  calibration.asm):00017                 jsr draw_tile
                      (  calibration.asm):00018                 
5080                  (  calibration.asm):00019         @lp2
5080 BDA1CB           (  calibration.asm):00020                 jsr KBSCAN
5083 8100             (  calibration.asm):00021                 cmpa #0
5085 27F9             (  calibration.asm):00022                 beq @lp2
                      (  calibration.asm):00023         
                      (  calibration.asm):00024                 ;replace original warm start vector
5087 BE52C3           (  calibration.asm):00025                 ldx rv_save
508A 9F72             (  calibration.asm):00026                 stx $72
                      (  calibration.asm):00027                 
                      (        amode.asm):01800                 include sound.asm
                      (        sound.asm):00001         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        sound.asm):00002         ;error beep
                      (        sound.asm):00003         ; x contains song addr
                      (        sound.asm):00004         ;registers are preserved
                      (        sound.asm):00005         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
508C                  (        sound.asm):00006         play_song
508C 3432             (        sound.asm):00007                 pshs a,x,y
508E A680             (        sound.asm):00008                 lda ,x+ ; get num notes
5090 E680             (        sound.asm):00009                 ldb ,x+ ; curnote
5092 3402             (        sound.asm):00010         @lp     pshs a
5094 A680             (        sound.asm):00011                 lda ,x+ ; freq
5096 10AE81           (        sound.asm):00012                 ldy ,x++ ; time
5099 8100             (        sound.asm):00013                 cmpa #0
509B 2708             (        sound.asm):00014                 beq @ps
509D B751B6           (        sound.asm):00015                 sta delay_value
50A0 BD511B           (        sound.asm):00016                 jsr sound_play
50A3 2003             (        sound.asm):00017                 bra @c
50A5 BD2F8A           (        sound.asm):00018         @ps     jsr waste_time
50A8 5C               (        sound.asm):00019         @c      incb 
50A9 3502             (        sound.asm):00020                 puls a
50AB 4A               (        sound.asm):00021                 deca
50AC 26E4             (        sound.asm):00022                 bne @lp
50AE 3532             (        sound.asm):00023                 puls a,x,y
50B0 6F01             (        sound.asm):00024                 clr 1,x  ; set cur note back to 0
50B2 39               (        sound.asm):00025                 rts
                      (        sound.asm):00026         
                      (        sound.asm):00027         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      (        sound.asm):00028         ; x contains song addr
                      (        sound.asm):00029         ;registers are preserved
                      (        sound.asm):00030         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
50B3                  (        sound.asm):00031         play_note
50B3 3436             (        sound.asm):00032                 pshs d,x,y
50B5 1F12             (        sound.asm):00033                 tfr x,y
50B7 E601             (        sound.asm):00034                 ldb 1,x  ; curnote
50B9 A184             (        sound.asm):00035                 cmpa ,x 
50BB 2605             (        sound.asm):00036                 bne @g
50BD 86FF             (        sound.asm):00037                 lda #$FF
50BF A701             (        sound.asm):00038                 sta 1,x
50C1 5F               (        sound.asm):00039                 clrb
50C2 6C01             (        sound.asm):00040         @g      inc 1,x  ; update cur note
50C4 3002             (        sound.asm):00041             leax 2,x ; skip 2 header bytes
50C6 3A               (        sound.asm):00042                 abx ; 3 * curNote to get offset
50C7 3A               (        sound.asm):00043                 abx 
50C8 3A               (        sound.asm):00044                 abx 
50C9 A684             (        sound.asm):00045                 lda ,x  ;freq
50CB 8100             (        sound.asm):00046                 cmpa #0
50CD 2709             (        sound.asm):00047                 beq @w
50CF B751B6           (        sound.asm):00048                 sta delay_value
50D2 10AE01           (        sound.asm):00049                 ldy 1,x  ;time
50D5 BD511B           (        sound.asm):00050                 jsr sound_play  
50D8 BD2F8A           (        sound.asm):00051         @w      jsr waste_time
50DB 3536             (        sound.asm):00052         @x      puls d,x,y
50DD 39               (        sound.asm):00053                 rts
                      (        sound.asm):00054                         
                      (        sound.asm):00055                 
                      (        sound.asm):00056         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        sound.asm):00057         ;error beep
                      (        sound.asm):00058         ;plays a short error tone
                      (        sound.asm):00059         ;registers are preserved
                      (        sound.asm):00060         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
50DE                  (        sound.asm):00061         error_beep:     
50DE 3422             (        sound.asm):00062                 pshs a,y
50E0 108E0014         (        sound.asm):00063                 ldy     #20             ;length (short)
50E4 860A             (        sound.asm):00064                 lda #10 ;low a
50E6 B751B2           (        sound.asm):00065                 sta freq
50E9 BD514E           (        sound.asm):00066                 jsr sound_play2
50EC 3522             (        sound.asm):00067                 puls y,a
50EE 39               (        sound.asm):00068                 rts
                      (        sound.asm):00069         
                      (        sound.asm):00070         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        sound.asm):00071         ;error beep
                      (        sound.asm):00072         ;plays a short error tone
                      (        sound.asm):00073         ;registers are preserved
                      (        sound.asm):00074         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
50EF                  (        sound.asm):00075         play_footstep:  
50EF 3422             (        sound.asm):00076                 pshs a,y
50F1 108E0002         (        sound.asm):00077                 ldy     #2              ;length (short)
50F5 8678             (        sound.asm):00078                 lda #120        ;low a
50F7 B751B2           (        sound.asm):00079                 sta freq
50FA BD514E           (        sound.asm):00080                 jsr sound_play2
50FD 3522             (        sound.asm):00081                 puls y,a
50FF 39               (        sound.asm):00082                 rts     
                      (        sound.asm):00083                 
                      (        sound.asm):00084         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        sound.asm):00085         ;multiplies y times 6. used by sound_play2
                      (        sound.asm):00086         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
5100                  (        sound.asm):00087         ytimes6
5100 3406             (        sound.asm):00088                 pshs d
5102 1E20             (        sound.asm):00089                 exg y,d  ; y->d
5104 FD52B1           (        sound.asm):00090                 std temp_word
5107 108E0004         (        sound.asm):00091                 ldy #4
510B F352B1           (        sound.asm):00092         @lp addd temp_word      
510E 313F             (        sound.asm):00093                 leay -1,y
5110 108C0000         (        sound.asm):00094                 cmpy #0
5114 26F5             (        sound.asm):00095                 bne @lp
5116 1E02             (        sound.asm):00096                 exg d,y ; d->y
5118 3506             (        sound.asm):00097                 puls d
511A 39               (        sound.asm):00098                 rts
                      (        sound.asm):00099         
                      (        sound.asm):00100         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        sound.asm):00101         ;PLAYS A TONE WHOSE INFO IS STORED IN THE 
                      (        sound.asm):00102         ;SND DATA STRUCTURE
                      (        sound.asm):00103         ; Y CONTAINS THE NUMBER OF TIMES TO LOOP
                      (        sound.asm):00104         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
511B                  (        sound.asm):00105         sound_play
511B 3436             (        sound.asm):00106                 pshs d,x,y
                      (        sound.asm):00107                 ;setup snd
511D B6FF01           (        sound.asm):00108                 lda PIA_CTRL1
5120 84F7             (        sound.asm):00109                 anda #$f7               ;reset mux bit (why?)
5122 B7FF01           (        sound.asm):00110                 sta PIA_CTRL1   ; (sound to spkr?)
5125 B6FF03           (        sound.asm):00111                 lda PIA_CTRL2   
5128 84F7             (        sound.asm):00112                 anda #$f7
512A B7FF03           (        sound.asm):00113                 sta PIA_CTRL2 ; (sound on?)
512D B6FF23           (        sound.asm):00114                 lda PIA_SND_ENABLE
5130 8A08             (        sound.asm):00115                 ora #8                  ; get bit 6
5132 B7FF23           (        sound.asm):00116                 sta PIA_SND_ENABLE
                      (        sound.asm):00117                 ;main sound loop - the delay which 
                      (        sound.asm):00118                 ;controls the length of the sound
                      (        sound.asm):00119                 ;ldy snd_data   ; load repeat count (now supplied by caller)
5135 BE51A8           (        sound.asm):00120         @o      ldx     snd_data+3      ; load start addr
5138 A680             (        sound.asm):00121         @i      lda ,x+                 ; get next byte
513A 84FC             (        sound.asm):00122                 anda #$fc               ; reset 2 ls bits
513C B7FF20           (        sound.asm):00123                 sta     PIA_DATA
513F BD5198           (        sound.asm):00124                 jsr snd_delay   ; use delay to control freq
5142 BC51AA           (        sound.asm):00125                 cmpx snd_data+5 ; test for end addr
5145 26F1             (        sound.asm):00126                 bne @i                  ; keep going
5147 313F             (        sound.asm):00127                 leay -1,y               ; dec main lp countr (sets z flag)
5149 26EA             (        sound.asm):00128                 bne @o                  ; start over at beginning of sound data
514B 3536             (        sound.asm):00129                 puls d,x,y
514D 39               (        sound.asm):00130                 rts     
                      (        sound.asm):00131                 
                      (        sound.asm):00132         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        sound.asm):00133         ; plays a tone 
                      (        sound.asm):00134         ; freq location contains frequency
                      (        sound.asm):00135         ; sound_length contains the number of times to loop
                      (        sound.asm):00136         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
514E                  (        sound.asm):00137         sound_play2
                      (        sound.asm):00138                 ;adjust the length based on freq
514E B651B3           (        sound.asm):00139                 lda sound_length
5151 B752AD           (        sound.asm):00140                 sta dividend
5154 F651B2           (        sound.asm):00141                 ldb freq
5157 F752AE           (        sound.asm):00142                 stb divisor
515A BD3131           (        sound.asm):00143                 jsr div8
515D B752B0           (        sound.asm):00144                 sta quotient 
                      (        sound.asm):00145                 ;main sound loop - the delay which 
5160 10BE52AF         (        sound.asm):00146                 ldy quotient_16
5164 BD5100           (        sound.asm):00147                 jsr ytimes6
                      (        sound.asm):00148                 ;setup snd
                      (        sound.asm):00149                 ;lda #65
                      (        sound.asm):00150                 ;sta $400
5167 B6FF01           (        sound.asm):00151                 lda PIA_CTRL1
516A 84F7             (        sound.asm):00152                 anda #$f7               ;reset mux bit (why?)
516C B7FF01           (        sound.asm):00153                 sta PIA_CTRL1   ; (sound to spkr?)
                      (        sound.asm):00154                 ;lda #66
                      (        sound.asm):00155                 ;sta $400
516F B6FF03           (        sound.asm):00156                 lda PIA_CTRL2   
5172 84F7             (        sound.asm):00157                 anda #$f7
5174 B7FF03           (        sound.asm):00158                 sta PIA_CTRL2   ; (sound on?)
                      (        sound.asm):00159                 ;lda #67
                      (        sound.asm):00160                 ;sta $400
5177 B6FF23           (        sound.asm):00161                 lda PIA_SND_ENABLE
517A 8A08             (        sound.asm):00162                 ora #8                  ; get bit 6
517C B7FF23           (        sound.asm):00163                 sta PIA_SND_ENABLE
                      (        sound.asm):00164                 ;lda #68
                      (        sound.asm):00165                 ;sta $400
                      (        sound.asm):00166                 ;main loop
517F 3121             (        sound.asm):00167                 leay 1,y                ;make sure y is not 0
5181 BE51A8           (        sound.asm):00168         @o      ldx     snd_data+3      ; load start addr
5184 A680             (        sound.asm):00169         @i      lda ,x+                 ; get next byte
5186 84FC             (        sound.asm):00170                 anda #$fc               ; reset 2 ls bits
5188 B7FF20           (        sound.asm):00171                 sta     PIA_DATA
518B BD5198           (        sound.asm):00172                 jsr snd_delay   ; use delay to control freq
518E BC51AA           (        sound.asm):00173                 cmpx snd_data+5 ; test for end addr
5191 26F1             (        sound.asm):00174                 bne @i                  ; keep going
5193 313F             (        sound.asm):00175                 leay -1,y               ; dec main lp countr (sets z flag)
5195 26EA             (        sound.asm):00176                 bne @o                  ; start over at beginning of sound data
5197 39               (        sound.asm):00177                 rts
                      (        sound.asm):00178                 
                      (        sound.asm):00179         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        sound.asm):00180         ;       WASTE TIME
                      (        sound.asm):00181         ;       AN EMPTY LOOP TO WASTE TIME. 
                      (        sound.asm):00182         ;       THIS ROUTINE WILL GET CALLED 4 TIMES
                      (        sound.asm):00183         ;       PER SINE WAVE CYCLE.
                      (        sound.asm):00184         ;
                      (        sound.asm):00185         ;       CYCLES: 14 + 11 TIME THROUGH THE LOOP
                      (        sound.asm):00186         ;       25 CYCLES = 35,600 HZ
                      (        sound.asm):00187         ;       
                      (        sound.asm):00188         ;       @440HZ EACH CYCLE NEEDS TO TAKE .0022 seconds
                      (        sound.asm):00189         ;       THAT MEANS 4 LOOPS OF .00056 SECS
                      (        sound.asm):00190         ;       TO MAKE EACH DELAY TAKE .00056 SECONDS
                      (        sound.asm):00191         ;       THE LOOP COUNT NEEDS TO BE 500 cycles long
                      (        sound.asm):00192         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
5198                  (        sound.asm):00193         snd_delay:
5198 3402             (        sound.asm):00194                 pshs a
519A B651B6           (        sound.asm):00195                 lda delay_value
519D 4A               (        sound.asm):00196         @lp     deca
519E 8100             (        sound.asm):00197                 cmpa #0
51A0 26FB             (        sound.asm):00198                 bne @lp
51A2 3502             (        sound.asm):00199                 puls a
51A4 39               (        sound.asm):00200                 rts             
                      (        sound.asm):00201                 
                      (        sound.asm):00202         
                      (        sound.asm):00203         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        sound.asm):00204         ; sound data
                      (        sound.asm):00205         ; 0-1   repeat count.  0 = 65535
                      (        sound.asm):00206         ; 2             delay count
                      (        sound.asm):00207         ; 3-4   start_addr
                      (        sound.asm):00208         ; 5-6   end_addr
                      (        sound.asm):00209         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;      
51A5                  (        sound.asm):00210         snd_data        
51A5 0010             (        sound.asm):00211                 .dw 0x10                                ;repeat count
51A7 0F               (        sound.asm):00212                 .db 0x0f                                ;delay
                      (        sound.asm):00213                 ;.dw snd_sine_start     
                      (        sound.asm):00214                 ;.dw snd_sine_end
51A8 51AC             (        sound.asm):00215                 .dw snd_tabl    
51AA 51B0             (        sound.asm):00216                 .dw snd_tabl+4          
                      (        sound.asm):00217                 
                      (        sound.asm):00218         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        sound.asm):00219         ;data for sine wave
                      (        sound.asm):00220         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
51AC                  (        sound.asm):00221         snd_tabl
51AC FE027F02         (        sound.asm):00222                 .db 0xfe,0x02,0x7f,0x02         ; data basic feeds to ff20 (sound)
                      (        sound.asm):00223         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      (        sound.asm):00224         ; delay values shown on left will result in the following note
                      (        sound.asm):00225         ; note these are for the coco2 running at 0.89mhz coco3 values
                      (        sound.asm):00226         ; will be different because of the faster clock speed
                      (        sound.asm):00227         ; 60 = a#
                      (        sound.asm):00228         ; 64 = a (880 hz)
                      (        sound.asm):00229         ; 69 = g# (830 hz)
                      (        sound.asm):00230         ; 73 = g (783 hz)
                      (        sound.asm):00231         ; 78 = f# (749 hz)
                      (        sound.asm):00232         ; 83 = f (698 hz)
                      (        sound.asm):00233         ; 88 = e (659 hz)
                      (        sound.asm):00234         ; 94 = d# (622 hz)
                      (        sound.asm):00235         ; 100 = d (587 hz)
                      (        sound.asm):00236         ; 106 = c# (55 4hz)
                      (        sound.asm):00237         ; 110 = middle c (523 hz)
                      (        sound.asm):00238         ; 120 = b
                      (        sound.asm):00239         ; 127 = a#
                      (        sound.asm):00240         ; 135 = a (440hz)
                      (        sound.asm):00241         ;
                      (        sound.asm):00242         ; to get the outer loop time (the tone length), just use
                      (        sound.asm):00243         ; the frequency from the table above (will require 16 bits)
                      (        sound.asm):00244         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
51B0 0000             (        sound.asm):00245         fill_freq .dw 0x0000    
51B2 01               (        sound.asm):00246         freq .db 0x01   
51B3 00               (        sound.asm):00247         sound_length .db 0x00
51B4 00FF             (        sound.asm):00248         tone_length .dw 0x00ff
51B6 80               (        sound.asm):00249         delay_value .db 128
                      (        sound.asm):00250         
51B7                  (        sound.asm):00251         win_music
51B7 09               (        sound.asm):00252                 .db 9
51B8 00               (        sound.asm):00253                 .db 0
51B9 70               (        sound.asm):00254                 .db $70  ; C
51BA 003C             (        sound.asm):00255                 .dw 60  
51BC 52               (        sound.asm):00256                 .db $52
51BD 0046             (        sound.asm):00257                 .dw 70
51BF 3F               (        sound.asm):00258                 .db $3f
51C0 005A             (        sound.asm):00259                 .dw 90
51C2 70               (        sound.asm):00260                 .db $70
51C3 003C             (        sound.asm):00261                 .dw 60
51C5 52               (        sound.asm):00262                 .db $52
51C6 0046             (        sound.asm):00263                 .dw 70
51C8 3F               (        sound.asm):00264                 .db $3F
51C9 005A             (        sound.asm):00265                 .dw 90
51CB 70               (        sound.asm):00266                 .db $70
51CC 003C             (        sound.asm):00267                 .dw 60
51CE 52               (        sound.asm):00268                 .db $52
51CF 0046             (        sound.asm):00269                 .dw 70
51D1 3F               (        sound.asm):00270                 .db $3F
51D2 005A             (        sound.asm):00271                 .dw 90
                      (        sound.asm):00272                 
51D4                  (        sound.asm):00273         wumpus_music
51D4 10               (        sound.asm):00274                 .db 16  ; num notes
51D5 00               (        sound.asm):00275                 .db 0  ; curNote
51D6 EF               (        sound.asm):00276                 .db $ef ; f
51D7 004B             (        sound.asm):00277                 .dw 75
51D9 00               (        sound.asm):00278                 .db 0  ; pause
51DA 0000             (        sound.asm):00279                 .dw 0
51DC EF               (        sound.asm):00280                 .db $ef ;f
51DD 0032             (        sound.asm):00281                 .dw 50
51DF 00               (        sound.asm):00282                 .db 0 ; pause
51E0 0000             (        sound.asm):00283                 .dw 0
51E2 EF               (        sound.asm):00284                 .db $ef ; f
51E3 0019             (        sound.asm):00285                 .dw 25
51E5 00               (        sound.asm):00286                 .db 0 ; pause
51E6 0000             (        sound.asm):00287                 .dw 0
51E8 EF               (        sound.asm):00288                 .db $ef  ; f
51E9 004B             (        sound.asm):00289                 .dw 75
51EB CD               (        sound.asm):00290                 .db $cd  ; g#
51EC 0032             (        sound.asm):00291                 .dw 50
51EE D5               (        sound.asm):00292                 .db $d5  ; g
51EF 0019             (        sound.asm):00293                 .dw 25
51F1 00               (        sound.asm):00294                 .db 0 ; pause
51F2 0000             (        sound.asm):00295                 .dw 0
51F4 D5               (        sound.asm):00296                 .db $d5  ; g
51F5 0032             (        sound.asm):00297                 .dw 50
51F7 EF               (        sound.asm):00298                 .db $ef  ;f
51F8 0019             (        sound.asm):00299                 .dw 25
51FA 00               (        sound.asm):00300                 .db 0  ; pause
51FB 0000             (        sound.asm):00301                 .dw 0
51FD EF               (        sound.asm):00302                 .db $ef ; f
51FE 0032             (        sound.asm):00303                 .dw 50
5200 FF               (        sound.asm):00304                 .db $ff ;e 
5201 0019             (        sound.asm):00305                 .dw 25
5203 EF               (        sound.asm):00306                 .db $ef ;f 
5204 004B             (        sound.asm):00307                 .dw 75
                      (        sound.asm):00308         
5206                  (        sound.asm):00309         fall_music
5206 11               (        sound.asm):00310                 .db 17  ; num sounds
5207 00               (        sound.asm):00311                 .db 0 ; cursound
5208 0A               (        sound.asm):00312                 .db 10
5209 0050             (        sound.asm):00313                 .dw 80
520B 0A               (        sound.asm):00314                 .db 10
520C 0050             (        sound.asm):00315                 .dw 80
520E 0B               (        sound.asm):00316                 .db 11
520F 0050             (        sound.asm):00317                 .dw 80
5211 0B               (        sound.asm):00318                 .db 11
5212 0046             (        sound.asm):00319                 .dw 70
5214 0C               (        sound.asm):00320                 .db 12
5215 0032             (        sound.asm):00321                 .dw 50
5217 0D               (        sound.asm):00322                 .db 13
5218 002D             (        sound.asm):00323                 .dw 45
521A 0E               (        sound.asm):00324                 .db 14
521B 0032             (        sound.asm):00325                 .dw 50
521D 0F               (        sound.asm):00326                 .db 15
521E 0032             (        sound.asm):00327                 .dw 50
5220 10               (        sound.asm):00328                 .db 16
5221 0032             (        sound.asm):00329                 .dw 50
5223 11               (        sound.asm):00330                 .db 17
5224 002D             (        sound.asm):00331                 .dw 45
5226 12               (        sound.asm):00332                 .db 18
5227 0028             (        sound.asm):00333                 .dw 40
5229 13               (        sound.asm):00334                 .db 19
522A 0028             (        sound.asm):00335                 .dw 40
522C 14               (        sound.asm):00336                 .db 20
522D 0028             (        sound.asm):00337                 .dw 40
522F 15               (        sound.asm):00338                 .db 21
5230 0028             (        sound.asm):00339                 .dw 40
5232 16               (        sound.asm):00340                 .db 22
5233 0028             (        sound.asm):00341                 .dw 40
5235 17               (        sound.asm):00342                 .db 23
5236 0028             (        sound.asm):00343                 .dw 40
5238 18               (        sound.asm):00344                 .db 24
5239 0028             (        sound.asm):00345                 .dw 40
523B 19               (        sound.asm):00346                 .db 25
523C 0028             (        sound.asm):00347                 .dw 40
523E 1A               (        sound.asm):00348                 .db 26
523F 0028             (        sound.asm):00349                 .dw 40
5241 1B               (        sound.asm):00350                 .db 27
5242 0028             (        sound.asm):00351                 .dw 40
                      (        sound.asm):00352                 
5244                  (        sound.asm):00353         intro_music
5244 1A               (        sound.asm):00354                 .db 26
5245 00               (        sound.asm):00355                 .db 0
5246 86               (        sound.asm):00356                 .db $86  ; A
5247 004B             (        sound.asm):00357                 .dw 75  
5249 77               (        sound.asm):00358                 .db $77  ; B
524A 004B             (        sound.asm):00359                 .dw 75  
524C 70               (        sound.asm):00360                 .db $70  ; C
524D 004B             (        sound.asm):00361                 .dw 75  
524F 64               (        sound.asm):00362                 .db $64  ; D
5250 004B             (        sound.asm):00363                 .dw 75          
5252 57               (        sound.asm):00364                 .db $57  ; E
5253 004B             (        sound.asm):00365                 .dw 75                  
5255 70               (        sound.asm):00366                 .db $70  ; C
5256 004B             (        sound.asm):00367                 .dw 75  
5258 57               (        sound.asm):00368                 .db $57  ; E
5259 007D             (        sound.asm):00369                 .dw 125                 
525B 5E               (        sound.asm):00370                 .db $5E  ; e flat
525C 004B             (        sound.asm):00371                 .dw 75
525E 77               (        sound.asm):00372                 .db $77  ; B
525F 004B             (        sound.asm):00373                 .dw 75  
5261 5E               (        sound.asm):00374                 .db $5e  ; e flat
5262 007D             (        sound.asm):00375                 .dw 125
5264 64               (        sound.asm):00376                 .db $64  ; D
5265 004B             (        sound.asm):00377                 .dw 75 
5267 7E               (        sound.asm):00378                 .db $7E  ; B flat
5268 004B             (        sound.asm):00379                 .dw 75 
526A 64               (        sound.asm):00380                 .db $64  ; D
526B 007D             (        sound.asm):00381                 .dw 125 
526D 86               (        sound.asm):00382                 .db $86  ; A
526E 004B             (        sound.asm):00383                 .dw 75  
5270 77               (        sound.asm):00384                 .db $77  ; B
5271 004B             (        sound.asm):00385                 .dw 75  
5273 70               (        sound.asm):00386                 .db $70  ; C
5274 004B             (        sound.asm):00387                 .dw 75  
5276 64               (        sound.asm):00388                 .db $64  ; D
5277 004B             (        sound.asm):00389                 .dw 75          
5279 57               (        sound.asm):00390                 .db $57  ; E
527A 004B             (        sound.asm):00391                 .dw 75                  
527C 70               (        sound.asm):00392                 .db $70  ; C
527D 004B             (        sound.asm):00393                 .dw 75
527F 86               (        sound.asm):00394                 .db $86  ; A
5280 004B             (        sound.asm):00395                 .dw 75 
5282 40               (        sound.asm):00396                 .db $40  ; A high
5283 0078             (        sound.asm):00397                 .dw 120  
5285 48               (        sound.asm):00398                 .db $48  ; G high
5286 0064             (        sound.asm):00399                 .dw 100                 
5288 57               (        sound.asm):00400                 .db $57  ; E
5289 004B             (        sound.asm):00401                 .dw 75                  
528B 70               (        sound.asm):00402                 .db $70  ; C
528C 0046             (        sound.asm):00403                 .dw 70  
528E 57               (        sound.asm):00404                 .db $57  ; E
528F 004B             (        sound.asm):00405                 .dw 75  
5291 48               (        sound.asm):00406                 .db $48  ; G high
5292 0096             (        sound.asm):00407                 .dw 150         
                      (        amode.asm):01801                 
5294 09               (        amode.asm):01802         player_room .db 9
5295 00               (        amode.asm):01803         move_dir .db 0 ; direction offset for move/shoot
5296 00               (        amode.asm):01804         shooting .db 0
5297 3F               (        amode.asm):01805         last_room .db 63
5298 00000000         (        amode.asm):01806         transparent .db 0,0,0,0 ; address of mask
529C C0300C03         (        amode.asm):01807         white_mask .db $C0,$30,12,3
52A0 80200802         (        amode.asm):01808         orange_mask .db 80h,20h,8,2
52A4 0000             (        amode.asm):01809         temp_lower .dw 0
52A6 0000             (        amode.asm):01810         temp_upper .dw 0
52A8 00               (        amode.asm):01811         wumpus_wins .db 0
52A9 00               (        amode.asm):01812         player_wins .db 0
52AA 00               (        amode.asm):01813         pit_wins .db 0
52AB 01               (        amode.asm):01814         skill_level .db 1 ; 0,1, or 2
52AC E4               (        amode.asm):01815         color .db $E4 ; 11100100        
52AD 00               (        amode.asm):01816         dividend        .db 0x00
52AE 00               (        amode.asm):01817         divisor         .db 0x00
52AF 00               (        amode.asm):01818         quotient_16 .db 0x00 ; padding (for loading it into y)
52B0 00               (        amode.asm):01819         quotient        .db 0x00
52B1 0000             (        amode.asm):01820         temp_word       .dw 0
                      (        amode.asm):01821         ;1st byte is number of chars
                      (        amode.asm):01822         ;each byte is a base 10 digit
52B3 03000000         (        amode.asm):01823         pit_score .db 3,0,0,0
52B7 03000000         (        amode.asm):01824         wump_score .db 3,0,0,0
52BB 03000000         (        amode.asm):01825         player_score .db 3,0,0,0
                      (        amode.asm):01826         
52BF 0000             (        amode.asm):01827         sstack_save .dw 0
52C1 0000             (        amode.asm):01828         ustack_save .dw 0
52C3 0000             (        amode.asm):01829         rv_save .dw 0 ; reset vector save
                      (        amode.asm):01830         
                      (        amode.asm):01831                 END START
